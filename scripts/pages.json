[{"name":"CENTER","description":"io.github.thibaultbee.streampack.views.PreviewView.Position.CENTER","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-position/-c-e-n-t-e-r/index.html","searchKeys":["CENTER","CENTER","io.github.thibaultbee.streampack.views.PreviewView.Position.CENTER"]},{"name":"END","description":"io.github.thibaultbee.streampack.views.PreviewView.Position.END","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-position/-e-n-d/index.html","searchKeys":["END","END","io.github.thibaultbee.streampack.views.PreviewView.Position.END"]},{"name":"FILL","description":"io.github.thibaultbee.streampack.views.PreviewView.ScaleMode.FILL","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-scale-mode/-f-i-l-l/index.html","searchKeys":["FILL","FILL","io.github.thibaultbee.streampack.views.PreviewView.ScaleMode.FILL"]},{"name":"FIT","description":"io.github.thibaultbee.streampack.views.PreviewView.ScaleMode.FIT","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-scale-mode/-f-i-t/index.html","searchKeys":["FIT","FIT","io.github.thibaultbee.streampack.views.PreviewView.ScaleMode.FIT"]},{"name":"START","description":"io.github.thibaultbee.streampack.views.PreviewView.Position.START","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-position/-s-t-a-r-t/index.html","searchKeys":["START","START","io.github.thibaultbee.streampack.views.PreviewView.Position.START"]},{"name":"abstract class BaseScreenRecorderService(notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0, notificationIconResourceId: Int = R.drawable.ic_baseline_linked_camera_24) : Service","description":"io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService","location":"core/io.github.thibaultbee.streampack.streamers.services/-base-screen-recorder-service/index.html","searchKeys":["BaseScreenRecorderService","abstract class BaseScreenRecorderService(notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0, notificationIconResourceId: Int = R.drawable.ic_baseline_linked_camera_24) : Service","io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService"]},{"name":"abstract class BaseStreamer(context: Context, audioSource: IAudioSource?, videoSource: IVideoSource?, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null) : EventHandler, IStreamer","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/index.html","searchKeys":["BaseStreamer","abstract class BaseStreamer(context: Context, audioSource: IAudioSource?, videoSource: IVideoSource?, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null) : EventHandler, IStreamer","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer"]},{"name":"abstract class BitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","description":"io.github.thibaultbee.streampack.regulator.BitrateRegulator","location":"core/io.github.thibaultbee.streampack.regulator/-bitrate-regulator/index.html","searchKeys":["BitrateRegulator","abstract class BitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","io.github.thibaultbee.streampack.regulator.BitrateRegulator"]},{"name":"abstract fun configure(audioConfig: AudioConfig)","description":"io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.configure","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-streamer/configure.html","searchKeys":["configure","abstract fun configure(audioConfig: AudioConfig)","io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.configure"]},{"name":"abstract fun configure(audioConfig: AudioConfig, videoConfig: VideoConfig)","description":"io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.configure","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-streamer/configure.html","searchKeys":["configure","abstract fun configure(audioConfig: AudioConfig, videoConfig: VideoConfig)","io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.configure"]},{"name":"abstract fun configure(videoConfig: VideoConfig)","description":"io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.configure","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-streamer/configure.html","searchKeys":["configure","abstract fun configure(videoConfig: VideoConfig)","io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.configure"]},{"name":"abstract fun d(tag: String, message: String, tr: Throwable? = null)","description":"io.github.thibaultbee.streampack.logger.ILogger.d","location":"core/io.github.thibaultbee.streampack.logger/-i-logger/d.html","searchKeys":["d","abstract fun d(tag: String, message: String, tr: Throwable? = null)","io.github.thibaultbee.streampack.logger.ILogger.d"]},{"name":"abstract fun disconnect()","description":"io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer.disconnect","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-live-streamer/disconnect.html","searchKeys":["disconnect","abstract fun disconnect()","io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer.disconnect"]},{"name":"abstract fun e(tag: String, message: String, tr: Throwable? = null)","description":"io.github.thibaultbee.streampack.logger.ILogger.e","location":"core/io.github.thibaultbee.streampack.logger/-i-logger/e.html","searchKeys":["e","abstract fun e(tag: String, message: String, tr: Throwable? = null)","io.github.thibaultbee.streampack.logger.ILogger.e"]},{"name":"abstract fun getSupportedBitrates(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.IAVConfigurationHelper.getSupportedBitrates","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-a-v-configuration-helper/get-supported-bitrates.html","searchKeys":["getSupportedBitrates","abstract fun getSupportedBitrates(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.streamers.helpers.IAVConfigurationHelper.getSupportedBitrates"]},{"name":"abstract fun getSupportedByteFormats(): List<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.IAudioConfigurationHelper.getSupportedByteFormats","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-audio-configuration-helper/get-supported-byte-formats.html","searchKeys":["getSupportedByteFormats","abstract fun getSupportedByteFormats(): List<Int>","io.github.thibaultbee.streampack.streamers.helpers.IAudioConfigurationHelper.getSupportedByteFormats"]},{"name":"abstract fun getSupportedInputChannelRange(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.IAudioConfigurationHelper.getSupportedInputChannelRange","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-audio-configuration-helper/get-supported-input-channel-range.html","searchKeys":["getSupportedInputChannelRange","abstract fun getSupportedInputChannelRange(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.streamers.helpers.IAudioConfigurationHelper.getSupportedInputChannelRange"]},{"name":"abstract fun getSupportedSampleRates(mimeType: String): List<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.IAudioConfigurationHelper.getSupportedSampleRates","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-audio-configuration-helper/get-supported-sample-rates.html","searchKeys":["getSupportedSampleRates","abstract fun getSupportedSampleRates(mimeType: String): List<Int>","io.github.thibaultbee.streampack.streamers.helpers.IAudioConfigurationHelper.getSupportedSampleRates"]},{"name":"abstract fun i(tag: String, message: String, tr: Throwable? = null)","description":"io.github.thibaultbee.streampack.logger.ILogger.i","location":"core/io.github.thibaultbee.streampack.logger/-i-logger/i.html","searchKeys":["i","abstract fun i(tag: String, message: String, tr: Throwable? = null)","io.github.thibaultbee.streampack.logger.ILogger.i"]},{"name":"abstract fun newBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit): BitrateRegulator","description":"io.github.thibaultbee.streampack.regulator.IBitrateRegulatorFactory.newBitrateRegulator","location":"core/io.github.thibaultbee.streampack.regulator/-i-bitrate-regulator-factory/new-bitrate-regulator.html","searchKeys":["newBitrateRegulator","abstract fun newBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit): BitrateRegulator","io.github.thibaultbee.streampack.regulator.IBitrateRegulatorFactory.newBitrateRegulator"]},{"name":"abstract fun onError(error: StreamPackError)","description":"io.github.thibaultbee.streampack.listeners.OnErrorListener.onError","location":"core/io.github.thibaultbee.streampack.listeners/-on-error-listener/on-error.html","searchKeys":["onError","abstract fun onError(error: StreamPackError)","io.github.thibaultbee.streampack.listeners.OnErrorListener.onError"]},{"name":"abstract fun onFailed(message: String)","description":"io.github.thibaultbee.streampack.listeners.OnConnectionListener.onFailed","location":"core/io.github.thibaultbee.streampack.listeners/-on-connection-listener/on-failed.html","searchKeys":["onFailed","abstract fun onFailed(message: String)","io.github.thibaultbee.streampack.listeners.OnConnectionListener.onFailed"]},{"name":"abstract fun onLost(message: String)","description":"io.github.thibaultbee.streampack.listeners.OnConnectionListener.onLost","location":"core/io.github.thibaultbee.streampack.listeners/-on-connection-listener/on-lost.html","searchKeys":["onLost","abstract fun onLost(message: String)","io.github.thibaultbee.streampack.listeners.OnConnectionListener.onLost"]},{"name":"abstract fun onSuccess()","description":"io.github.thibaultbee.streampack.listeners.OnConnectionListener.onSuccess","location":"core/io.github.thibaultbee.streampack.listeners/-on-connection-listener/on-success.html","searchKeys":["onSuccess","abstract fun onSuccess()","io.github.thibaultbee.streampack.listeners.OnConnectionListener.onSuccess"]},{"name":"abstract fun release()","description":"io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.release","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-streamer/release.html","searchKeys":["release","abstract fun release()","io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.release"]},{"name":"abstract fun startPreview(previewSurface: Surface, cameraId: String = camera)","description":"io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.startPreview","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-camera-streamer/start-preview.html","searchKeys":["startPreview","abstract fun startPreview(previewSurface: Surface, cameraId: String = camera)","io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.startPreview"]},{"name":"abstract fun stopPreview()","description":"io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.stopPreview","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-camera-streamer/stop-preview.html","searchKeys":["stopPreview","abstract fun stopPreview()","io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.stopPreview"]},{"name":"abstract fun v(tag: String, message: String, tr: Throwable? = null)","description":"io.github.thibaultbee.streampack.logger.ILogger.v","location":"core/io.github.thibaultbee.streampack.logger/-i-logger/v.html","searchKeys":["v","abstract fun v(tag: String, message: String, tr: Throwable? = null)","io.github.thibaultbee.streampack.logger.ILogger.v"]},{"name":"abstract fun w(tag: String, message: String, tr: Throwable? = null)","description":"io.github.thibaultbee.streampack.logger.ILogger.w","location":"core/io.github.thibaultbee.streampack.logger/-i-logger/w.html","searchKeys":["w","abstract fun w(tag: String, message: String, tr: Throwable? = null)","io.github.thibaultbee.streampack.logger.ILogger.w"]},{"name":"abstract suspend fun connect(url: String)","description":"io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer.connect","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-live-streamer/connect.html","searchKeys":["connect","abstract suspend fun connect(url: String)","io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer.connect"]},{"name":"abstract suspend fun startStream()","description":"io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.startStream","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-streamer/start-stream.html","searchKeys":["startStream","abstract suspend fun startStream()","io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.startStream"]},{"name":"abstract suspend fun startStream(url: String)","description":"io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer.startStream","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-live-streamer/start-stream.html","searchKeys":["startStream","abstract suspend fun startStream(url: String)","io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer.startStream"]},{"name":"abstract suspend fun stopStream()","description":"io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.stopStream","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-streamer/stop-stream.html","searchKeys":["stopStream","abstract suspend fun stopStream()","io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.stopStream"]},{"name":"abstract val audio: IAudioConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.IConfigurationHelper.audio","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-configuration-helper/audio.html","searchKeys":["audio","abstract val audio: IAudioConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.IConfigurationHelper.audio"]},{"name":"abstract val audio: IAudioSettings","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseStreamerSettings.audio","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-base-streamer-settings/audio.html","searchKeys":["audio","abstract val audio: IAudioSettings","io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseStreamerSettings.audio"]},{"name":"abstract val availableRatioRange: Range<Float>","description":"io.github.thibaultbee.streampack.utils.Zoom.availableRatioRange","location":"core/io.github.thibaultbee.streampack.utils/-zoom/available-ratio-range.html","searchKeys":["availableRatioRange","abstract val availableRatioRange: Range<Float>","io.github.thibaultbee.streampack.utils.Zoom.availableRatioRange"]},{"name":"abstract val camera: CameraSettings","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseCameraStreamerSettings.camera","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-base-camera-streamer-settings/camera.html","searchKeys":["camera","abstract val camera: CameraSettings","io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseCameraStreamerSettings.camera"]},{"name":"abstract val helper: IConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.helper","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-streamer/helper.html","searchKeys":["helper","abstract val helper: IConfigurationHelper","io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.helper"]},{"name":"abstract val isConnected: Boolean","description":"io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer.isConnected","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-live-streamer/is-connected.html","searchKeys":["isConnected","abstract val isConnected: Boolean","io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer.isConnected"]},{"name":"abstract val settings: IBaseCameraStreamerSettings","description":"io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.settings","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-camera-streamer/settings.html","searchKeys":["settings","abstract val settings: IBaseCameraStreamerSettings","io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.settings"]},{"name":"abstract val settings: IBaseStreamerSettings","description":"io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.settings","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-streamer/settings.html","searchKeys":["settings","abstract val settings: IBaseStreamerSettings","io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.settings"]},{"name":"abstract val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.streamers.helpers.IAVConfigurationHelper.supportedEncoders","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-a-v-configuration-helper/supported-encoders.html","searchKeys":["supportedEncoders","abstract val supportedEncoders: List<String>","io.github.thibaultbee.streampack.streamers.helpers.IAVConfigurationHelper.supportedEncoders"]},{"name":"abstract val video: IVideoConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.IConfigurationHelper.video","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-configuration-helper/video.html","searchKeys":["video","abstract val video: IVideoConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.IConfigurationHelper.video"]},{"name":"abstract val video: IVideoSettings","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseStreamerSettings.video","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-base-streamer-settings/video.html","searchKeys":["video","abstract val video: IVideoSettings","io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseStreamerSettings.video"]},{"name":"abstract var bitrate: Int","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IAudioSettings.bitrate","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-audio-settings/bitrate.html","searchKeys":["bitrate","abstract var bitrate: Int","io.github.thibaultbee.streampack.streamers.interfaces.settings.IAudioSettings.bitrate"]},{"name":"abstract var bitrate: Int","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IVideoSettings.bitrate","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-video-settings/bitrate.html","searchKeys":["bitrate","abstract var bitrate: Int","io.github.thibaultbee.streampack.streamers.interfaces.settings.IVideoSettings.bitrate"]},{"name":"abstract var camera: String","description":"io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.camera","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-camera-streamer/camera.html","searchKeys":["camera","abstract var camera: String","io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.camera"]},{"name":"abstract var file: File?","description":"io.github.thibaultbee.streampack.streamers.interfaces.IFileStreamer.file","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-file-streamer/file.html","searchKeys":["file","abstract var file: File?","io.github.thibaultbee.streampack.streamers.interfaces.IFileStreamer.file"]},{"name":"abstract var isMuted: Boolean","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IAudioSettings.isMuted","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-audio-settings/is-muted.html","searchKeys":["isMuted","abstract var isMuted: Boolean","io.github.thibaultbee.streampack.streamers.interfaces.settings.IAudioSettings.isMuted"]},{"name":"abstract var onConnectionListener: OnConnectionListener?","description":"io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer.onConnectionListener","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-live-streamer/on-connection-listener.html","searchKeys":["onConnectionListener","abstract var onConnectionListener: OnConnectionListener?","io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer.onConnectionListener"]},{"name":"abstract var onErrorListener: OnErrorListener?","description":"io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.onErrorListener","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-streamer/on-error-listener.html","searchKeys":["onErrorListener","abstract var onErrorListener: OnErrorListener?","io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.onErrorListener"]},{"name":"abstract var outputStream: OutputStream?","description":"io.github.thibaultbee.streampack.streamers.interfaces.IFileStreamer.outputStream","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-file-streamer/output-stream.html","searchKeys":["outputStream","abstract var outputStream: OutputStream?","io.github.thibaultbee.streampack.streamers.interfaces.IFileStreamer.outputStream"]},{"name":"abstract var zoomRatio: Float","description":"io.github.thibaultbee.streampack.utils.Zoom.zoomRatio","location":"core/io.github.thibaultbee.streampack.utils/-zoom/zoom-ratio.html","searchKeys":["zoomRatio","abstract var zoomRatio: Float","io.github.thibaultbee.streampack.utils.Zoom.zoomRatio"]},{"name":"class AudioConfig(val mimeType: String = MediaFormat.MIMETYPE_AUDIO_AAC, val startBitrate: Int = 128000, val sampleRate: Int = getDefaultSampleRate(mimeType), val channelConfig: Int = AudioFormat.CHANNEL_IN_STEREO, val byteFormat: Int = AudioFormat.ENCODING_PCM_16BIT, val profile: Int = getDefaultProfile(mimeType), val enableEchoCanceler: Boolean = true, val enableNoiseSuppressor: Boolean = true) : Config","description":"io.github.thibaultbee.streampack.data.AudioConfig","location":"core/io.github.thibaultbee.streampack.data/-audio-config/index.html","searchKeys":["AudioConfig","class AudioConfig(val mimeType: String = MediaFormat.MIMETYPE_AUDIO_AAC, val startBitrate: Int = 128000, val sampleRate: Int = getDefaultSampleRate(mimeType), val channelConfig: Int = AudioFormat.CHANNEL_IN_STEREO, val byteFormat: Int = AudioFormat.ENCODING_PCM_16BIT, val profile: Int = getDefaultProfile(mimeType), val enableEchoCanceler: Boolean = true, val enableNoiseSuppressor: Boolean = true) : Config","io.github.thibaultbee.streampack.data.AudioConfig"]},{"name":"class AudioOnlyFlvFileStreamer(context: Context, initialOnErrorListener: OnErrorListener? = null) : BaseAudioOnlyFileStreamer","description":"io.github.thibaultbee.streampack.streamers.file.AudioOnlyFlvFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-audio-only-flv-file-streamer/index.html","searchKeys":["AudioOnlyFlvFileStreamer","class AudioOnlyFlvFileStreamer(context: Context, initialOnErrorListener: OnErrorListener? = null) : BaseAudioOnlyFileStreamer","io.github.thibaultbee.streampack.streamers.file.AudioOnlyFlvFileStreamer"]},{"name":"class AudioOnlyMp4FileStreamer(context: Context, initialOnErrorListener: OnErrorListener? = null) : BaseAudioOnlyFileStreamer","description":"io.github.thibaultbee.streampack.streamers.file.AudioOnlyMp4FileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-audio-only-mp4-file-streamer/index.html","searchKeys":["AudioOnlyMp4FileStreamer","class AudioOnlyMp4FileStreamer(context: Context, initialOnErrorListener: OnErrorListener? = null) : BaseAudioOnlyFileStreamer","io.github.thibaultbee.streampack.streamers.file.AudioOnlyMp4FileStreamer"]},{"name":"class AudioOnlyTsFileStreamer(context: Context, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, initialOnErrorListener: OnErrorListener? = null) : BaseAudioOnlyFileStreamer","description":"io.github.thibaultbee.streampack.streamers.file.AudioOnlyTsFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-audio-only-ts-file-streamer/index.html","searchKeys":["AudioOnlyTsFileStreamer","class AudioOnlyTsFileStreamer(context: Context, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, initialOnErrorListener: OnErrorListener? = null) : BaseAudioOnlyFileStreamer","io.github.thibaultbee.streampack.streamers.file.AudioOnlyTsFileStreamer"]},{"name":"class AudioStreamerConfigurationHelper(audioMuxerHelper: IAudioMuxerHelper) : IAudioConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-audio-streamer-configuration-helper/index.html","searchKeys":["AudioStreamerConfigurationHelper","class AudioStreamerConfigurationHelper(audioMuxerHelper: IAudioMuxerHelper) : IAudioConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper"]},{"name":"class BaseCameraStreamerSettings(audioSource: IAudioSource?, cameraSource: CameraSource, audioEncoder: AudioMediaCodecEncoder?, videoEncoder: VideoMediaCodecEncoder?) : BaseStreamerSettings, IBaseCameraStreamerSettings","description":"io.github.thibaultbee.streampack.streamers.settings.BaseCameraStreamerSettings","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-camera-streamer-settings/index.html","searchKeys":["BaseCameraStreamerSettings","class BaseCameraStreamerSettings(audioSource: IAudioSource?, cameraSource: CameraSource, audioEncoder: AudioMediaCodecEncoder?, videoEncoder: VideoMediaCodecEncoder?) : BaseStreamerSettings, IBaseCameraStreamerSettings","io.github.thibaultbee.streampack.streamers.settings.BaseCameraStreamerSettings"]},{"name":"class BaseStreamerAudioSettings(audioSource: IAudioSource?, audioEncoder: AudioMediaCodecEncoder?) : IAudioSettings","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerAudioSettings","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-audio-settings/index.html","searchKeys":["BaseStreamerAudioSettings","class BaseStreamerAudioSettings(audioSource: IAudioSource?, audioEncoder: AudioMediaCodecEncoder?) : IAudioSettings","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerAudioSettings"]},{"name":"class BaseStreamerVideoSettings(videoEncoder: VideoMediaCodecEncoder?) : IVideoSettings","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerVideoSettings","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-video-settings/index.html","searchKeys":["BaseStreamerVideoSettings","class BaseStreamerVideoSettings(videoEncoder: VideoMediaCodecEncoder?) : IVideoSettings","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerVideoSettings"]},{"name":"class CameraError(message: String) : StreamPackError","description":"io.github.thibaultbee.streampack.error.CameraError","location":"core/io.github.thibaultbee.streampack.error/-camera-error/index.html","searchKeys":["CameraError","class CameraError(message: String) : StreamPackError","io.github.thibaultbee.streampack.error.CameraError"]},{"name":"class CameraFlvFileStreamer(context: Context, enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null) : BaseCameraFileStreamer","description":"io.github.thibaultbee.streampack.streamers.file.CameraFlvFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-camera-flv-file-streamer/index.html","searchKeys":["CameraFlvFileStreamer","class CameraFlvFileStreamer(context: Context, enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null) : BaseCameraFileStreamer","io.github.thibaultbee.streampack.streamers.file.CameraFlvFileStreamer"]},{"name":"class CameraMp4FileStreamer(context: Context, enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null) : BaseCameraFileStreamer","description":"io.github.thibaultbee.streampack.streamers.file.CameraMp4FileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-camera-mp4-file-streamer/index.html","searchKeys":["CameraMp4FileStreamer","class CameraMp4FileStreamer(context: Context, enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null) : BaseCameraFileStreamer","io.github.thibaultbee.streampack.streamers.file.CameraMp4FileStreamer"]},{"name":"class CameraSettings(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.CameraSettings","location":"core/io.github.thibaultbee.streampack.utils/-camera-settings/index.html","searchKeys":["CameraSettings","class CameraSettings(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.CameraSettings"]},{"name":"class CameraStreamerConfigurationHelper(muxerHelper: IMuxerHelper) : StreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-camera-streamer-configuration-helper/index.html","searchKeys":["CameraStreamerConfigurationHelper","class CameraStreamerConfigurationHelper(muxerHelper: IMuxerHelper) : StreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper"]},{"name":"class CameraTsFileStreamer(context: Context, enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, initialOnErrorListener: OnErrorListener? = null) : BaseCameraFileStreamer","description":"io.github.thibaultbee.streampack.streamers.file.CameraTsFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-camera-ts-file-streamer/index.html","searchKeys":["CameraTsFileStreamer","class CameraTsFileStreamer(context: Context, enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, initialOnErrorListener: OnErrorListener? = null) : BaseCameraFileStreamer","io.github.thibaultbee.streampack.streamers.file.CameraTsFileStreamer"]},{"name":"class ChunkedFileOutputStream(val filesDir: File, chunkSize: Int, chunkNameGenerator: (Int) -> String = { id -> \"chunk_$id\" }, listener: ChunkedFileOutputStream.Listener = object : Listener {}) : OutputStream","description":"io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream","location":"core/io.github.thibaultbee.streampack.utils/-chunked-file-output-stream/index.html","searchKeys":["ChunkedFileOutputStream","class ChunkedFileOutputStream(val filesDir: File, chunkSize: Int, chunkNameGenerator: (Int) -> String = { id -> \"chunk_$id\" }, listener: ChunkedFileOutputStream.Listener = object : Listener {}) : OutputStream","io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream"]},{"name":"class CropScalerRegionZoom(context: Context, cameraController: CameraController) : Zoom","description":"io.github.thibaultbee.streampack.utils.Zoom.CropScalerRegionZoom","location":"core/io.github.thibaultbee.streampack.utils/-zoom/-crop-scaler-region-zoom/index.html","searchKeys":["CropScalerRegionZoom","class CropScalerRegionZoom(context: Context, cameraController: CameraController) : Zoom","io.github.thibaultbee.streampack.utils.Zoom.CropScalerRegionZoom"]},{"name":"class Exposure(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Exposure","location":"core/io.github.thibaultbee.streampack.utils/-exposure/index.html","searchKeys":["Exposure","class Exposure(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Exposure"]},{"name":"class Flash(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Flash","location":"core/io.github.thibaultbee.streampack.utils/-flash/index.html","searchKeys":["Flash","class Flash(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Flash"]},{"name":"class Focus(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Focus","location":"core/io.github.thibaultbee.streampack.utils/-focus/index.html","searchKeys":["Focus","class Focus(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Focus"]},{"name":"class FocusMetering(context: Context, cameraController: CameraController, zoom: Zoom, focus: Focus, exposure: Exposure, whiteBalance: WhiteBalance)","description":"io.github.thibaultbee.streampack.utils.FocusMetering","location":"core/io.github.thibaultbee.streampack.utils/-focus-metering/index.html","searchKeys":["FocusMetering","class FocusMetering(context: Context, cameraController: CameraController, zoom: Zoom, focus: Focus, exposure: Exposure, whiteBalance: WhiteBalance)","io.github.thibaultbee.streampack.utils.FocusMetering"]},{"name":"class Iso(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Iso","location":"core/io.github.thibaultbee.streampack.utils/-iso/index.html","searchKeys":["Iso","class Iso(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Iso"]},{"name":"class NotificationUtils(service: Service, channelId: String, notificationId: Int)","description":"io.github.thibaultbee.streampack.utils.NotificationUtils","location":"core/io.github.thibaultbee.streampack.utils/-notification-utils/index.html","searchKeys":["NotificationUtils","class NotificationUtils(service: Service, channelId: String, notificationId: Int)","io.github.thibaultbee.streampack.utils.NotificationUtils"]},{"name":"class PreviewView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : FrameLayout","description":"io.github.thibaultbee.streampack.views.PreviewView","location":"core/io.github.thibaultbee.streampack.views/-preview-view/index.html","searchKeys":["PreviewView","class PreviewView constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0) : FrameLayout","io.github.thibaultbee.streampack.views.PreviewView"]},{"name":"class RZoom(context: Context, cameraController: CameraController) : Zoom","description":"io.github.thibaultbee.streampack.utils.Zoom.RZoom","location":"core/io.github.thibaultbee.streampack.utils/-zoom/-r-zoom/index.html","searchKeys":["RZoom","class RZoom(context: Context, cameraController: CameraController) : Zoom","io.github.thibaultbee.streampack.utils.Zoom.RZoom"]},{"name":"class Stabilization(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Stabilization","location":"core/io.github.thibaultbee.streampack.utils/-stabilization/index.html","searchKeys":["Stabilization","class Stabilization(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Stabilization"]},{"name":"class StreamPackLogger : ILogger","description":"io.github.thibaultbee.streampack.logger.StreamPackLogger","location":"core/io.github.thibaultbee.streampack.logger/-stream-pack-logger/index.html","searchKeys":["StreamPackLogger","class StreamPackLogger : ILogger","io.github.thibaultbee.streampack.logger.StreamPackLogger"]},{"name":"class VideoCameraStreamerConfigurationHelper(muxerHelper: IVideoMuxerHelper) : VideoStreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoCameraStreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-camera-streamer-configuration-helper/index.html","searchKeys":["VideoCameraStreamerConfigurationHelper","class VideoCameraStreamerConfigurationHelper(muxerHelper: IVideoMuxerHelper) : VideoStreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.VideoCameraStreamerConfigurationHelper"]},{"name":"class VideoConfig(val mimeType: String = MediaFormat.MIMETYPE_VIDEO_AVC, val startBitrate: Int = 2000000, val resolution: Size = Size(1280, 720), val fps: Int = 30, val profile: Int = getBestProfile(mimeType), val level: Int = getBestLevel(mimeType, profile), val gopDuration: Float = 1.0f) : Config","description":"io.github.thibaultbee.streampack.data.VideoConfig","location":"core/io.github.thibaultbee.streampack.data/-video-config/index.html","searchKeys":["VideoConfig","class VideoConfig(val mimeType: String = MediaFormat.MIMETYPE_VIDEO_AVC, val startBitrate: Int = 2000000, val resolution: Size = Size(1280, 720), val fps: Int = 30, val profile: Int = getBestProfile(mimeType), val level: Int = getBestLevel(mimeType, profile), val gopDuration: Float = 1.0f) : Config","io.github.thibaultbee.streampack.data.VideoConfig"]},{"name":"class WhiteBalance(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.WhiteBalance","location":"core/io.github.thibaultbee.streampack.utils/-white-balance/index.html","searchKeys":["WhiteBalance","class WhiteBalance(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.WhiteBalance"]},{"name":"const val DEFAULT_COMPENSATION: Int = 0","description":"io.github.thibaultbee.streampack.utils.Exposure.Companion.DEFAULT_COMPENSATION","location":"core/io.github.thibaultbee.streampack.utils/-exposure/-companion/-d-e-f-a-u-l-t_-c-o-m-p-e-n-s-a-t-i-o-n.html","searchKeys":["DEFAULT_COMPENSATION","const val DEFAULT_COMPENSATION: Int = 0","io.github.thibaultbee.streampack.utils.Exposure.Companion.DEFAULT_COMPENSATION"]},{"name":"const val DEFAULT_LENS_DISTANCE: Float = 0.0f","description":"io.github.thibaultbee.streampack.utils.Focus.Companion.DEFAULT_LENS_DISTANCE","location":"core/io.github.thibaultbee.streampack.utils/-focus/-companion/-d-e-f-a-u-l-t_-l-e-n-s_-d-i-s-t-a-n-c-e.html","searchKeys":["DEFAULT_LENS_DISTANCE","const val DEFAULT_LENS_DISTANCE: Float = 0.0f","io.github.thibaultbee.streampack.utils.Focus.Companion.DEFAULT_LENS_DISTANCE"]},{"name":"const val DEFAULT_MAX_NUM_OF_METERING_REGION: Int = 0","description":"io.github.thibaultbee.streampack.utils.Focus.Companion.DEFAULT_MAX_NUM_OF_METERING_REGION","location":"core/io.github.thibaultbee.streampack.utils/-focus/-companion/-d-e-f-a-u-l-t_-m-a-x_-n-u-m_-o-f_-m-e-t-e-r-i-n-g_-r-e-g-i-o-n.html","searchKeys":["DEFAULT_MAX_NUM_OF_METERING_REGION","const val DEFAULT_MAX_NUM_OF_METERING_REGION: Int = 0","io.github.thibaultbee.streampack.utils.Focus.Companion.DEFAULT_MAX_NUM_OF_METERING_REGION"]},{"name":"const val DEFAULT_NOTIFICATION_CHANNEL_ID: String","description":"io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.Companion.DEFAULT_NOTIFICATION_CHANNEL_ID","location":"core/io.github.thibaultbee.streampack.streamers.services/-base-screen-recorder-service/-companion/-d-e-f-a-u-l-t_-n-o-t-i-f-i-c-a-t-i-o-n_-c-h-a-n-n-e-l_-i-d.html","searchKeys":["DEFAULT_NOTIFICATION_CHANNEL_ID","const val DEFAULT_NOTIFICATION_CHANNEL_ID: String","io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.Companion.DEFAULT_NOTIFICATION_CHANNEL_ID"]},{"name":"const val DEFAULT_NOTIFICATION_ID: Int = 3782","description":"io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.Companion.DEFAULT_NOTIFICATION_ID","location":"core/io.github.thibaultbee.streampack.streamers.services/-base-screen-recorder-service/-companion/-d-e-f-a-u-l-t_-n-o-t-i-f-i-c-a-t-i-o-n_-i-d.html","searchKeys":["DEFAULT_NOTIFICATION_ID","const val DEFAULT_NOTIFICATION_ID: Int = 3782","io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.Companion.DEFAULT_NOTIFICATION_ID"]},{"name":"const val DEFAULT_SENSITIVITY: Int = 100","description":"io.github.thibaultbee.streampack.utils.Iso.Companion.DEFAULT_SENSITIVITY","location":"core/io.github.thibaultbee.streampack.utils/-iso/-companion/-d-e-f-a-u-l-t_-s-e-n-s-i-t-i-v-i-t-y.html","searchKeys":["DEFAULT_SENSITIVITY","const val DEFAULT_SENSITIVITY: Int = 100","io.github.thibaultbee.streampack.utils.Iso.Companion.DEFAULT_SENSITIVITY"]},{"name":"const val DEFAULT_ZOOM_RATIO: Float = 1.0f","description":"io.github.thibaultbee.streampack.utils.Zoom.Companion.DEFAULT_ZOOM_RATIO","location":"core/io.github.thibaultbee.streampack.utils/-zoom/-companion/-d-e-f-a-u-l-t_-z-o-o-m_-r-a-t-i-o.html","searchKeys":["DEFAULT_ZOOM_RATIO","const val DEFAULT_ZOOM_RATIO: Float = 1.0f","io.github.thibaultbee.streampack.utils.Zoom.Companion.DEFAULT_ZOOM_RATIO"]},{"name":"const val ENABLE_AUDIO_KEY: String","description":"io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.Companion.ENABLE_AUDIO_KEY","location":"core/io.github.thibaultbee.streampack.streamers.services/-base-screen-recorder-service/-companion/-e-n-a-b-l-e_-a-u-d-i-o_-k-e-y.html","searchKeys":["ENABLE_AUDIO_KEY","const val ENABLE_AUDIO_KEY: String","io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.Companion.ENABLE_AUDIO_KEY"]},{"name":"const val ENDPOINT_CONFIG_KEY: String","description":"io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.Companion.ENDPOINT_CONFIG_KEY","location":"core/io.github.thibaultbee.streampack.streamers.services/-base-screen-recorder-service/-companion/-e-n-d-p-o-i-n-t_-c-o-n-f-i-g_-k-e-y.html","searchKeys":["ENDPOINT_CONFIG_KEY","const val ENDPOINT_CONFIG_KEY: String","io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.Companion.ENDPOINT_CONFIG_KEY"]},{"name":"const val MUXER_CONFIG_KEY: String","description":"io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.Companion.MUXER_CONFIG_KEY","location":"core/io.github.thibaultbee.streampack.streamers.services/-base-screen-recorder-service/-companion/-m-u-x-e-r_-c-o-n-f-i-g_-k-e-y.html","searchKeys":["MUXER_CONFIG_KEY","const val MUXER_CONFIG_KEY: String","io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.Companion.MUXER_CONFIG_KEY"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.logger.StreamPackLogger.StreamPackLogger","location":"core/io.github.thibaultbee.streampack.logger/-stream-pack-logger/-stream-pack-logger.html","searchKeys":["StreamPackLogger","constructor()","io.github.thibaultbee.streampack.logger.StreamPackLogger.StreamPackLogger"]},{"name":"constructor(audio: BaseStreamerAudioSettings, video: BaseStreamerVideoSettings)","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerSettings.BaseStreamerSettings","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-settings/-base-streamer-settings.html","searchKeys":["BaseStreamerSettings","constructor(audio: BaseStreamerAudioSettings, video: BaseStreamerVideoSettings)","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerSettings.BaseStreamerSettings"]},{"name":"constructor(audioMuxerHelper: IAudioMuxerHelper)","description":"io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.AudioStreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-audio-streamer-configuration-helper/-audio-streamer-configuration-helper.html","searchKeys":["AudioStreamerConfigurationHelper","constructor(audioMuxerHelper: IAudioMuxerHelper)","io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.AudioStreamerConfigurationHelper"]},{"name":"constructor(audioSource: IAudioSource?, audioEncoder: AudioMediaCodecEncoder?)","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerAudioSettings.BaseStreamerAudioSettings","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-audio-settings/-base-streamer-audio-settings.html","searchKeys":["BaseStreamerAudioSettings","constructor(audioSource: IAudioSource?, audioEncoder: AudioMediaCodecEncoder?)","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerAudioSettings.BaseStreamerAudioSettings"]},{"name":"constructor(audioSource: IAudioSource?, audioEncoder: AudioMediaCodecEncoder?, videoEncoder: VideoMediaCodecEncoder?)","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerSettings.BaseStreamerSettings","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-settings/-base-streamer-settings.html","searchKeys":["BaseStreamerSettings","constructor(audioSource: IAudioSource?, audioEncoder: AudioMediaCodecEncoder?, videoEncoder: VideoMediaCodecEncoder?)","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerSettings.BaseStreamerSettings"]},{"name":"constructor(audioSource: IAudioSource?, cameraSource: CameraSource, audioEncoder: AudioMediaCodecEncoder?, videoEncoder: VideoMediaCodecEncoder?)","description":"io.github.thibaultbee.streampack.streamers.settings.BaseCameraStreamerSettings.BaseCameraStreamerSettings","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-camera-streamer-settings/-base-camera-streamer-settings.html","searchKeys":["BaseCameraStreamerSettings","constructor(audioSource: IAudioSource?, cameraSource: CameraSource, audioEncoder: AudioMediaCodecEncoder?, videoEncoder: VideoMediaCodecEncoder?)","io.github.thibaultbee.streampack.streamers.settings.BaseCameraStreamerSettings.BaseCameraStreamerSettings"]},{"name":"constructor(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","description":"io.github.thibaultbee.streampack.regulator.BitrateRegulator.BitrateRegulator","location":"core/io.github.thibaultbee.streampack.regulator/-bitrate-regulator/-bitrate-regulator.html","searchKeys":["BitrateRegulator","constructor(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","io.github.thibaultbee.streampack.regulator.BitrateRegulator.BitrateRegulator"]},{"name":"constructor(cause: Throwable)","description":"io.github.thibaultbee.streampack.error.StreamPackError.StreamPackError","location":"core/io.github.thibaultbee.streampack.error/-stream-pack-error/-stream-pack-error.html","searchKeys":["StreamPackError","constructor(cause: Throwable)","io.github.thibaultbee.streampack.error.StreamPackError.StreamPackError"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","description":"io.github.thibaultbee.streampack.views.PreviewView.PreviewView","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-preview-view.html","searchKeys":["PreviewView","constructor(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","io.github.thibaultbee.streampack.views.PreviewView.PreviewView"]},{"name":"constructor(context: Context, audioSource: IAudioSource?, videoSource: IVideoSource?, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.BaseStreamer","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/-base-streamer.html","searchKeys":["BaseStreamer","constructor(context: Context, audioSource: IAudioSource?, videoSource: IVideoSource?, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.BaseStreamer"]},{"name":"constructor(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.CameraSettings.CameraSettings","location":"core/io.github.thibaultbee.streampack.utils/-camera-settings/-camera-settings.html","searchKeys":["CameraSettings","constructor(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.CameraSettings.CameraSettings"]},{"name":"constructor(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Exposure.Exposure","location":"core/io.github.thibaultbee.streampack.utils/-exposure/-exposure.html","searchKeys":["Exposure","constructor(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Exposure.Exposure"]},{"name":"constructor(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Flash.Flash","location":"core/io.github.thibaultbee.streampack.utils/-flash/-flash.html","searchKeys":["Flash","constructor(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Flash.Flash"]},{"name":"constructor(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Focus.Focus","location":"core/io.github.thibaultbee.streampack.utils/-focus/-focus.html","searchKeys":["Focus","constructor(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Focus.Focus"]},{"name":"constructor(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Iso.Iso","location":"core/io.github.thibaultbee.streampack.utils/-iso/-iso.html","searchKeys":["Iso","constructor(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Iso.Iso"]},{"name":"constructor(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Stabilization.Stabilization","location":"core/io.github.thibaultbee.streampack.utils/-stabilization/-stabilization.html","searchKeys":["Stabilization","constructor(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Stabilization.Stabilization"]},{"name":"constructor(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.WhiteBalance.WhiteBalance","location":"core/io.github.thibaultbee.streampack.utils/-white-balance/-white-balance.html","searchKeys":["WhiteBalance","constructor(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.WhiteBalance.WhiteBalance"]},{"name":"constructor(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Zoom.CropScalerRegionZoom.CropScalerRegionZoom","location":"core/io.github.thibaultbee.streampack.utils/-zoom/-crop-scaler-region-zoom/-crop-scaler-region-zoom.html","searchKeys":["CropScalerRegionZoom","constructor(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Zoom.CropScalerRegionZoom.CropScalerRegionZoom"]},{"name":"constructor(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Zoom.RZoom.RZoom","location":"core/io.github.thibaultbee.streampack.utils/-zoom/-r-zoom/-r-zoom.html","searchKeys":["RZoom","constructor(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Zoom.RZoom.RZoom"]},{"name":"constructor(context: Context, cameraController: CameraController, zoom: Zoom, focus: Focus, exposure: Exposure, whiteBalance: WhiteBalance)","description":"io.github.thibaultbee.streampack.utils.FocusMetering.FocusMetering","location":"core/io.github.thibaultbee.streampack.utils/-focus-metering/-focus-metering.html","searchKeys":["FocusMetering","constructor(context: Context, cameraController: CameraController, zoom: Zoom, focus: Focus, exposure: Exposure, whiteBalance: WhiteBalance)","io.github.thibaultbee.streampack.utils.FocusMetering.FocusMetering"]},{"name":"constructor(context: Context, enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.file.CameraFlvFileStreamer.CameraFlvFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-camera-flv-file-streamer/-camera-flv-file-streamer.html","searchKeys":["CameraFlvFileStreamer","constructor(context: Context, enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.file.CameraFlvFileStreamer.CameraFlvFileStreamer"]},{"name":"constructor(context: Context, enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.file.CameraMp4FileStreamer.CameraMp4FileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-camera-mp4-file-streamer/-camera-mp4-file-streamer.html","searchKeys":["CameraMp4FileStreamer","constructor(context: Context, enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.file.CameraMp4FileStreamer.CameraMp4FileStreamer"]},{"name":"constructor(context: Context, enableAudio: Boolean = true, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.BaseCameraStreamer","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-camera-streamer/-base-camera-streamer.html","searchKeys":["BaseCameraStreamer","constructor(context: Context, enableAudio: Boolean = true, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.BaseCameraStreamer"]},{"name":"constructor(context: Context, enableAudio: Boolean = true, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.BaseScreenRecorderStreamer","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-screen-recorder-streamer/-base-screen-recorder-streamer.html","searchKeys":["BaseScreenRecorderStreamer","constructor(context: Context, enableAudio: Boolean = true, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.BaseScreenRecorderStreamer"]},{"name":"constructor(context: Context, enableAudio: Boolean = true, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","description":"io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.BaseCameraLiveStreamer","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-camera-live-streamer/-base-camera-live-streamer.html","searchKeys":["BaseCameraLiveStreamer","constructor(context: Context, enableAudio: Boolean = true, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.BaseCameraLiveStreamer"]},{"name":"constructor(context: Context, enableAudio: Boolean = true, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","description":"io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.BaseScreenRecorderLiveStreamer","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-screen-recorder-live-streamer/-base-screen-recorder-live-streamer.html","searchKeys":["BaseScreenRecorderLiveStreamer","constructor(context: Context, enableAudio: Boolean = true, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.BaseScreenRecorderLiveStreamer"]},{"name":"constructor(context: Context, enableAudio: Boolean = true, muxer: IMuxer, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.file.BaseCameraFileStreamer.BaseCameraFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-base-camera-file-streamer/-base-camera-file-streamer.html","searchKeys":["BaseCameraFileStreamer","constructor(context: Context, enableAudio: Boolean = true, muxer: IMuxer, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.file.BaseCameraFileStreamer.BaseCameraFileStreamer"]},{"name":"constructor(context: Context, enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.file.CameraTsFileStreamer.CameraTsFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-camera-ts-file-streamer/-camera-ts-file-streamer.html","searchKeys":["CameraTsFileStreamer","constructor(context: Context, enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.file.CameraTsFileStreamer.CameraTsFileStreamer"]},{"name":"constructor(context: Context, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.file.AudioOnlyFlvFileStreamer.AudioOnlyFlvFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-audio-only-flv-file-streamer/-audio-only-flv-file-streamer.html","searchKeys":["AudioOnlyFlvFileStreamer","constructor(context: Context, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.file.AudioOnlyFlvFileStreamer.AudioOnlyFlvFileStreamer"]},{"name":"constructor(context: Context, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.file.AudioOnlyMp4FileStreamer.AudioOnlyMp4FileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-audio-only-mp4-file-streamer/-audio-only-mp4-file-streamer.html","searchKeys":["AudioOnlyMp4FileStreamer","constructor(context: Context, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.file.AudioOnlyMp4FileStreamer.AudioOnlyMp4FileStreamer"]},{"name":"constructor(context: Context, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.bases.BaseAudioOnlyStreamer.BaseAudioOnlyStreamer","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-audio-only-streamer/-base-audio-only-streamer.html","searchKeys":["BaseAudioOnlyStreamer","constructor(context: Context, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.bases.BaseAudioOnlyStreamer.BaseAudioOnlyStreamer"]},{"name":"constructor(context: Context, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","description":"io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.BaseAudioOnlyLiveStreamer","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-audio-only-live-streamer/-base-audio-only-live-streamer.html","searchKeys":["BaseAudioOnlyLiveStreamer","constructor(context: Context, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.BaseAudioOnlyLiveStreamer"]},{"name":"constructor(context: Context, muxer: IMuxer, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.file.BaseAudioOnlyFileStreamer.BaseAudioOnlyFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-base-audio-only-file-streamer/-base-audio-only-file-streamer.html","searchKeys":["BaseAudioOnlyFileStreamer","constructor(context: Context, muxer: IMuxer, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.file.BaseAudioOnlyFileStreamer.BaseAudioOnlyFileStreamer"]},{"name":"constructor(context: Context, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.file.AudioOnlyTsFileStreamer.AudioOnlyTsFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-audio-only-ts-file-streamer/-audio-only-ts-file-streamer.html","searchKeys":["AudioOnlyTsFileStreamer","constructor(context: Context, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.file.AudioOnlyTsFileStreamer.AudioOnlyTsFileStreamer"]},{"name":"constructor(filesDir: File, chunkSize: Int, chunkNameGenerator: (Int) -> String = { id -> \"chunk_$id\" }, listener: ChunkedFileOutputStream.Listener = object : Listener {})","description":"io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.ChunkedFileOutputStream","location":"core/io.github.thibaultbee.streampack.utils/-chunked-file-output-stream/-chunked-file-output-stream.html","searchKeys":["ChunkedFileOutputStream","constructor(filesDir: File, chunkSize: Int, chunkNameGenerator: (Int) -> String = { id -> \"chunk_$id\" }, listener: ChunkedFileOutputStream.Listener = object : Listener {})","io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.ChunkedFileOutputStream"]},{"name":"constructor(message: String)","description":"io.github.thibaultbee.streampack.error.CameraError.CameraError","location":"core/io.github.thibaultbee.streampack.error/-camera-error/-camera-error.html","searchKeys":["CameraError","constructor(message: String)","io.github.thibaultbee.streampack.error.CameraError.CameraError"]},{"name":"constructor(message: String)","description":"io.github.thibaultbee.streampack.error.StreamPackError.StreamPackError","location":"core/io.github.thibaultbee.streampack.error/-stream-pack-error/-stream-pack-error.html","searchKeys":["StreamPackError","constructor(message: String)","io.github.thibaultbee.streampack.error.StreamPackError.StreamPackError"]},{"name":"constructor(message: String, cause: Throwable)","description":"io.github.thibaultbee.streampack.error.StreamPackError.StreamPackError","location":"core/io.github.thibaultbee.streampack.error/-stream-pack-error/-stream-pack-error.html","searchKeys":["StreamPackError","constructor(message: String, cause: Throwable)","io.github.thibaultbee.streampack.error.StreamPackError.StreamPackError"]},{"name":"constructor(mimeType: String = MediaFormat.MIMETYPE_AUDIO_AAC, startBitrate: Int = 128000, sampleRate: Int = getDefaultSampleRate(mimeType), channelConfig: Int = AudioFormat.CHANNEL_IN_STEREO, byteFormat: Int = AudioFormat.ENCODING_PCM_16BIT, profile: Int = getDefaultProfile(mimeType), enableEchoCanceler: Boolean = true, enableNoiseSuppressor: Boolean = true)","description":"io.github.thibaultbee.streampack.data.AudioConfig.AudioConfig","location":"core/io.github.thibaultbee.streampack.data/-audio-config/-audio-config.html","searchKeys":["AudioConfig","constructor(mimeType: String = MediaFormat.MIMETYPE_AUDIO_AAC, startBitrate: Int = 128000, sampleRate: Int = getDefaultSampleRate(mimeType), channelConfig: Int = AudioFormat.CHANNEL_IN_STEREO, byteFormat: Int = AudioFormat.ENCODING_PCM_16BIT, profile: Int = getDefaultProfile(mimeType), enableEchoCanceler: Boolean = true, enableNoiseSuppressor: Boolean = true)","io.github.thibaultbee.streampack.data.AudioConfig.AudioConfig"]},{"name":"constructor(mimeType: String = MediaFormat.MIMETYPE_VIDEO_AVC, resolution: Size = Size(1280, 720), startBitrate: Int = getBestBitrate(resolution), fps: Int = 30, profileLevel: MediaCodecInfo.CodecProfileLevel, gopDuration: Float = 1.0f)","description":"io.github.thibaultbee.streampack.data.VideoConfig.VideoConfig","location":"core/io.github.thibaultbee.streampack.data/-video-config/-video-config.html","searchKeys":["VideoConfig","constructor(mimeType: String = MediaFormat.MIMETYPE_VIDEO_AVC, resolution: Size = Size(1280, 720), startBitrate: Int = getBestBitrate(resolution), fps: Int = 30, profileLevel: MediaCodecInfo.CodecProfileLevel, gopDuration: Float = 1.0f)","io.github.thibaultbee.streampack.data.VideoConfig.VideoConfig"]},{"name":"constructor(mimeType: String = MediaFormat.MIMETYPE_VIDEO_AVC, startBitrate: Int = 2000000, resolution: Size = Size(1280, 720), fps: Int = 30, profile: Int = getBestProfile(mimeType), level: Int = getBestLevel(mimeType, profile), gopDuration: Float = 1.0f)","description":"io.github.thibaultbee.streampack.data.VideoConfig.VideoConfig","location":"core/io.github.thibaultbee.streampack.data/-video-config/-video-config.html","searchKeys":["VideoConfig","constructor(mimeType: String = MediaFormat.MIMETYPE_VIDEO_AVC, startBitrate: Int = 2000000, resolution: Size = Size(1280, 720), fps: Int = 30, profile: Int = getBestProfile(mimeType), level: Int = getBestLevel(mimeType, profile), gopDuration: Float = 1.0f)","io.github.thibaultbee.streampack.data.VideoConfig.VideoConfig"]},{"name":"constructor(mimeType: String, startBitrate: Int, profile: Int = 0)","description":"io.github.thibaultbee.streampack.data.Config.Config","location":"core/io.github.thibaultbee.streampack.data/-config/-config.html","searchKeys":["Config","constructor(mimeType: String, startBitrate: Int, profile: Int = 0)","io.github.thibaultbee.streampack.data.Config.Config"]},{"name":"constructor(muxerHelper: IMuxerHelper)","description":"io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.CameraStreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-camera-streamer-configuration-helper/-camera-streamer-configuration-helper.html","searchKeys":["CameraStreamerConfigurationHelper","constructor(muxerHelper: IMuxerHelper)","io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.CameraStreamerConfigurationHelper"]},{"name":"constructor(muxerHelper: IMuxerHelper)","description":"io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.StreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-streamer-configuration-helper/-streamer-configuration-helper.html","searchKeys":["StreamerConfigurationHelper","constructor(muxerHelper: IMuxerHelper)","io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.StreamerConfigurationHelper"]},{"name":"constructor(muxerHelper: IVideoMuxerHelper)","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoCameraStreamerConfigurationHelper.VideoCameraStreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-camera-streamer-configuration-helper/-video-camera-streamer-configuration-helper.html","searchKeys":["VideoCameraStreamerConfigurationHelper","constructor(muxerHelper: IVideoMuxerHelper)","io.github.thibaultbee.streampack.streamers.helpers.VideoCameraStreamerConfigurationHelper.VideoCameraStreamerConfigurationHelper"]},{"name":"constructor(notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0, notificationIconResourceId: Int = R.drawable.ic_baseline_linked_camera_24)","description":"io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.BaseScreenRecorderService","location":"core/io.github.thibaultbee.streampack.streamers.services/-base-screen-recorder-service/-base-screen-recorder-service.html","searchKeys":["BaseScreenRecorderService","constructor(notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0, notificationIconResourceId: Int = R.drawable.ic_baseline_linked_camera_24)","io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.BaseScreenRecorderService"]},{"name":"constructor(service: Service, channelId: String, notificationId: Int)","description":"io.github.thibaultbee.streampack.utils.NotificationUtils.NotificationUtils","location":"core/io.github.thibaultbee.streampack.utils/-notification-utils/-notification-utils.html","searchKeys":["NotificationUtils","constructor(service: Service, channelId: String, notificationId: Int)","io.github.thibaultbee.streampack.utils.NotificationUtils.NotificationUtils"]},{"name":"constructor(streamer: IStreamer)","description":"io.github.thibaultbee.streampack.streamers.StreamerLifeCycleObserver.StreamerLifeCycleObserver","location":"core/io.github.thibaultbee.streampack.streamers/-streamer-life-cycle-observer/-streamer-life-cycle-observer.html","searchKeys":["StreamerLifeCycleObserver","constructor(streamer: IStreamer)","io.github.thibaultbee.streampack.streamers.StreamerLifeCycleObserver.StreamerLifeCycleObserver"]},{"name":"constructor(videoBitrateRange: Range<Int> = Range(500, 10000), audioBitrateRange: Range<Int> = Range(128000, 128000))","description":"io.github.thibaultbee.streampack.data.BitrateRegulatorConfig.BitrateRegulatorConfig","location":"core/io.github.thibaultbee.streampack.data/-bitrate-regulator-config/-bitrate-regulator-config.html","searchKeys":["BitrateRegulatorConfig","constructor(videoBitrateRange: Range<Int> = Range(500, 10000), audioBitrateRange: Range<Int> = Range(128000, 128000))","io.github.thibaultbee.streampack.data.BitrateRegulatorConfig.BitrateRegulatorConfig"]},{"name":"constructor(videoEncoder: VideoMediaCodecEncoder?)","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerVideoSettings.BaseStreamerVideoSettings","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-video-settings/-base-streamer-video-settings.html","searchKeys":["BaseStreamerVideoSettings","constructor(videoEncoder: VideoMediaCodecEncoder?)","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerVideoSettings.BaseStreamerVideoSettings"]},{"name":"constructor(videoMuxerHelper: IVideoMuxerHelper)","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.VideoStreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-streamer-configuration-helper/-video-streamer-configuration-helper.html","searchKeys":["VideoStreamerConfigurationHelper","constructor(videoMuxerHelper: IVideoMuxerHelper)","io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.VideoStreamerConfigurationHelper"]},{"name":"data class BitrateRegulatorConfig(val videoBitrateRange: Range<Int> = Range(500, 10000), val audioBitrateRange: Range<Int> = Range(128000, 128000))","description":"io.github.thibaultbee.streampack.data.BitrateRegulatorConfig","location":"core/io.github.thibaultbee.streampack.data/-bitrate-regulator-config/index.html","searchKeys":["BitrateRegulatorConfig","data class BitrateRegulatorConfig(val videoBitrateRange: Range<Int> = Range(500, 10000), val audioBitrateRange: Range<Int> = Range(128000, 128000))","io.github.thibaultbee.streampack.data.BitrateRegulatorConfig"]},{"name":"enum Position : Enum<PreviewView.Position> ","description":"io.github.thibaultbee.streampack.views.PreviewView.Position","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-position/index.html","searchKeys":["Position","enum Position : Enum<PreviewView.Position> ","io.github.thibaultbee.streampack.views.PreviewView.Position"]},{"name":"enum ScaleMode : Enum<PreviewView.ScaleMode> ","description":"io.github.thibaultbee.streampack.views.PreviewView.ScaleMode","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-scale-mode/index.html","searchKeys":["ScaleMode","enum ScaleMode : Enum<PreviewView.ScaleMode> ","io.github.thibaultbee.streampack.views.PreviewView.ScaleMode"]},{"name":"fun <T : Any> Context.getCameraOutputSizes(klass: Class<T>, cameraId: String): List<Size>","description":"io.github.thibaultbee.streampack.utils.getCameraOutputSizes","location":"core/io.github.thibaultbee.streampack.utils/get-camera-output-sizes.html","searchKeys":["getCameraOutputSizes","fun <T : Any> Context.getCameraOutputSizes(klass: Class<T>, cameraId: String): List<Size>","io.github.thibaultbee.streampack.utils.getCameraOutputSizes"]},{"name":"fun <T> getPreviewOutputSize(characteristics: CameraCharacteristics, targetSize: Size, targetClass: Class<T>): Size","description":"io.github.thibaultbee.streampack.views.getPreviewOutputSize","location":"core/io.github.thibaultbee.streampack.views/get-preview-output-size.html","searchKeys":["getPreviewOutputSize","fun <T> getPreviewOutputSize(characteristics: CameraCharacteristics, targetSize: Size, targetClass: Class<T>): Size","io.github.thibaultbee.streampack.views.getPreviewOutputSize"]},{"name":"fun Context.get10BitSupportedProfiles(cameraId: String): Set<Long>","description":"io.github.thibaultbee.streampack.utils.get10BitSupportedProfiles","location":"core/io.github.thibaultbee.streampack.utils/get10-bit-supported-profiles.html","searchKeys":["get10BitSupportedProfiles","fun Context.get10BitSupportedProfiles(cameraId: String): Set<Long>","io.github.thibaultbee.streampack.utils.get10BitSupportedProfiles"]},{"name":"fun Context.getAutoExposureModes(cameraId: String): List<Int>","description":"io.github.thibaultbee.streampack.utils.getAutoExposureModes","location":"core/io.github.thibaultbee.streampack.utils/get-auto-exposure-modes.html","searchKeys":["getAutoExposureModes","fun Context.getAutoExposureModes(cameraId: String): List<Int>","io.github.thibaultbee.streampack.utils.getAutoExposureModes"]},{"name":"fun Context.getAutoFocusModes(cameraId: String): List<Int>","description":"io.github.thibaultbee.streampack.utils.getAutoFocusModes","location":"core/io.github.thibaultbee.streampack.utils/get-auto-focus-modes.html","searchKeys":["getAutoFocusModes","fun Context.getAutoFocusModes(cameraId: String): List<Int>","io.github.thibaultbee.streampack.utils.getAutoFocusModes"]},{"name":"fun Context.getAutoWhiteBalanceModes(cameraId: String): List<Int>","description":"io.github.thibaultbee.streampack.utils.getAutoWhiteBalanceModes","location":"core/io.github.thibaultbee.streampack.utils/get-auto-white-balance-modes.html","searchKeys":["getAutoWhiteBalanceModes","fun Context.getAutoWhiteBalanceModes(cameraId: String): List<Int>","io.github.thibaultbee.streampack.utils.getAutoWhiteBalanceModes"]},{"name":"fun Context.getCameraCharacteristics(cameraId: String): CameraCharacteristics","description":"io.github.thibaultbee.streampack.utils.getCameraCharacteristics","location":"core/io.github.thibaultbee.streampack.utils/get-camera-characteristics.html","searchKeys":["getCameraCharacteristics","fun Context.getCameraCharacteristics(cameraId: String): CameraCharacteristics","io.github.thibaultbee.streampack.utils.getCameraCharacteristics"]},{"name":"fun Context.getCameraFpsList(cameraId: String): List<Range<Int>>","description":"io.github.thibaultbee.streampack.utils.getCameraFpsList","location":"core/io.github.thibaultbee.streampack.utils/get-camera-fps-list.html","searchKeys":["getCameraFpsList","fun Context.getCameraFpsList(cameraId: String): List<Range<Int>>","io.github.thibaultbee.streampack.utils.getCameraFpsList"]},{"name":"fun Context.getCameraOutputStreamSizes(): List<Size>","description":"io.github.thibaultbee.streampack.utils.getCameraOutputStreamSizes","location":"core/io.github.thibaultbee.streampack.utils/get-camera-output-stream-sizes.html","searchKeys":["getCameraOutputStreamSizes","fun Context.getCameraOutputStreamSizes(): List<Size>","io.github.thibaultbee.streampack.utils.getCameraOutputStreamSizes"]},{"name":"fun Context.getCameraOutputStreamSizes(cameraId: String, imageFormat: Int = ImageFormat.YUV_420_888): List<Size>","description":"io.github.thibaultbee.streampack.utils.getCameraOutputStreamSizes","location":"core/io.github.thibaultbee.streampack.utils/get-camera-output-stream-sizes.html","searchKeys":["getCameraOutputStreamSizes","fun Context.getCameraOutputStreamSizes(cameraId: String, imageFormat: Int = ImageFormat.YUV_420_888): List<Size>","io.github.thibaultbee.streampack.utils.getCameraOutputStreamSizes"]},{"name":"fun Context.getExposureMaxMeteringRegionsSupported(cameraId: String): Int?","description":"io.github.thibaultbee.streampack.utils.getExposureMaxMeteringRegionsSupported","location":"core/io.github.thibaultbee.streampack.utils/get-exposure-max-metering-regions-supported.html","searchKeys":["getExposureMaxMeteringRegionsSupported","fun Context.getExposureMaxMeteringRegionsSupported(cameraId: String): Int?","io.github.thibaultbee.streampack.utils.getExposureMaxMeteringRegionsSupported"]},{"name":"fun Context.getExposureRange(cameraId: String): Range<Int>?","description":"io.github.thibaultbee.streampack.utils.getExposureRange","location":"core/io.github.thibaultbee.streampack.utils/get-exposure-range.html","searchKeys":["getExposureRange","fun Context.getExposureRange(cameraId: String): Range<Int>?","io.github.thibaultbee.streampack.utils.getExposureRange"]},{"name":"fun Context.getExposureStep(cameraId: String): Rational?","description":"io.github.thibaultbee.streampack.utils.getExposureStep","location":"core/io.github.thibaultbee.streampack.utils/get-exposure-step.html","searchKeys":["getExposureStep","fun Context.getExposureStep(cameraId: String): Rational?","io.github.thibaultbee.streampack.utils.getExposureStep"]},{"name":"fun Context.getFacingDirection(cameraId: String): Int?","description":"io.github.thibaultbee.streampack.utils.getFacingDirection","location":"core/io.github.thibaultbee.streampack.utils/get-facing-direction.html","searchKeys":["getFacingDirection","fun Context.getFacingDirection(cameraId: String): Int?","io.github.thibaultbee.streampack.utils.getFacingDirection"]},{"name":"fun Context.getFocusMaxMeteringRegionsSupported(cameraId: String): Int?","description":"io.github.thibaultbee.streampack.utils.getFocusMaxMeteringRegionsSupported","location":"core/io.github.thibaultbee.streampack.utils/get-focus-max-metering-regions-supported.html","searchKeys":["getFocusMaxMeteringRegionsSupported","fun Context.getFocusMaxMeteringRegionsSupported(cameraId: String): Int?","io.github.thibaultbee.streampack.utils.getFocusMaxMeteringRegionsSupported"]},{"name":"fun Context.getLensDistanceRange(cameraId: String): Range<Float>","description":"io.github.thibaultbee.streampack.utils.getLensDistanceRange","location":"core/io.github.thibaultbee.streampack.utils/get-lens-distance-range.html","searchKeys":["getLensDistanceRange","fun Context.getLensDistanceRange(cameraId: String): Range<Float>","io.github.thibaultbee.streampack.utils.getLensDistanceRange"]},{"name":"fun Context.getScalerMaxZoom(cameraId: String): Float","description":"io.github.thibaultbee.streampack.utils.getScalerMaxZoom","location":"core/io.github.thibaultbee.streampack.utils/get-scaler-max-zoom.html","searchKeys":["getScalerMaxZoom","fun Context.getScalerMaxZoom(cameraId: String): Float","io.github.thibaultbee.streampack.utils.getScalerMaxZoom"]},{"name":"fun Context.getSensitivityRange(cameraId: String): Range<Int>?","description":"io.github.thibaultbee.streampack.utils.getSensitivityRange","location":"core/io.github.thibaultbee.streampack.utils/get-sensitivity-range.html","searchKeys":["getSensitivityRange","fun Context.getSensitivityRange(cameraId: String): Range<Int>?","io.github.thibaultbee.streampack.utils.getSensitivityRange"]},{"name":"fun Context.getWhiteBalanceMeteringRegionsSupported(cameraId: String): Int?","description":"io.github.thibaultbee.streampack.utils.getWhiteBalanceMeteringRegionsSupported","location":"core/io.github.thibaultbee.streampack.utils/get-white-balance-metering-regions-supported.html","searchKeys":["getWhiteBalanceMeteringRegionsSupported","fun Context.getWhiteBalanceMeteringRegionsSupported(cameraId: String): Int?","io.github.thibaultbee.streampack.utils.getWhiteBalanceMeteringRegionsSupported"]},{"name":"fun Context.getZoomRatioRange(cameraId: String): Range<Float>?","description":"io.github.thibaultbee.streampack.utils.getZoomRatioRange","location":"core/io.github.thibaultbee.streampack.utils/get-zoom-ratio-range.html","searchKeys":["getZoomRatioRange","fun Context.getZoomRatioRange(cameraId: String): Range<Float>?","io.github.thibaultbee.streampack.utils.getZoomRatioRange"]},{"name":"fun Context.hasExternalCamera(): Boolean","description":"io.github.thibaultbee.streampack.utils.hasExternalCamera","location":"core/io.github.thibaultbee.streampack.utils/has-external-camera.html","searchKeys":["hasExternalCamera","fun Context.hasExternalCamera(): Boolean","io.github.thibaultbee.streampack.utils.hasExternalCamera"]},{"name":"fun Context.hasSystemFeature(featureName: String): Boolean","description":"io.github.thibaultbee.streampack.utils.hasSystemFeature","location":"core/io.github.thibaultbee.streampack.utils/has-system-feature.html","searchKeys":["hasSystemFeature","fun Context.hasSystemFeature(featureName: String): Boolean","io.github.thibaultbee.streampack.utils.hasSystemFeature"]},{"name":"fun Context.is10BitProfileSupported(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.utils.is10BitProfileSupported","location":"core/io.github.thibaultbee.streampack.utils/is10-bit-profile-supported.html","searchKeys":["is10BitProfileSupported","fun Context.is10BitProfileSupported(cameraId: String): Boolean","io.github.thibaultbee.streampack.utils.is10BitProfileSupported"]},{"name":"fun Context.isBackCamera(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.utils.isBackCamera","location":"core/io.github.thibaultbee.streampack.utils/is-back-camera.html","searchKeys":["isBackCamera","fun Context.isBackCamera(cameraId: String): Boolean","io.github.thibaultbee.streampack.utils.isBackCamera"]},{"name":"fun Context.isExternalCamera(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.utils.isExternalCamera","location":"core/io.github.thibaultbee.streampack.utils/is-external-camera.html","searchKeys":["isExternalCamera","fun Context.isExternalCamera(cameraId: String): Boolean","io.github.thibaultbee.streampack.utils.isExternalCamera"]},{"name":"fun Context.isFlashAvailable(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.utils.isFlashAvailable","location":"core/io.github.thibaultbee.streampack.utils/is-flash-available.html","searchKeys":["isFlashAvailable","fun Context.isFlashAvailable(cameraId: String): Boolean","io.github.thibaultbee.streampack.utils.isFlashAvailable"]},{"name":"fun Context.isFrameRateSupported(cameraId: String, fps: Int): Boolean","description":"io.github.thibaultbee.streampack.utils.isFrameRateSupported","location":"core/io.github.thibaultbee.streampack.utils/is-frame-rate-supported.html","searchKeys":["isFrameRateSupported","fun Context.isFrameRateSupported(cameraId: String, fps: Int): Boolean","io.github.thibaultbee.streampack.utils.isFrameRateSupported"]},{"name":"fun Context.isFrontCamera(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.utils.isFrontCamera","location":"core/io.github.thibaultbee.streampack.utils/is-front-camera.html","searchKeys":["isFrontCamera","fun Context.isFrontCamera(cameraId: String): Boolean","io.github.thibaultbee.streampack.utils.isFrontCamera"]},{"name":"fun Context.isOpticalStabilizationAvailable(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.utils.isOpticalStabilizationAvailable","location":"core/io.github.thibaultbee.streampack.utils/is-optical-stabilization-available.html","searchKeys":["isOpticalStabilizationAvailable","fun Context.isOpticalStabilizationAvailable(cameraId: String): Boolean","io.github.thibaultbee.streampack.utils.isOpticalStabilizationAvailable"]},{"name":"fun IStreamer.getCameraStreamer(): ICameraStreamer?","description":"io.github.thibaultbee.streampack.utils.getCameraStreamer","location":"core/io.github.thibaultbee.streampack.utils/get-camera-streamer.html","searchKeys":["getCameraStreamer","fun IStreamer.getCameraStreamer(): ICameraStreamer?","io.github.thibaultbee.streampack.utils.getCameraStreamer"]},{"name":"fun IStreamer.getFileStreamer(): IFileStreamer?","description":"io.github.thibaultbee.streampack.utils.getFileStreamer","location":"core/io.github.thibaultbee.streampack.utils/get-file-streamer.html","searchKeys":["getFileStreamer","fun IStreamer.getFileStreamer(): IFileStreamer?","io.github.thibaultbee.streampack.utils.getFileStreamer"]},{"name":"fun IStreamer.getLiveStreamer(): ILiveStreamer?","description":"io.github.thibaultbee.streampack.utils.getLiveStreamer","location":"core/io.github.thibaultbee.streampack.utils/get-live-streamer.html","searchKeys":["getLiveStreamer","fun IStreamer.getLiveStreamer(): ILiveStreamer?","io.github.thibaultbee.streampack.utils.getLiveStreamer"]},{"name":"fun build(context: Context, cameraController: CameraController): Zoom","description":"io.github.thibaultbee.streampack.utils.Zoom.Companion.build","location":"core/io.github.thibaultbee.streampack.utils/-zoom/-companion/build.html","searchKeys":["build","fun build(context: Context, cameraController: CameraController): Zoom","io.github.thibaultbee.streampack.utils.Zoom.Companion.build"]},{"name":"fun cancel()","description":"io.github.thibaultbee.streampack.utils.NotificationUtils.cancel","location":"core/io.github.thibaultbee.streampack.utils/-notification-utils/cancel.html","searchKeys":["cancel","fun cancel()","io.github.thibaultbee.streampack.utils.NotificationUtils.cancel"]},{"name":"fun cancelFocusAndMetering()","description":"io.github.thibaultbee.streampack.utils.FocusMetering.cancelFocusAndMetering","location":"core/io.github.thibaultbee.streampack.utils/-focus-metering/cancel-focus-and-metering.html","searchKeys":["cancelFocusAndMetering","fun cancelFocusAndMetering()","io.github.thibaultbee.streampack.utils.FocusMetering.cancelFocusAndMetering"]},{"name":"fun createNotification(title: String, content: String? = null, iconResourceId: Int): Notification","description":"io.github.thibaultbee.streampack.utils.NotificationUtils.createNotification","location":"core/io.github.thibaultbee.streampack.utils/-notification-utils/create-notification.html","searchKeys":["createNotification","fun createNotification(title: String, content: String? = null, iconResourceId: Int): Notification","io.github.thibaultbee.streampack.utils.NotificationUtils.createNotification"]},{"name":"fun createNotification(titleResourceId: Int, contentResourceId: Int, iconResourceId: Int): Notification","description":"io.github.thibaultbee.streampack.utils.NotificationUtils.createNotification","location":"core/io.github.thibaultbee.streampack.utils/-notification-utils/create-notification.html","searchKeys":["createNotification","fun createNotification(titleResourceId: Int, contentResourceId: Int, iconResourceId: Int): Notification","io.github.thibaultbee.streampack.utils.NotificationUtils.createNotification"]},{"name":"fun createNotificationChannel(nameResourceId: Int, descriptionResourceId: Int)","description":"io.github.thibaultbee.streampack.utils.NotificationUtils.createNotificationChannel","location":"core/io.github.thibaultbee.streampack.utils/-notification-utils/create-notification-channel.html","searchKeys":["createNotificationChannel","fun createNotificationChannel(nameResourceId: Int, descriptionResourceId: Int)","io.github.thibaultbee.streampack.utils.NotificationUtils.createNotificationChannel"]},{"name":"fun createScreenRecorderIntent(context: Context): Intent","description":"io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.Companion.createScreenRecorderIntent","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-screen-recorder-streamer/-companion/create-screen-recorder-intent.html","searchKeys":["createScreenRecorderIntent","fun createScreenRecorderIntent(context: Context): Intent","io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.Companion.createScreenRecorderIntent"]},{"name":"fun getBestBitrate(resolution: Size): Int","description":"io.github.thibaultbee.streampack.data.VideoConfig.Companion.getBestBitrate","location":"core/io.github.thibaultbee.streampack.data/-video-config/-companion/get-best-bitrate.html","searchKeys":["getBestBitrate","fun getBestBitrate(resolution: Size): Int","io.github.thibaultbee.streampack.data.VideoConfig.Companion.getBestBitrate"]},{"name":"fun getBestLevel(mimeType: String, profile: Int): Int","description":"io.github.thibaultbee.streampack.data.VideoConfig.Companion.getBestLevel","location":"core/io.github.thibaultbee.streampack.data/-video-config/-companion/get-best-level.html","searchKeys":["getBestLevel","fun getBestLevel(mimeType: String, profile: Int): Int","io.github.thibaultbee.streampack.data.VideoConfig.Companion.getBestLevel"]},{"name":"fun getBestProfile(mimeType: String): Int","description":"io.github.thibaultbee.streampack.data.VideoConfig.Companion.getBestProfile","location":"core/io.github.thibaultbee.streampack.data/-video-config/-companion/get-best-profile.html","searchKeys":["getBestProfile","fun getBestProfile(mimeType: String): Int","io.github.thibaultbee.streampack.data.VideoConfig.Companion.getBestProfile"]},{"name":"fun getChannelConfig(nChannel: Int): Int","description":"io.github.thibaultbee.streampack.data.AudioConfig.Companion.getChannelConfig","location":"core/io.github.thibaultbee.streampack.data/-audio-config/-companion/get-channel-config.html","searchKeys":["getChannelConfig","fun getChannelConfig(nChannel: Int): Int","io.github.thibaultbee.streampack.data.AudioConfig.Companion.getChannelConfig"]},{"name":"fun getDeviceOrientedResolution(context: Context): Size","description":"io.github.thibaultbee.streampack.data.VideoConfig.getDeviceOrientedResolution","location":"core/io.github.thibaultbee.streampack.data/-video-config/get-device-oriented-resolution.html","searchKeys":["getDeviceOrientedResolution","fun getDeviceOrientedResolution(context: Context): Size","io.github.thibaultbee.streampack.data.VideoConfig.getDeviceOrientedResolution"]},{"name":"fun getNumOfBytesPerSample(byteFormat: Int): Int","description":"io.github.thibaultbee.streampack.data.AudioConfig.Companion.getNumOfBytesPerSample","location":"core/io.github.thibaultbee.streampack.data/-audio-config/-companion/get-num-of-bytes-per-sample.html","searchKeys":["getNumOfBytesPerSample","fun getNumOfBytesPerSample(byteFormat: Int): Int","io.github.thibaultbee.streampack.data.AudioConfig.Companion.getNumOfBytesPerSample"]},{"name":"fun getNumberOfChannels(channelConfig: Int): Int","description":"io.github.thibaultbee.streampack.data.AudioConfig.Companion.getNumberOfChannels","location":"core/io.github.thibaultbee.streampack.data/-audio-config/-companion/get-number-of-channels.html","searchKeys":["getNumberOfChannels","fun getNumberOfChannels(channelConfig: Int): Int","io.github.thibaultbee.streampack.data.AudioConfig.Companion.getNumberOfChannels"]},{"name":"fun getSupportedAllProfiles(context: Context, mimeType: String, cameraId: String): List<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoCameraStreamerConfigurationHelper.getSupportedAllProfiles","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-camera-streamer-configuration-helper/get-supported-all-profiles.html","searchKeys":["getSupportedAllProfiles","fun getSupportedAllProfiles(context: Context, mimeType: String, cameraId: String): List<Int>","io.github.thibaultbee.streampack.streamers.helpers.VideoCameraStreamerConfigurationHelper.getSupportedAllProfiles"]},{"name":"fun getSupportedAllProfiles(mimeType: String): List<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.getSupportedAllProfiles","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-streamer-configuration-helper/get-supported-all-profiles.html","searchKeys":["getSupportedAllProfiles","fun getSupportedAllProfiles(mimeType: String): List<Int>","io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.getSupportedAllProfiles"]},{"name":"fun getSupportedFramerate(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.getSupportedFramerate","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-streamer-configuration-helper/get-supported-framerate.html","searchKeys":["getSupportedFramerate","fun getSupportedFramerate(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.getSupportedFramerate"]},{"name":"fun getSupportedFramerates(context: Context, mimeType: String, cameraId: String): List<Range<Int>>","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoCameraStreamerConfigurationHelper.getSupportedFramerates","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-camera-streamer-configuration-helper/get-supported-framerates.html","searchKeys":["getSupportedFramerates","fun getSupportedFramerates(context: Context, mimeType: String, cameraId: String): List<Range<Int>>","io.github.thibaultbee.streampack.streamers.helpers.VideoCameraStreamerConfigurationHelper.getSupportedFramerates"]},{"name":"fun getSupportedHdrProfiles(mimeType: String): List<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.getSupportedHdrProfiles","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-streamer-configuration-helper/get-supported-hdr-profiles.html","searchKeys":["getSupportedHdrProfiles","fun getSupportedHdrProfiles(mimeType: String): List<Int>","io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.getSupportedHdrProfiles"]},{"name":"fun getSupportedProfiles(mimeType: String): List<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.getSupportedProfiles","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-audio-streamer-configuration-helper/get-supported-profiles.html","searchKeys":["getSupportedProfiles","fun getSupportedProfiles(mimeType: String): List<Int>","io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.getSupportedProfiles"]},{"name":"fun getSupportedResolutions(context: Context, mimeType: String): List<Size>","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoCameraStreamerConfigurationHelper.getSupportedResolutions","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-camera-streamer-configuration-helper/get-supported-resolutions.html","searchKeys":["getSupportedResolutions","fun getSupportedResolutions(context: Context, mimeType: String): List<Size>","io.github.thibaultbee.streampack.streamers.helpers.VideoCameraStreamerConfigurationHelper.getSupportedResolutions"]},{"name":"fun getSupportedSdrProfiles(mimeType: String): List<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.getSupportedSdrProfiles","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-streamer-configuration-helper/get-supported-sdr-profiles.html","searchKeys":["getSupportedSdrProfiles","fun getSupportedSdrProfiles(mimeType: String): List<Int>","io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.getSupportedSdrProfiles"]},{"name":"fun getSurfaceOrientationDegrees(surfaceOrientation: Int): Int","description":"io.github.thibaultbee.streampack.utils.OrientationUtils.getSurfaceOrientationDegrees","location":"core/io.github.thibaultbee.streampack.utils/-orientation-utils/get-surface-orientation-degrees.html","searchKeys":["getSurfaceOrientationDegrees","fun getSurfaceOrientationDegrees(surfaceOrientation: Int): Int","io.github.thibaultbee.streampack.utils.OrientationUtils.getSurfaceOrientationDegrees"]},{"name":"fun isFormatSupportedForEncoder(name: String): Boolean","description":"io.github.thibaultbee.streampack.data.Config.isFormatSupportedForEncoder","location":"core/io.github.thibaultbee.streampack.data/-config/is-format-supported-for-encoder.html","searchKeys":["isFormatSupportedForEncoder","fun isFormatSupportedForEncoder(name: String): Boolean","io.github.thibaultbee.streampack.data.Config.isFormatSupportedForEncoder"]},{"name":"fun launch(context: Context, serviceClass: Class<out BaseScreenRecorderService>, constructorBundle: Bundle, onServiceCreated: (BaseScreenRecorderStreamer) -> Unit, onServiceDisconnected: (name: ComponentName?) -> Unit)","description":"io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.Companion.launch","location":"core/io.github.thibaultbee.streampack.streamers.services/-base-screen-recorder-service/-companion/launch.html","searchKeys":["launch","fun launch(context: Context, serviceClass: Class<out BaseScreenRecorderService>, constructorBundle: Bundle, onServiceCreated: (BaseScreenRecorderStreamer) -> Unit, onServiceDisconnected: (name: ComponentName?) -> Unit)","io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.Companion.launch"]},{"name":"fun launch(context: Context, serviceClass: Class<out BaseScreenRecorderService>, enableAudio: Boolean, onServiceCreated: (BaseScreenRecorderStreamer) -> Unit, onServiceDisconnected: (name: ComponentName?) -> Unit)","description":"io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.Companion.launch","location":"core/io.github.thibaultbee.streampack.streamers.services/-base-screen-recorder-service/-companion/launch.html","searchKeys":["launch","fun launch(context: Context, serviceClass: Class<out BaseScreenRecorderService>, enableAudio: Boolean, onServiceCreated: (BaseScreenRecorderStreamer) -> Unit, onServiceDisconnected: (name: ComponentName?) -> Unit)","io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.Companion.launch"]},{"name":"fun notify(notification: Notification)","description":"io.github.thibaultbee.streampack.utils.NotificationUtils.notify","location":"core/io.github.thibaultbee.streampack.utils/-notification-utils/notify.html","searchKeys":["notify","fun notify(notification: Notification)","io.github.thibaultbee.streampack.utils.NotificationUtils.notify"]},{"name":"fun onPinch(scale: Float)","description":"io.github.thibaultbee.streampack.utils.Zoom.onPinch","location":"core/io.github.thibaultbee.streampack.utils/-zoom/on-pinch.html","searchKeys":["onPinch","fun onPinch(scale: Float)","io.github.thibaultbee.streampack.utils.Zoom.onPinch"]},{"name":"fun onTap(afPoints: List<PointF> = emptyList(), aePoints: List<PointF> = emptyList(), awbPoints: List<PointF> = emptyList(), fovRect: Rect, fovRotationDegree: Int)","description":"io.github.thibaultbee.streampack.utils.FocusMetering.onTap","location":"core/io.github.thibaultbee.streampack.utils/-focus-metering/on-tap.html","searchKeys":["onTap","fun onTap(afPoints: List<PointF> = emptyList(), aePoints: List<PointF> = emptyList(), awbPoints: List<PointF> = emptyList(), fovRect: Rect, fovRotationDegree: Int)","io.github.thibaultbee.streampack.utils.FocusMetering.onTap"]},{"name":"fun onTap(point: PointF, fovRect: Rect, fovRotationDegree: Int)","description":"io.github.thibaultbee.streampack.utils.FocusMetering.onTap","location":"core/io.github.thibaultbee.streampack.utils/-focus-metering/on-tap.html","searchKeys":["onTap","fun onTap(point: PointF, fovRect: Rect, fovRotationDegree: Int)","io.github.thibaultbee.streampack.utils.FocusMetering.onTap"]},{"name":"fun startPreview()","description":"io.github.thibaultbee.streampack.views.PreviewView.startPreview","location":"core/io.github.thibaultbee.streampack.views/-preview-view/start-preview.html","searchKeys":["startPreview","fun startPreview()","io.github.thibaultbee.streampack.views.PreviewView.startPreview"]},{"name":"fun stopPreview()","description":"io.github.thibaultbee.streampack.views.PreviewView.stopPreview","location":"core/io.github.thibaultbee.streampack.views/-preview-view/stop-preview.html","searchKeys":["stopPreview","fun stopPreview()","io.github.thibaultbee.streampack.views.PreviewView.stopPreview"]},{"name":"fun valueOf(value: String): PreviewView.Position","description":"io.github.thibaultbee.streampack.views.PreviewView.Position.valueOf","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-position/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PreviewView.Position","io.github.thibaultbee.streampack.views.PreviewView.Position.valueOf"]},{"name":"fun valueOf(value: String): PreviewView.ScaleMode","description":"io.github.thibaultbee.streampack.views.PreviewView.ScaleMode.valueOf","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-scale-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PreviewView.ScaleMode","io.github.thibaultbee.streampack.views.PreviewView.ScaleMode.valueOf"]},{"name":"fun values(): Array<PreviewView.Position>","description":"io.github.thibaultbee.streampack.views.PreviewView.Position.values","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-position/values.html","searchKeys":["values","fun values(): Array<PreviewView.Position>","io.github.thibaultbee.streampack.views.PreviewView.Position.values"]},{"name":"fun values(): Array<PreviewView.ScaleMode>","description":"io.github.thibaultbee.streampack.views.PreviewView.ScaleMode.values","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-scale-mode/values.html","searchKeys":["values","fun values(): Array<PreviewView.ScaleMode>","io.github.thibaultbee.streampack.views.PreviewView.ScaleMode.values"]},{"name":"inline fun <T> IStreamer.getStreamer(): T?","description":"io.github.thibaultbee.streampack.utils.getStreamer","location":"core/io.github.thibaultbee.streampack.utils/get-streamer.html","searchKeys":["getStreamer","inline fun <T> IStreamer.getStreamer(): T?","io.github.thibaultbee.streampack.utils.getStreamer"]},{"name":"interface IAVConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.IAVConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-a-v-configuration-helper/index.html","searchKeys":["IAVConfigurationHelper","interface IAVConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.IAVConfigurationHelper"]},{"name":"interface IAudioConfigurationHelper : IAVConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.IAudioConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-audio-configuration-helper/index.html","searchKeys":["IAudioConfigurationHelper","interface IAudioConfigurationHelper : IAVConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.IAudioConfigurationHelper"]},{"name":"interface IAudioSettings","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IAudioSettings","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-audio-settings/index.html","searchKeys":["IAudioSettings","interface IAudioSettings","io.github.thibaultbee.streampack.streamers.interfaces.settings.IAudioSettings"]},{"name":"interface IBaseCameraStreamerSettings","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseCameraStreamerSettings","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-base-camera-streamer-settings/index.html","searchKeys":["IBaseCameraStreamerSettings","interface IBaseCameraStreamerSettings","io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseCameraStreamerSettings"]},{"name":"interface IBaseStreamerSettings","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseStreamerSettings","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-base-streamer-settings/index.html","searchKeys":["IBaseStreamerSettings","interface IBaseStreamerSettings","io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseStreamerSettings"]},{"name":"interface IBitrateRegulatorFactory","description":"io.github.thibaultbee.streampack.regulator.IBitrateRegulatorFactory","location":"core/io.github.thibaultbee.streampack.regulator/-i-bitrate-regulator-factory/index.html","searchKeys":["IBitrateRegulatorFactory","interface IBitrateRegulatorFactory","io.github.thibaultbee.streampack.regulator.IBitrateRegulatorFactory"]},{"name":"interface ICameraStreamer","description":"io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-camera-streamer/index.html","searchKeys":["ICameraStreamer","interface ICameraStreamer","io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer"]},{"name":"interface IConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.IConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-configuration-helper/index.html","searchKeys":["IConfigurationHelper","interface IConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.IConfigurationHelper"]},{"name":"interface IFileStreamer","description":"io.github.thibaultbee.streampack.streamers.interfaces.IFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-file-streamer/index.html","searchKeys":["IFileStreamer","interface IFileStreamer","io.github.thibaultbee.streampack.streamers.interfaces.IFileStreamer"]},{"name":"interface ILiveStreamer","description":"io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-live-streamer/index.html","searchKeys":["ILiveStreamer","interface ILiveStreamer","io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer"]},{"name":"interface ILogger","description":"io.github.thibaultbee.streampack.logger.ILogger","location":"core/io.github.thibaultbee.streampack.logger/-i-logger/index.html","searchKeys":["ILogger","interface ILogger","io.github.thibaultbee.streampack.logger.ILogger"]},{"name":"interface IStreamer","description":"io.github.thibaultbee.streampack.streamers.interfaces.IStreamer","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-streamer/index.html","searchKeys":["IStreamer","interface IStreamer","io.github.thibaultbee.streampack.streamers.interfaces.IStreamer"]},{"name":"interface IVideoConfigurationHelper : IAVConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.IVideoConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-video-configuration-helper/index.html","searchKeys":["IVideoConfigurationHelper","interface IVideoConfigurationHelper : IAVConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.IVideoConfigurationHelper"]},{"name":"interface IVideoSettings","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IVideoSettings","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-video-settings/index.html","searchKeys":["IVideoSettings","interface IVideoSettings","io.github.thibaultbee.streampack.streamers.interfaces.settings.IVideoSettings"]},{"name":"interface Listener","description":"io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.Listener","location":"core/io.github.thibaultbee.streampack.utils/-chunked-file-output-stream/-listener/index.html","searchKeys":["Listener","interface Listener","io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.Listener"]},{"name":"interface Listener","description":"io.github.thibaultbee.streampack.views.PreviewView.Listener","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-listener/index.html","searchKeys":["Listener","interface Listener","io.github.thibaultbee.streampack.views.PreviewView.Listener"]},{"name":"interface OnConnectionListener","description":"io.github.thibaultbee.streampack.listeners.OnConnectionListener","location":"core/io.github.thibaultbee.streampack.listeners/-on-connection-listener/index.html","searchKeys":["OnConnectionListener","interface OnConnectionListener","io.github.thibaultbee.streampack.listeners.OnConnectionListener"]},{"name":"interface OnErrorListener","description":"io.github.thibaultbee.streampack.listeners.OnErrorListener","location":"core/io.github.thibaultbee.streampack.listeners/-on-error-listener/index.html","searchKeys":["OnErrorListener","interface OnErrorListener","io.github.thibaultbee.streampack.listeners.OnErrorListener"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.data.AudioConfig.Companion","location":"core/io.github.thibaultbee.streampack.data/-audio-config/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.data.AudioConfig.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.data.VideoConfig.Companion","location":"core/io.github.thibaultbee.streampack.data/-video-config/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.data.VideoConfig.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.Companion","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-screen-recorder-streamer/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.Companion","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.Companion","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-camera-streamer-configuration-helper/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.Companion","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-streamer-configuration-helper/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.Companion","location":"core/io.github.thibaultbee.streampack.streamers.services/-base-screen-recorder-service/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.utils.Exposure.Companion","location":"core/io.github.thibaultbee.streampack.utils/-exposure/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.utils.Exposure.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.utils.Focus.Companion","location":"core/io.github.thibaultbee.streampack.utils/-focus/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.utils.Focus.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.utils.FocusMetering.Companion","location":"core/io.github.thibaultbee.streampack.utils/-focus-metering/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.utils.FocusMetering.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.utils.Iso.Companion","location":"core/io.github.thibaultbee.streampack.utils/-iso/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.utils.Iso.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.utils.Zoom.Companion","location":"core/io.github.thibaultbee.streampack.utils/-zoom/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.utils.Zoom.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.utils.Zoom.CropScalerRegionZoom.Companion","location":"core/io.github.thibaultbee.streampack.utils/-zoom/-crop-scaler-region-zoom/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.utils.Zoom.CropScalerRegionZoom.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.views.PreviewView.Companion","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.views.PreviewView.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.views.PreviewView.Position.Companion","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-position/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.views.PreviewView.Position.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.views.PreviewView.ScaleMode.Companion","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-scale-mode/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.views.PreviewView.ScaleMode.Companion"]},{"name":"object Logger : ILogger","description":"io.github.thibaultbee.streampack.logger.Logger","location":"core/io.github.thibaultbee.streampack.logger/-logger/index.html","searchKeys":["Logger","object Logger : ILogger","io.github.thibaultbee.streampack.logger.Logger"]},{"name":"object OrientationUtils","description":"io.github.thibaultbee.streampack.utils.OrientationUtils","location":"core/io.github.thibaultbee.streampack.utils/-orientation-utils/index.html","searchKeys":["OrientationUtils","object OrientationUtils","io.github.thibaultbee.streampack.utils.OrientationUtils"]},{"name":"open class BaseAudioOnlyFileStreamer(context: Context, muxer: IMuxer, initialOnErrorListener: OnErrorListener? = null) : BaseAudioOnlyStreamer, IFileStreamer","description":"io.github.thibaultbee.streampack.streamers.file.BaseAudioOnlyFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-base-audio-only-file-streamer/index.html","searchKeys":["BaseAudioOnlyFileStreamer","open class BaseAudioOnlyFileStreamer(context: Context, muxer: IMuxer, initialOnErrorListener: OnErrorListener? = null) : BaseAudioOnlyStreamer, IFileStreamer","io.github.thibaultbee.streampack.streamers.file.BaseAudioOnlyFileStreamer"]},{"name":"open class BaseAudioOnlyLiveStreamer(context: Context, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null) : BaseAudioOnlyStreamer, ILiveStreamer","description":"io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-audio-only-live-streamer/index.html","searchKeys":["BaseAudioOnlyLiveStreamer","open class BaseAudioOnlyLiveStreamer(context: Context, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null) : BaseAudioOnlyStreamer, ILiveStreamer","io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer"]},{"name":"open class BaseAudioOnlyStreamer(context: Context, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null) : BaseStreamer","description":"io.github.thibaultbee.streampack.streamers.bases.BaseAudioOnlyStreamer","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-audio-only-streamer/index.html","searchKeys":["BaseAudioOnlyStreamer","open class BaseAudioOnlyStreamer(context: Context, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null) : BaseStreamer","io.github.thibaultbee.streampack.streamers.bases.BaseAudioOnlyStreamer"]},{"name":"open class BaseCameraFileStreamer(context: Context, enableAudio: Boolean = true, muxer: IMuxer, initialOnErrorListener: OnErrorListener? = null) : BaseCameraStreamer, IFileStreamer","description":"io.github.thibaultbee.streampack.streamers.file.BaseCameraFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-base-camera-file-streamer/index.html","searchKeys":["BaseCameraFileStreamer","open class BaseCameraFileStreamer(context: Context, enableAudio: Boolean = true, muxer: IMuxer, initialOnErrorListener: OnErrorListener? = null) : BaseCameraStreamer, IFileStreamer","io.github.thibaultbee.streampack.streamers.file.BaseCameraFileStreamer"]},{"name":"open class BaseCameraLiveStreamer(context: Context, enableAudio: Boolean = true, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null) : BaseCameraStreamer, ILiveStreamer","description":"io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-camera-live-streamer/index.html","searchKeys":["BaseCameraLiveStreamer","open class BaseCameraLiveStreamer(context: Context, enableAudio: Boolean = true, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null) : BaseCameraStreamer, ILiveStreamer","io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer"]},{"name":"open class BaseCameraStreamer(context: Context, enableAudio: Boolean = true, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null) : BaseStreamer, ICameraStreamer","description":"io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-camera-streamer/index.html","searchKeys":["BaseCameraStreamer","open class BaseCameraStreamer(context: Context, enableAudio: Boolean = true, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null) : BaseStreamer, ICameraStreamer","io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer"]},{"name":"open class BaseScreenRecorderLiveStreamer(context: Context, enableAudio: Boolean = true, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null) : BaseScreenRecorderStreamer, ILiveStreamer","description":"io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-screen-recorder-live-streamer/index.html","searchKeys":["BaseScreenRecorderLiveStreamer","open class BaseScreenRecorderLiveStreamer(context: Context, enableAudio: Boolean = true, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null) : BaseScreenRecorderStreamer, ILiveStreamer","io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer"]},{"name":"open class BaseScreenRecorderStreamer(context: Context, enableAudio: Boolean = true, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null) : BaseStreamer","description":"io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-screen-recorder-streamer/index.html","searchKeys":["BaseScreenRecorderStreamer","open class BaseScreenRecorderStreamer(context: Context, enableAudio: Boolean = true, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null) : BaseStreamer","io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer"]},{"name":"open class BaseStreamerSettings(val audio: BaseStreamerAudioSettings, val video: BaseStreamerVideoSettings) : IBaseStreamerSettings","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerSettings","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-settings/index.html","searchKeys":["BaseStreamerSettings","open class BaseStreamerSettings(val audio: BaseStreamerAudioSettings, val video: BaseStreamerVideoSettings) : IBaseStreamerSettings","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerSettings"]},{"name":"open class Config(val mimeType: String, val startBitrate: Int, val profile: Int = 0)","description":"io.github.thibaultbee.streampack.data.Config","location":"core/io.github.thibaultbee.streampack.data/-config/index.html","searchKeys":["Config","open class Config(val mimeType: String, val startBitrate: Int, val profile: Int = 0)","io.github.thibaultbee.streampack.data.Config"]},{"name":"open class StreamPackError(cause: Throwable) : Exception","description":"io.github.thibaultbee.streampack.error.StreamPackError","location":"core/io.github.thibaultbee.streampack.error/-stream-pack-error/index.html","searchKeys":["StreamPackError","open class StreamPackError(cause: Throwable) : Exception","io.github.thibaultbee.streampack.error.StreamPackError"]},{"name":"open class StreamerConfigurationHelper(muxerHelper: IMuxerHelper) : IConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-streamer-configuration-helper/index.html","searchKeys":["StreamerConfigurationHelper","open class StreamerConfigurationHelper(muxerHelper: IMuxerHelper) : IConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper"]},{"name":"open class StreamerLifeCycleObserver(var streamer: IStreamer) : DefaultLifecycleObserver","description":"io.github.thibaultbee.streampack.streamers.StreamerLifeCycleObserver","location":"core/io.github.thibaultbee.streampack.streamers/-streamer-life-cycle-observer/index.html","searchKeys":["StreamerLifeCycleObserver","open class StreamerLifeCycleObserver(var streamer: IStreamer) : DefaultLifecycleObserver","io.github.thibaultbee.streampack.streamers.StreamerLifeCycleObserver"]},{"name":"open class VideoStreamerConfigurationHelper(videoMuxerHelper: IVideoMuxerHelper) : IVideoConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-streamer-configuration-helper/index.html","searchKeys":["VideoStreamerConfigurationHelper","open class VideoStreamerConfigurationHelper(videoMuxerHelper: IVideoMuxerHelper) : IVideoConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper"]},{"name":"open fun getSupportedResolutions(mimeType: String): Pair<Range<Int>, Range<Int>>","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.getSupportedResolutions","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-streamer-configuration-helper/get-supported-resolutions.html","searchKeys":["getSupportedResolutions","open fun getSupportedResolutions(mimeType: String): Pair<Range<Int>, Range<Int>>","io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.getSupportedResolutions"]},{"name":"open fun onFileClosed(index: Int, isLast: Boolean, file: File)","description":"io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.Listener.onFileClosed","location":"core/io.github.thibaultbee.streampack.utils/-chunked-file-output-stream/-listener/on-file-closed.html","searchKeys":["onFileClosed","open fun onFileClosed(index: Int, isLast: Boolean, file: File)","io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.Listener.onFileClosed"]},{"name":"open fun onPreviewFailed(t: Throwable)","description":"io.github.thibaultbee.streampack.views.PreviewView.Listener.onPreviewFailed","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-listener/on-preview-failed.html","searchKeys":["onPreviewFailed","open fun onPreviewFailed(t: Throwable)","io.github.thibaultbee.streampack.views.PreviewView.Listener.onPreviewFailed"]},{"name":"open fun onPreviewStarted()","description":"io.github.thibaultbee.streampack.views.PreviewView.Listener.onPreviewStarted","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-listener/on-preview-started.html","searchKeys":["onPreviewStarted","open fun onPreviewStarted()","io.github.thibaultbee.streampack.views.PreviewView.Listener.onPreviewStarted"]},{"name":"open fun onZoomRationOnPinchChanged(zoomRatio: Float)","description":"io.github.thibaultbee.streampack.views.PreviewView.Listener.onZoomRationOnPinchChanged","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-listener/on-zoom-ration-on-pinch-changed.html","searchKeys":["onZoomRationOnPinchChanged","open fun onZoomRationOnPinchChanged(zoomRatio: Float)","io.github.thibaultbee.streampack.views.PreviewView.Listener.onZoomRationOnPinchChanged"]},{"name":"open fun startPreview(surfaceHolder: SurfaceHolder, cameraId: String = camera)","description":"io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.startPreview","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-camera-streamer/start-preview.html","searchKeys":["startPreview","open fun startPreview(surfaceHolder: SurfaceHolder, cameraId: String = camera)","io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.startPreview"]},{"name":"open fun startPreview(surfaceView: SurfaceView, cameraId: String = camera)","description":"io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.startPreview","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-camera-streamer/start-preview.html","searchKeys":["startPreview","open fun startPreview(surfaceView: SurfaceView, cameraId: String = camera)","io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.startPreview"]},{"name":"open fun startPreview(textureView: TextureView, cameraId: String = camera)","description":"io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.startPreview","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-camera-streamer/start-preview.html","searchKeys":["startPreview","open fun startPreview(textureView: TextureView, cameraId: String = camera)","io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.startPreview"]},{"name":"open override fun close()","description":"io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.close","location":"core/io.github.thibaultbee.streampack.utils/-chunked-file-output-stream/close.html","searchKeys":["close","open override fun close()","io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.close"]},{"name":"open override fun configure(audioConfig: AudioConfig)","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.configure","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/configure.html","searchKeys":["configure","open override fun configure(audioConfig: AudioConfig)","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.configure"]},{"name":"open override fun configure(audioConfig: AudioConfig, videoConfig: VideoConfig)","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.configure","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/configure.html","searchKeys":["configure","open override fun configure(audioConfig: AudioConfig, videoConfig: VideoConfig)","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.configure"]},{"name":"open override fun configure(videoConfig: VideoConfig)","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.configure","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/configure.html","searchKeys":["configure","open override fun configure(videoConfig: VideoConfig)","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.configure"]},{"name":"open override fun d(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.logger.Logger.d","location":"core/io.github.thibaultbee.streampack.logger/-logger/d.html","searchKeys":["d","open override fun d(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.logger.Logger.d"]},{"name":"open override fun d(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.logger.StreamPackLogger.d","location":"core/io.github.thibaultbee.streampack.logger/-stream-pack-logger/d.html","searchKeys":["d","open override fun d(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.logger.StreamPackLogger.d"]},{"name":"open override fun disconnect()","description":"io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.disconnect","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-audio-only-live-streamer/disconnect.html","searchKeys":["disconnect","open override fun disconnect()","io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.disconnect"]},{"name":"open override fun disconnect()","description":"io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.disconnect","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-camera-live-streamer/disconnect.html","searchKeys":["disconnect","open override fun disconnect()","io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.disconnect"]},{"name":"open override fun disconnect()","description":"io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.disconnect","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-screen-recorder-live-streamer/disconnect.html","searchKeys":["disconnect","open override fun disconnect()","io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.disconnect"]},{"name":"open override fun e(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.logger.Logger.e","location":"core/io.github.thibaultbee.streampack.logger/-logger/e.html","searchKeys":["e","open override fun e(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.logger.Logger.e"]},{"name":"open override fun e(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.logger.StreamPackLogger.e","location":"core/io.github.thibaultbee.streampack.logger/-stream-pack-logger/e.html","searchKeys":["e","open override fun e(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.logger.StreamPackLogger.e"]},{"name":"open override fun flush()","description":"io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.flush","location":"core/io.github.thibaultbee.streampack.utils/-chunked-file-output-stream/flush.html","searchKeys":["flush","open override fun flush()","io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.flush"]},{"name":"open override fun getSupportedBitrates(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.getSupportedBitrates","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-audio-streamer-configuration-helper/get-supported-bitrates.html","searchKeys":["getSupportedBitrates","open override fun getSupportedBitrates(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.getSupportedBitrates"]},{"name":"open override fun getSupportedBitrates(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.getSupportedBitrates","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-streamer-configuration-helper/get-supported-bitrates.html","searchKeys":["getSupportedBitrates","open override fun getSupportedBitrates(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.getSupportedBitrates"]},{"name":"open override fun getSupportedByteFormats(): List<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.getSupportedByteFormats","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-audio-streamer-configuration-helper/get-supported-byte-formats.html","searchKeys":["getSupportedByteFormats","open override fun getSupportedByteFormats(): List<Int>","io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.getSupportedByteFormats"]},{"name":"open override fun getSupportedInputChannelRange(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.getSupportedInputChannelRange","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-audio-streamer-configuration-helper/get-supported-input-channel-range.html","searchKeys":["getSupportedInputChannelRange","open override fun getSupportedInputChannelRange(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.getSupportedInputChannelRange"]},{"name":"open override fun getSupportedSampleRates(mimeType: String): List<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.getSupportedSampleRates","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-audio-streamer-configuration-helper/get-supported-sample-rates.html","searchKeys":["getSupportedSampleRates","open override fun getSupportedSampleRates(mimeType: String): List<Int>","io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.getSupportedSampleRates"]},{"name":"open override fun i(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.logger.Logger.i","location":"core/io.github.thibaultbee.streampack.logger/-logger/i.html","searchKeys":["i","open override fun i(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.logger.Logger.i"]},{"name":"open override fun i(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.logger.StreamPackLogger.i","location":"core/io.github.thibaultbee.streampack.logger/-stream-pack-logger/i.html","searchKeys":["i","open override fun i(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.logger.StreamPackLogger.i"]},{"name":"open override fun onBind(intent: Intent): IBinder?","description":"io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.onBind","location":"core/io.github.thibaultbee.streampack.streamers.services/-base-screen-recorder-service/on-bind.html","searchKeys":["onBind","open override fun onBind(intent: Intent): IBinder?","io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.onBind"]},{"name":"open override fun onCreate()","description":"io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.onCreate","location":"core/io.github.thibaultbee.streampack.streamers.services/-base-screen-recorder-service/on-create.html","searchKeys":["onCreate","open override fun onCreate()","io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.onCreate"]},{"name":"open override fun onDestroy()","description":"io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.onDestroy","location":"core/io.github.thibaultbee.streampack.streamers.services/-base-screen-recorder-service/on-destroy.html","searchKeys":["onDestroy","open override fun onDestroy()","io.github.thibaultbee.streampack.streamers.services.BaseScreenRecorderService.onDestroy"]},{"name":"open override fun onDestroy(owner: LifecycleOwner)","description":"io.github.thibaultbee.streampack.streamers.StreamerLifeCycleObserver.onDestroy","location":"core/io.github.thibaultbee.streampack.streamers/-streamer-life-cycle-observer/on-destroy.html","searchKeys":["onDestroy","open override fun onDestroy(owner: LifecycleOwner)","io.github.thibaultbee.streampack.streamers.StreamerLifeCycleObserver.onDestroy"]},{"name":"open override fun onPause(owner: LifecycleOwner)","description":"io.github.thibaultbee.streampack.streamers.StreamerLifeCycleObserver.onPause","location":"core/io.github.thibaultbee.streampack.streamers/-streamer-life-cycle-observer/on-pause.html","searchKeys":["onPause","open override fun onPause(owner: LifecycleOwner)","io.github.thibaultbee.streampack.streamers.StreamerLifeCycleObserver.onPause"]},{"name":"open override fun onTouchEvent(event: MotionEvent): Boolean","description":"io.github.thibaultbee.streampack.views.PreviewView.onTouchEvent","location":"core/io.github.thibaultbee.streampack.views/-preview-view/on-touch-event.html","searchKeys":["onTouchEvent","open override fun onTouchEvent(event: MotionEvent): Boolean","io.github.thibaultbee.streampack.views.PreviewView.onTouchEvent"]},{"name":"open override fun performClick(): Boolean","description":"io.github.thibaultbee.streampack.views.PreviewView.performClick","location":"core/io.github.thibaultbee.streampack.views/-preview-view/perform-click.html","searchKeys":["performClick","open override fun performClick(): Boolean","io.github.thibaultbee.streampack.views.PreviewView.performClick"]},{"name":"open override fun release()","description":"io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.release","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-camera-streamer/release.html","searchKeys":["release","open override fun release()","io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.release"]},{"name":"open override fun release()","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.release","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/release.html","searchKeys":["release","open override fun release()","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.release"]},{"name":"open override fun startPreview(previewSurface: Surface, cameraId: String)","description":"io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.startPreview","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-camera-streamer/start-preview.html","searchKeys":["startPreview","open override fun startPreview(previewSurface: Surface, cameraId: String)","io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.startPreview"]},{"name":"open override fun stopPreview()","description":"io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.stopPreview","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-camera-streamer/stop-preview.html","searchKeys":["stopPreview","open override fun stopPreview()","io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.stopPreview"]},{"name":"open override fun toString(): String","description":"io.github.thibaultbee.streampack.data.AudioConfig.toString","location":"core/io.github.thibaultbee.streampack.data/-audio-config/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.thibaultbee.streampack.data.AudioConfig.toString"]},{"name":"open override fun toString(): String","description":"io.github.thibaultbee.streampack.data.Config.toString","location":"core/io.github.thibaultbee.streampack.data/-config/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.thibaultbee.streampack.data.Config.toString"]},{"name":"open override fun toString(): String","description":"io.github.thibaultbee.streampack.data.VideoConfig.toString","location":"core/io.github.thibaultbee.streampack.data/-video-config/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.thibaultbee.streampack.data.VideoConfig.toString"]},{"name":"open override fun v(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.logger.Logger.v","location":"core/io.github.thibaultbee.streampack.logger/-logger/v.html","searchKeys":["v","open override fun v(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.logger.Logger.v"]},{"name":"open override fun v(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.logger.StreamPackLogger.v","location":"core/io.github.thibaultbee.streampack.logger/-stream-pack-logger/v.html","searchKeys":["v","open override fun v(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.logger.StreamPackLogger.v"]},{"name":"open override fun w(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.logger.Logger.w","location":"core/io.github.thibaultbee.streampack.logger/-logger/w.html","searchKeys":["w","open override fun w(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.logger.Logger.w"]},{"name":"open override fun w(tag: String, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.logger.StreamPackLogger.w","location":"core/io.github.thibaultbee.streampack.logger/-stream-pack-logger/w.html","searchKeys":["w","open override fun w(tag: String, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.logger.StreamPackLogger.w"]},{"name":"open override fun write(b: ByteArray)","description":"io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.write","location":"core/io.github.thibaultbee.streampack.utils/-chunked-file-output-stream/write.html","searchKeys":["write","open override fun write(b: ByteArray)","io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.write"]},{"name":"open override fun write(b: ByteArray, offset: Int, len: Int)","description":"io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.write","location":"core/io.github.thibaultbee.streampack.utils/-chunked-file-output-stream/write.html","searchKeys":["write","open override fun write(b: ByteArray, offset: Int, len: Int)","io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.write"]},{"name":"open override fun write(i: Int)","description":"io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.write","location":"core/io.github.thibaultbee.streampack.utils/-chunked-file-output-stream/write.html","searchKeys":["write","open override fun write(i: Int)","io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.write"]},{"name":"open override val audio: AudioStreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.audio","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-streamer-configuration-helper/audio.html","searchKeys":["audio","open override val audio: AudioStreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.audio"]},{"name":"open override val audio: BaseStreamerAudioSettings","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerSettings.audio","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-settings/audio.html","searchKeys":["audio","open override val audio: BaseStreamerAudioSettings","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerSettings.audio"]},{"name":"open override val availableRatioRange: Range<Float>","description":"io.github.thibaultbee.streampack.utils.Zoom.CropScalerRegionZoom.availableRatioRange","location":"core/io.github.thibaultbee.streampack.utils/-zoom/-crop-scaler-region-zoom/available-ratio-range.html","searchKeys":["availableRatioRange","open override val availableRatioRange: Range<Float>","io.github.thibaultbee.streampack.utils.Zoom.CropScalerRegionZoom.availableRatioRange"]},{"name":"open override val availableRatioRange: Range<Float>","description":"io.github.thibaultbee.streampack.utils.Zoom.RZoom.availableRatioRange","location":"core/io.github.thibaultbee.streampack.utils/-zoom/-r-zoom/available-ratio-range.html","searchKeys":["availableRatioRange","open override val availableRatioRange: Range<Float>","io.github.thibaultbee.streampack.utils.Zoom.RZoom.availableRatioRange"]},{"name":"open override val camera: CameraSettings","description":"io.github.thibaultbee.streampack.streamers.settings.BaseCameraStreamerSettings.camera","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-camera-streamer-settings/camera.html","searchKeys":["camera","open override val camera: CameraSettings","io.github.thibaultbee.streampack.streamers.settings.BaseCameraStreamerSettings.camera"]},{"name":"open override val helper: CameraStreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.helper","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-camera-streamer/helper.html","searchKeys":["helper","open override val helper: CameraStreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.helper"]},{"name":"open override val helper: StreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.helper","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/helper.html","searchKeys":["helper","open override val helper: StreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.helper"]},{"name":"open override val isConnected: Boolean","description":"io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.isConnected","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-audio-only-live-streamer/is-connected.html","searchKeys":["isConnected","open override val isConnected: Boolean","io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.isConnected"]},{"name":"open override val isConnected: Boolean","description":"io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.isConnected","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-camera-live-streamer/is-connected.html","searchKeys":["isConnected","open override val isConnected: Boolean","io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.isConnected"]},{"name":"open override val isConnected: Boolean","description":"io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.isConnected","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-screen-recorder-live-streamer/is-connected.html","searchKeys":["isConnected","open override val isConnected: Boolean","io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.isConnected"]},{"name":"open override val settings: BaseStreamerSettings","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.settings","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/settings.html","searchKeys":["settings","open override val settings: BaseStreamerSettings","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.settings"]},{"name":"open override val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.supportedEncoders","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-audio-streamer-configuration-helper/supported-encoders.html","searchKeys":["supportedEncoders","open override val supportedEncoders: List<String>","io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.supportedEncoders"]},{"name":"open override val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.supportedEncoders","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-streamer-configuration-helper/supported-encoders.html","searchKeys":["supportedEncoders","open override val supportedEncoders: List<String>","io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.supportedEncoders"]},{"name":"open override val video: BaseStreamerVideoSettings","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerSettings.video","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-settings/video.html","searchKeys":["video","open override val video: BaseStreamerVideoSettings","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerSettings.video"]},{"name":"open override val video: VideoCameraStreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.video","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-camera-streamer-configuration-helper/video.html","searchKeys":["video","open override val video: VideoCameraStreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.video"]},{"name":"open override val video: VideoStreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.video","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-streamer-configuration-helper/video.html","searchKeys":["video","open override val video: VideoStreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.video"]},{"name":"open override var bitrate: Int","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerAudioSettings.bitrate","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-audio-settings/bitrate.html","searchKeys":["bitrate","open override var bitrate: Int","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerAudioSettings.bitrate"]},{"name":"open override var bitrate: Int","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerVideoSettings.bitrate","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-video-settings/bitrate.html","searchKeys":["bitrate","open override var bitrate: Int","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerVideoSettings.bitrate"]},{"name":"open override var camera: String","description":"io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.camera","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-camera-streamer/camera.html","searchKeys":["camera","open override var camera: String","io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.camera"]},{"name":"open override var file: File?","description":"io.github.thibaultbee.streampack.streamers.file.BaseAudioOnlyFileStreamer.file","location":"core/io.github.thibaultbee.streampack.streamers.file/-base-audio-only-file-streamer/file.html","searchKeys":["file","open override var file: File?","io.github.thibaultbee.streampack.streamers.file.BaseAudioOnlyFileStreamer.file"]},{"name":"open override var file: File?","description":"io.github.thibaultbee.streampack.streamers.file.BaseCameraFileStreamer.file","location":"core/io.github.thibaultbee.streampack.streamers.file/-base-camera-file-streamer/file.html","searchKeys":["file","open override var file: File?","io.github.thibaultbee.streampack.streamers.file.BaseCameraFileStreamer.file"]},{"name":"open override var isMuted: Boolean","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerAudioSettings.isMuted","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-audio-settings/is-muted.html","searchKeys":["isMuted","open override var isMuted: Boolean","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerAudioSettings.isMuted"]},{"name":"open override var onConnectionListener: OnConnectionListener?","description":"io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.onConnectionListener","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-audio-only-live-streamer/on-connection-listener.html","searchKeys":["onConnectionListener","open override var onConnectionListener: OnConnectionListener?","io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.onConnectionListener"]},{"name":"open override var onConnectionListener: OnConnectionListener?","description":"io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.onConnectionListener","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-camera-live-streamer/on-connection-listener.html","searchKeys":["onConnectionListener","open override var onConnectionListener: OnConnectionListener?","io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.onConnectionListener"]},{"name":"open override var onConnectionListener: OnConnectionListener?","description":"io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.onConnectionListener","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-screen-recorder-live-streamer/on-connection-listener.html","searchKeys":["onConnectionListener","open override var onConnectionListener: OnConnectionListener?","io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.onConnectionListener"]},{"name":"open override var onErrorListener: OnErrorListener?","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.onErrorListener","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/on-error-listener.html","searchKeys":["onErrorListener","open override var onErrorListener: OnErrorListener?","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.onErrorListener"]},{"name":"open override var outputStream: OutputStream?","description":"io.github.thibaultbee.streampack.streamers.file.BaseAudioOnlyFileStreamer.outputStream","location":"core/io.github.thibaultbee.streampack.streamers.file/-base-audio-only-file-streamer/output-stream.html","searchKeys":["outputStream","open override var outputStream: OutputStream?","io.github.thibaultbee.streampack.streamers.file.BaseAudioOnlyFileStreamer.outputStream"]},{"name":"open override var outputStream: OutputStream?","description":"io.github.thibaultbee.streampack.streamers.file.BaseCameraFileStreamer.outputStream","location":"core/io.github.thibaultbee.streampack.streamers.file/-base-camera-file-streamer/output-stream.html","searchKeys":["outputStream","open override var outputStream: OutputStream?","io.github.thibaultbee.streampack.streamers.file.BaseCameraFileStreamer.outputStream"]},{"name":"open override var settings: BaseCameraStreamerSettings","description":"io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.settings","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-camera-streamer/settings.html","searchKeys":["settings","open override var settings: BaseCameraStreamerSettings","io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.settings"]},{"name":"open override var zoomRatio: Float","description":"io.github.thibaultbee.streampack.utils.Zoom.CropScalerRegionZoom.zoomRatio","location":"core/io.github.thibaultbee.streampack.utils/-zoom/-crop-scaler-region-zoom/zoom-ratio.html","searchKeys":["zoomRatio","open override var zoomRatio: Float","io.github.thibaultbee.streampack.utils.Zoom.CropScalerRegionZoom.zoomRatio"]},{"name":"open override var zoomRatio: Float","description":"io.github.thibaultbee.streampack.utils.Zoom.RZoom.zoomRatio","location":"core/io.github.thibaultbee.streampack.utils/-zoom/-r-zoom/zoom-ratio.html","searchKeys":["zoomRatio","open override var zoomRatio: Float","io.github.thibaultbee.streampack.utils.Zoom.RZoom.zoomRatio"]},{"name":"open suspend override fun connect(url: String)","description":"io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.connect","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-audio-only-live-streamer/connect.html","searchKeys":["connect","open suspend override fun connect(url: String)","io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.connect"]},{"name":"open suspend override fun connect(url: String)","description":"io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.connect","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-camera-live-streamer/connect.html","searchKeys":["connect","open suspend override fun connect(url: String)","io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.connect"]},{"name":"open suspend override fun connect(url: String)","description":"io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.connect","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-screen-recorder-live-streamer/connect.html","searchKeys":["connect","open suspend override fun connect(url: String)","io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.connect"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.startStream","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-screen-recorder-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.startStream"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.startStream","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.startStream"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.streamers.file.BaseAudioOnlyFileStreamer.startStream","location":"core/io.github.thibaultbee.streampack.streamers.file/-base-audio-only-file-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.streamers.file.BaseAudioOnlyFileStreamer.startStream"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.streamers.file.BaseCameraFileStreamer.startStream","location":"core/io.github.thibaultbee.streampack.streamers.file/-base-camera-file-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.streamers.file.BaseCameraFileStreamer.startStream"]},{"name":"open suspend override fun startStream(url: String)","description":"io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.startStream","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-audio-only-live-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream(url: String)","io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.startStream"]},{"name":"open suspend override fun startStream(url: String)","description":"io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.startStream","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-camera-live-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream(url: String)","io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.startStream"]},{"name":"open suspend override fun startStream(url: String)","description":"io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.startStream","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-screen-recorder-live-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream(url: String)","io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.startStream"]},{"name":"open suspend override fun stopStream()","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.stopStream","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/stop-stream.html","searchKeys":["stopStream","open suspend override fun stopStream()","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.stopStream"]},{"name":"sealed class Zoom","description":"io.github.thibaultbee.streampack.utils.Zoom","location":"core/io.github.thibaultbee.streampack.utils/-zoom/index.html","searchKeys":["Zoom","sealed class Zoom","io.github.thibaultbee.streampack.utils.Zoom"]},{"name":"val Context.backCameraList: List<String>","description":"io.github.thibaultbee.streampack.utils.backCameraList","location":"core/io.github.thibaultbee.streampack.utils/back-camera-list.html","searchKeys":["backCameraList","val Context.backCameraList: List<String>","io.github.thibaultbee.streampack.utils.backCameraList"]},{"name":"val Context.cameraList: List<String>","description":"io.github.thibaultbee.streampack.utils.cameraList","location":"core/io.github.thibaultbee.streampack.utils/camera-list.html","searchKeys":["cameraList","val Context.cameraList: List<String>","io.github.thibaultbee.streampack.utils.cameraList"]},{"name":"val Context.defaultCameraId: String","description":"io.github.thibaultbee.streampack.utils.defaultCameraId","location":"core/io.github.thibaultbee.streampack.utils/default-camera-id.html","searchKeys":["defaultCameraId","val Context.defaultCameraId: String","io.github.thibaultbee.streampack.utils.defaultCameraId"]},{"name":"val Context.externalCameraList: List<String>","description":"io.github.thibaultbee.streampack.utils.externalCameraList","location":"core/io.github.thibaultbee.streampack.utils/external-camera-list.html","searchKeys":["externalCameraList","val Context.externalCameraList: List<String>","io.github.thibaultbee.streampack.utils.externalCameraList"]},{"name":"val Context.frontCameraList: List<String>","description":"io.github.thibaultbee.streampack.utils.frontCameraList","location":"core/io.github.thibaultbee.streampack.utils/front-camera-list.html","searchKeys":["frontCameraList","val Context.frontCameraList: List<String>","io.github.thibaultbee.streampack.utils.frontCameraList"]},{"name":"val DEFAULT_COMPENSATION_RANGE: Range<Int>","description":"io.github.thibaultbee.streampack.utils.Exposure.Companion.DEFAULT_COMPENSATION_RANGE","location":"core/io.github.thibaultbee.streampack.utils/-exposure/-companion/-d-e-f-a-u-l-t_-c-o-m-p-e-n-s-a-t-i-o-n_-r-a-n-g-e.html","searchKeys":["DEFAULT_COMPENSATION_RANGE","val DEFAULT_COMPENSATION_RANGE: Range<Int>","io.github.thibaultbee.streampack.utils.Exposure.Companion.DEFAULT_COMPENSATION_RANGE"]},{"name":"val DEFAULT_COMPENSATION_STEP_RATIONAL: Rational","description":"io.github.thibaultbee.streampack.utils.Exposure.Companion.DEFAULT_COMPENSATION_STEP_RATIONAL","location":"core/io.github.thibaultbee.streampack.utils/-exposure/-companion/-d-e-f-a-u-l-t_-c-o-m-p-e-n-s-a-t-i-o-n_-s-t-e-p_-r-a-t-i-o-n-a-l.html","searchKeys":["DEFAULT_COMPENSATION_STEP_RATIONAL","val DEFAULT_COMPENSATION_STEP_RATIONAL: Rational","io.github.thibaultbee.streampack.utils.Exposure.Companion.DEFAULT_COMPENSATION_STEP_RATIONAL"]},{"name":"val DEFAULT_LENS_DISTANCE_RANGE: Range<Float>","description":"io.github.thibaultbee.streampack.utils.Focus.Companion.DEFAULT_LENS_DISTANCE_RANGE","location":"core/io.github.thibaultbee.streampack.utils/-focus/-companion/-d-e-f-a-u-l-t_-l-e-n-s_-d-i-s-t-a-n-c-e_-r-a-n-g-e.html","searchKeys":["DEFAULT_LENS_DISTANCE_RANGE","val DEFAULT_LENS_DISTANCE_RANGE: Range<Float>","io.github.thibaultbee.streampack.utils.Focus.Companion.DEFAULT_LENS_DISTANCE_RANGE"]},{"name":"val DEFAULT_SENSITIVITY_RANGE: Range<Int>","description":"io.github.thibaultbee.streampack.utils.Iso.Companion.DEFAULT_SENSITIVITY_RANGE","location":"core/io.github.thibaultbee.streampack.utils/-iso/-companion/-d-e-f-a-u-l-t_-s-e-n-s-i-t-i-v-i-t-y_-r-a-n-g-e.html","searchKeys":["DEFAULT_SENSITIVITY_RANGE","val DEFAULT_SENSITIVITY_RANGE: Range<Int>","io.github.thibaultbee.streampack.utils.Iso.Companion.DEFAULT_SENSITIVITY_RANGE"]},{"name":"val DEFAULT_ZOOM_RATIO_RANGE: Range<Float>","description":"io.github.thibaultbee.streampack.utils.Zoom.Companion.DEFAULT_ZOOM_RATIO_RANGE","location":"core/io.github.thibaultbee.streampack.utils/-zoom/-companion/-d-e-f-a-u-l-t_-z-o-o-m_-r-a-t-i-o_-r-a-n-g-e.html","searchKeys":["DEFAULT_ZOOM_RATIO_RANGE","val DEFAULT_ZOOM_RATIO_RANGE: Range<Float>","io.github.thibaultbee.streampack.utils.Zoom.Companion.DEFAULT_ZOOM_RATIO_RANGE"]},{"name":"val audioBitrateRange: Range<Int>","description":"io.github.thibaultbee.streampack.data.BitrateRegulatorConfig.audioBitrateRange","location":"core/io.github.thibaultbee.streampack.data/-bitrate-regulator-config/audio-bitrate-range.html","searchKeys":["audioBitrateRange","val audioBitrateRange: Range<Int>","io.github.thibaultbee.streampack.data.BitrateRegulatorConfig.audioBitrateRange"]},{"name":"val available: Boolean","description":"io.github.thibaultbee.streampack.utils.Flash.available","location":"core/io.github.thibaultbee.streampack.utils/-flash/available.html","searchKeys":["available","val available: Boolean","io.github.thibaultbee.streampack.utils.Flash.available"]},{"name":"val availableAutoModes: List<Int>","description":"io.github.thibaultbee.streampack.utils.Exposure.availableAutoModes","location":"core/io.github.thibaultbee.streampack.utils/-exposure/available-auto-modes.html","searchKeys":["availableAutoModes","val availableAutoModes: List<Int>","io.github.thibaultbee.streampack.utils.Exposure.availableAutoModes"]},{"name":"val availableAutoModes: List<Int>","description":"io.github.thibaultbee.streampack.utils.Focus.availableAutoModes","location":"core/io.github.thibaultbee.streampack.utils/-focus/available-auto-modes.html","searchKeys":["availableAutoModes","val availableAutoModes: List<Int>","io.github.thibaultbee.streampack.utils.Focus.availableAutoModes"]},{"name":"val availableAutoModes: List<Int>","description":"io.github.thibaultbee.streampack.utils.WhiteBalance.availableAutoModes","location":"core/io.github.thibaultbee.streampack.utils/-white-balance/available-auto-modes.html","searchKeys":["availableAutoModes","val availableAutoModes: List<Int>","io.github.thibaultbee.streampack.utils.WhiteBalance.availableAutoModes"]},{"name":"val availableCompensationRange: Range<Int>","description":"io.github.thibaultbee.streampack.utils.Exposure.availableCompensationRange","location":"core/io.github.thibaultbee.streampack.utils/-exposure/available-compensation-range.html","searchKeys":["availableCompensationRange","val availableCompensationRange: Range<Int>","io.github.thibaultbee.streampack.utils.Exposure.availableCompensationRange"]},{"name":"val availableCompensationStep: Rational","description":"io.github.thibaultbee.streampack.utils.Exposure.availableCompensationStep","location":"core/io.github.thibaultbee.streampack.utils/-exposure/available-compensation-step.html","searchKeys":["availableCompensationStep","val availableCompensationStep: Rational","io.github.thibaultbee.streampack.utils.Exposure.availableCompensationStep"]},{"name":"val availableLensDistanceRange: Range<Float>","description":"io.github.thibaultbee.streampack.utils.Focus.availableLensDistanceRange","location":"core/io.github.thibaultbee.streampack.utils/-focus/available-lens-distance-range.html","searchKeys":["availableLensDistanceRange","val availableLensDistanceRange: Range<Float>","io.github.thibaultbee.streampack.utils.Focus.availableLensDistanceRange"]},{"name":"val availableOptical: Boolean","description":"io.github.thibaultbee.streampack.utils.Stabilization.availableOptical","location":"core/io.github.thibaultbee.streampack.utils/-stabilization/available-optical.html","searchKeys":["availableOptical","val availableOptical: Boolean","io.github.thibaultbee.streampack.utils.Stabilization.availableOptical"]},{"name":"val availableSensorSensitivityRange: Range<Int>","description":"io.github.thibaultbee.streampack.utils.Iso.availableSensorSensitivityRange","location":"core/io.github.thibaultbee.streampack.utils/-iso/available-sensor-sensitivity-range.html","searchKeys":["availableSensorSensitivityRange","val availableSensorSensitivityRange: Range<Int>","io.github.thibaultbee.streampack.utils.Iso.availableSensorSensitivityRange"]},{"name":"val byteFormat: Int","description":"io.github.thibaultbee.streampack.data.AudioConfig.byteFormat","location":"core/io.github.thibaultbee.streampack.data/-audio-config/byte-format.html","searchKeys":["byteFormat","val byteFormat: Int","io.github.thibaultbee.streampack.data.AudioConfig.byteFormat"]},{"name":"val channelConfig: Int","description":"io.github.thibaultbee.streampack.data.AudioConfig.channelConfig","location":"core/io.github.thibaultbee.streampack.data/-audio-config/channel-config.html","searchKeys":["channelConfig","val channelConfig: Int","io.github.thibaultbee.streampack.data.AudioConfig.channelConfig"]},{"name":"val defaultEncoderName: String?","description":"io.github.thibaultbee.streampack.data.Config.defaultEncoderName","location":"core/io.github.thibaultbee.streampack.data/-config/default-encoder-name.html","searchKeys":["defaultEncoderName","val defaultEncoderName: String?","io.github.thibaultbee.streampack.data.Config.defaultEncoderName"]},{"name":"val dynamicRangeProfile: DynamicRangeProfile","description":"io.github.thibaultbee.streampack.data.VideoConfig.dynamicRangeProfile","location":"core/io.github.thibaultbee.streampack.data/-video-config/dynamic-range-profile.html","searchKeys":["dynamicRangeProfile","val dynamicRangeProfile: DynamicRangeProfile","io.github.thibaultbee.streampack.data.VideoConfig.dynamicRangeProfile"]},{"name":"val enableEchoCanceler: Boolean = true","description":"io.github.thibaultbee.streampack.data.AudioConfig.enableEchoCanceler","location":"core/io.github.thibaultbee.streampack.data/-audio-config/enable-echo-canceler.html","searchKeys":["enableEchoCanceler","val enableEchoCanceler: Boolean = true","io.github.thibaultbee.streampack.data.AudioConfig.enableEchoCanceler"]},{"name":"val enableNoiseSuppressor: Boolean = true","description":"io.github.thibaultbee.streampack.data.AudioConfig.enableNoiseSuppressor","location":"core/io.github.thibaultbee.streampack.data/-audio-config/enable-noise-suppressor.html","searchKeys":["enableNoiseSuppressor","val enableNoiseSuppressor: Boolean = true","io.github.thibaultbee.streampack.data.AudioConfig.enableNoiseSuppressor"]},{"name":"val entries: EnumEntries<PreviewView.Position>","description":"io.github.thibaultbee.streampack.views.PreviewView.Position.entries","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-position/entries.html","searchKeys":["entries","val entries: EnumEntries<PreviewView.Position>","io.github.thibaultbee.streampack.views.PreviewView.Position.entries"]},{"name":"val entries: EnumEntries<PreviewView.ScaleMode>","description":"io.github.thibaultbee.streampack.views.PreviewView.ScaleMode.entries","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-scale-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<PreviewView.ScaleMode>","io.github.thibaultbee.streampack.views.PreviewView.ScaleMode.entries"]},{"name":"val exposure: Exposure","description":"io.github.thibaultbee.streampack.utils.CameraSettings.exposure","location":"core/io.github.thibaultbee.streampack.utils/-camera-settings/exposure.html","searchKeys":["exposure","val exposure: Exposure","io.github.thibaultbee.streampack.utils.CameraSettings.exposure"]},{"name":"val filesDir: File","description":"io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.filesDir","location":"core/io.github.thibaultbee.streampack.utils/-chunked-file-output-stream/files-dir.html","searchKeys":["filesDir","val filesDir: File","io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.filesDir"]},{"name":"val flash: Flash","description":"io.github.thibaultbee.streampack.utils.CameraSettings.flash","location":"core/io.github.thibaultbee.streampack.utils/-camera-settings/flash.html","searchKeys":["flash","val flash: Flash","io.github.thibaultbee.streampack.utils.CameraSettings.flash"]},{"name":"val flvHelper: CameraStreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.Companion.flvHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-camera-streamer-configuration-helper/-companion/flv-helper.html","searchKeys":["flvHelper","val flvHelper: CameraStreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.Companion.flvHelper"]},{"name":"val flvHelper: StreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.Companion.flvHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-streamer-configuration-helper/-companion/flv-helper.html","searchKeys":["flvHelper","val flvHelper: StreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.Companion.flvHelper"]},{"name":"val focus: Focus","description":"io.github.thibaultbee.streampack.utils.CameraSettings.focus","location":"core/io.github.thibaultbee.streampack.utils/-camera-settings/focus.html","searchKeys":["focus","val focus: Focus","io.github.thibaultbee.streampack.utils.CameraSettings.focus"]},{"name":"val focusMetering: FocusMetering","description":"io.github.thibaultbee.streampack.utils.CameraSettings.focusMetering","location":"core/io.github.thibaultbee.streampack.utils/-camera-settings/focus-metering.html","searchKeys":["focusMetering","val focusMetering: FocusMetering","io.github.thibaultbee.streampack.utils.CameraSettings.focusMetering"]},{"name":"val fps: Int = 30","description":"io.github.thibaultbee.streampack.data.VideoConfig.fps","location":"core/io.github.thibaultbee.streampack.data/-video-config/fps.html","searchKeys":["fps","val fps: Int = 30","io.github.thibaultbee.streampack.data.VideoConfig.fps"]},{"name":"val gopDuration: Float = 1.0f","description":"io.github.thibaultbee.streampack.data.VideoConfig.gopDuration","location":"core/io.github.thibaultbee.streampack.data/-video-config/gop-duration.html","searchKeys":["gopDuration","val gopDuration: Float = 1.0f","io.github.thibaultbee.streampack.data.VideoConfig.gopDuration"]},{"name":"val isClosed: Boolean","description":"io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.isClosed","location":"core/io.github.thibaultbee.streampack.utils/-chunked-file-output-stream/is-closed.html","searchKeys":["isClosed","val isClosed: Boolean","io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.isClosed"]},{"name":"val isFormatSupported: Boolean","description":"io.github.thibaultbee.streampack.data.Config.isFormatSupported","location":"core/io.github.thibaultbee.streampack.data/-config/is-format-supported.html","searchKeys":["isFormatSupported","val isFormatSupported: Boolean","io.github.thibaultbee.streampack.data.Config.isFormatSupported"]},{"name":"val iso: Iso","description":"io.github.thibaultbee.streampack.utils.CameraSettings.iso","location":"core/io.github.thibaultbee.streampack.utils/-camera-settings/iso.html","searchKeys":["iso","val iso: Iso","io.github.thibaultbee.streampack.utils.CameraSettings.iso"]},{"name":"val level: Int","description":"io.github.thibaultbee.streampack.data.VideoConfig.level","location":"core/io.github.thibaultbee.streampack.data/-video-config/level.html","searchKeys":["level","val level: Int","io.github.thibaultbee.streampack.data.VideoConfig.level"]},{"name":"val maxNumOfMeteringRegions: Int","description":"io.github.thibaultbee.streampack.utils.Exposure.maxNumOfMeteringRegions","location":"core/io.github.thibaultbee.streampack.utils/-exposure/max-num-of-metering-regions.html","searchKeys":["maxNumOfMeteringRegions","val maxNumOfMeteringRegions: Int","io.github.thibaultbee.streampack.utils.Exposure.maxNumOfMeteringRegions"]},{"name":"val maxNumOfMeteringRegions: Int","description":"io.github.thibaultbee.streampack.utils.Focus.maxNumOfMeteringRegions","location":"core/io.github.thibaultbee.streampack.utils/-focus/max-num-of-metering-regions.html","searchKeys":["maxNumOfMeteringRegions","val maxNumOfMeteringRegions: Int","io.github.thibaultbee.streampack.utils.Focus.maxNumOfMeteringRegions"]},{"name":"val maxNumOfMeteringRegions: Int","description":"io.github.thibaultbee.streampack.utils.WhiteBalance.maxNumOfMeteringRegions","location":"core/io.github.thibaultbee.streampack.utils/-white-balance/max-num-of-metering-regions.html","searchKeys":["maxNumOfMeteringRegions","val maxNumOfMeteringRegions: Int","io.github.thibaultbee.streampack.utils.WhiteBalance.maxNumOfMeteringRegions"]},{"name":"val mimeType: String","description":"io.github.thibaultbee.streampack.data.Config.mimeType","location":"core/io.github.thibaultbee.streampack.data/-config/mime-type.html","searchKeys":["mimeType","val mimeType: String","io.github.thibaultbee.streampack.data.Config.mimeType"]},{"name":"val mp4Helper: CameraStreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.Companion.mp4Helper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-camera-streamer-configuration-helper/-companion/mp4-helper.html","searchKeys":["mp4Helper","val mp4Helper: CameraStreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.Companion.mp4Helper"]},{"name":"val mp4Helper: StreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.Companion.mp4Helper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-streamer-configuration-helper/-companion/mp4-helper.html","searchKeys":["mp4Helper","val mp4Helper: StreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.Companion.mp4Helper"]},{"name":"val numOfFiles: Int","description":"io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.numOfFiles","location":"core/io.github.thibaultbee.streampack.utils/-chunked-file-output-stream/num-of-files.html","searchKeys":["numOfFiles","val numOfFiles: Int","io.github.thibaultbee.streampack.utils.ChunkedFileOutputStream.numOfFiles"]},{"name":"val profile: Int = 0","description":"io.github.thibaultbee.streampack.data.Config.profile","location":"core/io.github.thibaultbee.streampack.data/-config/profile.html","searchKeys":["profile","val profile: Int = 0","io.github.thibaultbee.streampack.data.Config.profile"]},{"name":"val resolution: Size","description":"io.github.thibaultbee.streampack.data.VideoConfig.resolution","location":"core/io.github.thibaultbee.streampack.data/-video-config/resolution.html","searchKeys":["resolution","val resolution: Size","io.github.thibaultbee.streampack.data.VideoConfig.resolution"]},{"name":"val sampleRate: Int","description":"io.github.thibaultbee.streampack.data.AudioConfig.sampleRate","location":"core/io.github.thibaultbee.streampack.data/-audio-config/sample-rate.html","searchKeys":["sampleRate","val sampleRate: Int","io.github.thibaultbee.streampack.data.AudioConfig.sampleRate"]},{"name":"val stabilization: Stabilization","description":"io.github.thibaultbee.streampack.utils.CameraSettings.stabilization","location":"core/io.github.thibaultbee.streampack.utils/-camera-settings/stabilization.html","searchKeys":["stabilization","val stabilization: Stabilization","io.github.thibaultbee.streampack.utils.CameraSettings.stabilization"]},{"name":"val startBitrate: Int","description":"io.github.thibaultbee.streampack.data.Config.startBitrate","location":"core/io.github.thibaultbee.streampack.data/-config/start-bitrate.html","searchKeys":["startBitrate","val startBitrate: Int","io.github.thibaultbee.streampack.data.Config.startBitrate"]},{"name":"val tsHelper: CameraStreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.Companion.tsHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-camera-streamer-configuration-helper/-companion/ts-helper.html","searchKeys":["tsHelper","val tsHelper: CameraStreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.Companion.tsHelper"]},{"name":"val tsHelper: StreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.Companion.tsHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-streamer-configuration-helper/-companion/ts-helper.html","searchKeys":["tsHelper","val tsHelper: StreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.Companion.tsHelper"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.views.PreviewView.Position.value","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-position/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.views.PreviewView.Position.value"]},{"name":"val value: Int","description":"io.github.thibaultbee.streampack.views.PreviewView.ScaleMode.value","location":"core/io.github.thibaultbee.streampack.views/-preview-view/-scale-mode/value.html","searchKeys":["value","val value: Int","io.github.thibaultbee.streampack.views.PreviewView.ScaleMode.value"]},{"name":"val videoBitrateRange: Range<Int>","description":"io.github.thibaultbee.streampack.data.BitrateRegulatorConfig.videoBitrateRange","location":"core/io.github.thibaultbee.streampack.data/-bitrate-regulator-config/video-bitrate-range.html","searchKeys":["videoBitrateRange","val videoBitrateRange: Range<Int>","io.github.thibaultbee.streampack.data.BitrateRegulatorConfig.videoBitrateRange"]},{"name":"val whiteBalance: WhiteBalance","description":"io.github.thibaultbee.streampack.utils.CameraSettings.whiteBalance","location":"core/io.github.thibaultbee.streampack.utils/-camera-settings/white-balance.html","searchKeys":["whiteBalance","val whiteBalance: WhiteBalance","io.github.thibaultbee.streampack.utils.CameraSettings.whiteBalance"]},{"name":"val zoom: Zoom","description":"io.github.thibaultbee.streampack.utils.CameraSettings.zoom","location":"core/io.github.thibaultbee.streampack.utils/-camera-settings/zoom.html","searchKeys":["zoom","val zoom: Zoom","io.github.thibaultbee.streampack.utils.CameraSettings.zoom"]},{"name":"var activityResult: ActivityResult?","description":"io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.activityResult","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-screen-recorder-streamer/activity-result.html","searchKeys":["activityResult","var activityResult: ActivityResult?","io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.activityResult"]},{"name":"var autoMode: Int","description":"io.github.thibaultbee.streampack.utils.Exposure.autoMode","location":"core/io.github.thibaultbee.streampack.utils/-exposure/auto-mode.html","searchKeys":["autoMode","var autoMode: Int","io.github.thibaultbee.streampack.utils.Exposure.autoMode"]},{"name":"var autoMode: Int","description":"io.github.thibaultbee.streampack.utils.Focus.autoMode","location":"core/io.github.thibaultbee.streampack.utils/-focus/auto-mode.html","searchKeys":["autoMode","var autoMode: Int","io.github.thibaultbee.streampack.utils.Focus.autoMode"]},{"name":"var autoMode: Int","description":"io.github.thibaultbee.streampack.utils.WhiteBalance.autoMode","location":"core/io.github.thibaultbee.streampack.utils/-white-balance/auto-mode.html","searchKeys":["autoMode","var autoMode: Int","io.github.thibaultbee.streampack.utils.WhiteBalance.autoMode"]},{"name":"var compensation: Int","description":"io.github.thibaultbee.streampack.utils.Exposure.compensation","location":"core/io.github.thibaultbee.streampack.utils/-exposure/compensation.html","searchKeys":["compensation","var compensation: Int","io.github.thibaultbee.streampack.utils.Exposure.compensation"]},{"name":"var enable: Boolean","description":"io.github.thibaultbee.streampack.utils.Flash.enable","location":"core/io.github.thibaultbee.streampack.utils/-flash/enable.html","searchKeys":["enable","var enable: Boolean","io.github.thibaultbee.streampack.utils.Flash.enable"]},{"name":"var enableOptical: Boolean","description":"io.github.thibaultbee.streampack.utils.Stabilization.enableOptical","location":"core/io.github.thibaultbee.streampack.utils/-stabilization/enable-optical.html","searchKeys":["enableOptical","var enableOptical: Boolean","io.github.thibaultbee.streampack.utils.Stabilization.enableOptical"]},{"name":"var enableTapToFocus: Boolean","description":"io.github.thibaultbee.streampack.views.PreviewView.enableTapToFocus","location":"core/io.github.thibaultbee.streampack.views/-preview-view/enable-tap-to-focus.html","searchKeys":["enableTapToFocus","var enableTapToFocus: Boolean","io.github.thibaultbee.streampack.views.PreviewView.enableTapToFocus"]},{"name":"var enableVideo: Boolean","description":"io.github.thibaultbee.streampack.utils.Stabilization.enableVideo","location":"core/io.github.thibaultbee.streampack.utils/-stabilization/enable-video.html","searchKeys":["enableVideo","var enableVideo: Boolean","io.github.thibaultbee.streampack.utils.Stabilization.enableVideo"]},{"name":"var enableZoomOnPinch: Boolean","description":"io.github.thibaultbee.streampack.views.PreviewView.enableZoomOnPinch","location":"core/io.github.thibaultbee.streampack.views/-preview-view/enable-zoom-on-pinch.html","searchKeys":["enableZoomOnPinch","var enableZoomOnPinch: Boolean","io.github.thibaultbee.streampack.views.PreviewView.enableZoomOnPinch"]},{"name":"var lensDistance: Float","description":"io.github.thibaultbee.streampack.utils.Focus.lensDistance","location":"core/io.github.thibaultbee.streampack.utils/-focus/lens-distance.html","searchKeys":["lensDistance","var lensDistance: Float","io.github.thibaultbee.streampack.utils.Focus.lensDistance"]},{"name":"var listener: PreviewView.Listener?","description":"io.github.thibaultbee.streampack.views.PreviewView.listener","location":"core/io.github.thibaultbee.streampack.views/-preview-view/listener.html","searchKeys":["listener","var listener: PreviewView.Listener?","io.github.thibaultbee.streampack.views.PreviewView.listener"]},{"name":"var logger: ILogger","description":"io.github.thibaultbee.streampack.logger.Logger.logger","location":"core/io.github.thibaultbee.streampack.logger/-logger/logger.html","searchKeys":["logger","var logger: ILogger","io.github.thibaultbee.streampack.logger.Logger.logger"]},{"name":"var meteringRegions: List<MeteringRectangle>","description":"io.github.thibaultbee.streampack.utils.Exposure.meteringRegions","location":"core/io.github.thibaultbee.streampack.utils/-exposure/metering-regions.html","searchKeys":["meteringRegions","var meteringRegions: List<MeteringRectangle>","io.github.thibaultbee.streampack.utils.Exposure.meteringRegions"]},{"name":"var meteringRegions: List<MeteringRectangle>","description":"io.github.thibaultbee.streampack.utils.Focus.meteringRegions","location":"core/io.github.thibaultbee.streampack.utils/-focus/metering-regions.html","searchKeys":["meteringRegions","var meteringRegions: List<MeteringRectangle>","io.github.thibaultbee.streampack.utils.Focus.meteringRegions"]},{"name":"var meteringRegions: List<MeteringRectangle>","description":"io.github.thibaultbee.streampack.utils.WhiteBalance.meteringRegions","location":"core/io.github.thibaultbee.streampack.utils/-white-balance/metering-regions.html","searchKeys":["meteringRegions","var meteringRegions: List<MeteringRectangle>","io.github.thibaultbee.streampack.utils.WhiteBalance.meteringRegions"]},{"name":"var position: PreviewView.Position","description":"io.github.thibaultbee.streampack.views.PreviewView.position","location":"core/io.github.thibaultbee.streampack.views/-preview-view/position.html","searchKeys":["position","var position: PreviewView.Position","io.github.thibaultbee.streampack.views.PreviewView.position"]},{"name":"var scaleMode: PreviewView.ScaleMode","description":"io.github.thibaultbee.streampack.views.PreviewView.scaleMode","location":"core/io.github.thibaultbee.streampack.views/-preview-view/scale-mode.html","searchKeys":["scaleMode","var scaleMode: PreviewView.ScaleMode","io.github.thibaultbee.streampack.views.PreviewView.scaleMode"]},{"name":"var sensorSensitivity: Int","description":"io.github.thibaultbee.streampack.utils.Iso.sensorSensitivity","location":"core/io.github.thibaultbee.streampack.utils/-iso/sensor-sensitivity.html","searchKeys":["sensorSensitivity","var sensorSensitivity: Int","io.github.thibaultbee.streampack.utils.Iso.sensorSensitivity"]},{"name":"var streamer: ICameraStreamer?","description":"io.github.thibaultbee.streampack.views.PreviewView.streamer","location":"core/io.github.thibaultbee.streampack.views/-preview-view/streamer.html","searchKeys":["streamer","var streamer: ICameraStreamer?","io.github.thibaultbee.streampack.views.PreviewView.streamer"]},{"name":"var streamer: IStreamer","description":"io.github.thibaultbee.streampack.streamers.StreamerLifeCycleObserver.streamer","location":"core/io.github.thibaultbee.streampack.streamers/-streamer-life-cycle-observer/streamer.html","searchKeys":["streamer","var streamer: IStreamer","io.github.thibaultbee.streampack.streamers.StreamerLifeCycleObserver.streamer"]},{"name":"class AudioOnlyRtmpLiveStreamer(context: Context, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null) : BaseAudioOnlyLiveStreamer","description":"io.github.thibaultbee.streampack.ext.rtmp.streamers.AudioOnlyRtmpLiveStreamer","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.streamers/-audio-only-rtmp-live-streamer/index.html","searchKeys":["AudioOnlyRtmpLiveStreamer","class AudioOnlyRtmpLiveStreamer(context: Context, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null) : BaseAudioOnlyLiveStreamer","io.github.thibaultbee.streampack.ext.rtmp.streamers.AudioOnlyRtmpLiveStreamer"]},{"name":"class CameraRtmpLiveStreamer(context: Context, enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null) : BaseCameraLiveStreamer","description":"io.github.thibaultbee.streampack.ext.rtmp.streamers.CameraRtmpLiveStreamer","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.streamers/-camera-rtmp-live-streamer/index.html","searchKeys":["CameraRtmpLiveStreamer","class CameraRtmpLiveStreamer(context: Context, enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null) : BaseCameraLiveStreamer","io.github.thibaultbee.streampack.ext.rtmp.streamers.CameraRtmpLiveStreamer"]},{"name":"class ScreenRecorderRtmpLiveStreamer(context: Context, enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null) : BaseScreenRecorderLiveStreamer","description":"io.github.thibaultbee.streampack.ext.rtmp.streamers.ScreenRecorderRtmpLiveStreamer","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.streamers/-screen-recorder-rtmp-live-streamer/index.html","searchKeys":["ScreenRecorderRtmpLiveStreamer","class ScreenRecorderRtmpLiveStreamer(context: Context, enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null) : BaseScreenRecorderLiveStreamer","io.github.thibaultbee.streampack.ext.rtmp.streamers.ScreenRecorderRtmpLiveStreamer"]},{"name":"constructor(context: Context, enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","description":"io.github.thibaultbee.streampack.ext.rtmp.streamers.CameraRtmpLiveStreamer.CameraRtmpLiveStreamer","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.streamers/-camera-rtmp-live-streamer/-camera-rtmp-live-streamer.html","searchKeys":["CameraRtmpLiveStreamer","constructor(context: Context, enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","io.github.thibaultbee.streampack.ext.rtmp.streamers.CameraRtmpLiveStreamer.CameraRtmpLiveStreamer"]},{"name":"constructor(context: Context, enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","description":"io.github.thibaultbee.streampack.ext.rtmp.streamers.ScreenRecorderRtmpLiveStreamer.ScreenRecorderRtmpLiveStreamer","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.streamers/-screen-recorder-rtmp-live-streamer/-screen-recorder-rtmp-live-streamer.html","searchKeys":["ScreenRecorderRtmpLiveStreamer","constructor(context: Context, enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","io.github.thibaultbee.streampack.ext.rtmp.streamers.ScreenRecorderRtmpLiveStreamer.ScreenRecorderRtmpLiveStreamer"]},{"name":"constructor(context: Context, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","description":"io.github.thibaultbee.streampack.ext.rtmp.streamers.AudioOnlyRtmpLiveStreamer.AudioOnlyRtmpLiveStreamer","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.streamers/-audio-only-rtmp-live-streamer/-audio-only-rtmp-live-streamer.html","searchKeys":["AudioOnlyRtmpLiveStreamer","constructor(context: Context, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","io.github.thibaultbee.streampack.ext.rtmp.streamers.AudioOnlyRtmpLiveStreamer.AudioOnlyRtmpLiveStreamer"]},{"name":"constructor(notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0)","description":"io.github.thibaultbee.streampack.ext.rtmp.services.ScreenRecorderRtmpLiveService.ScreenRecorderRtmpLiveService","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.services/-screen-recorder-rtmp-live-service/-screen-recorder-rtmp-live-service.html","searchKeys":["ScreenRecorderRtmpLiveService","constructor(notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0)","io.github.thibaultbee.streampack.ext.rtmp.services.ScreenRecorderRtmpLiveService.ScreenRecorderRtmpLiveService"]},{"name":"constructor(scheme: String, host: String, port: Int, app: String, streamKey: String)","description":"io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.RtmpConnectionDescriptor","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data/-rtmp-connection-descriptor/-rtmp-connection-descriptor.html","searchKeys":["RtmpConnectionDescriptor","constructor(scheme: String, host: String, port: Int, app: String, streamKey: String)","io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.RtmpConnectionDescriptor"]},{"name":"data class RtmpConnectionDescriptor(val scheme: String, val host: String, val port: Int, val app: String, val streamKey: String)","description":"io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data/-rtmp-connection-descriptor/index.html","searchKeys":["RtmpConnectionDescriptor","data class RtmpConnectionDescriptor(val scheme: String, val host: String, val port: Int, val app: String, val streamKey: String)","io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor"]},{"name":"fun fromUrl(url: String): RtmpConnectionDescriptor","description":"io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.Companion.fromUrl","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data/-rtmp-connection-descriptor/-companion/from-url.html","searchKeys":["fromUrl","fun fromUrl(url: String): RtmpConnectionDescriptor","io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.Companion.fromUrl"]},{"name":"fun launch(context: Context, serviceClass: Class<out ScreenRecorderRtmpLiveService>, enableAudio: Boolean, onServiceCreated: (ScreenRecorderRtmpLiveStreamer) -> Unit, onServiceDisconnected: (name: ComponentName?) -> Unit)","description":"io.github.thibaultbee.streampack.ext.rtmp.services.ScreenRecorderRtmpLiveService.Companion.launch","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.services/-screen-recorder-rtmp-live-service/-companion/launch.html","searchKeys":["launch","fun launch(context: Context, serviceClass: Class<out ScreenRecorderRtmpLiveService>, enableAudio: Boolean, onServiceCreated: (ScreenRecorderRtmpLiveStreamer) -> Unit, onServiceDisconnected: (name: ComponentName?) -> Unit)","io.github.thibaultbee.streampack.ext.rtmp.services.ScreenRecorderRtmpLiveService.Companion.launch"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.Companion","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data/-rtmp-connection-descriptor/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.ext.rtmp.services.ScreenRecorderRtmpLiveService.Companion","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.services/-screen-recorder-rtmp-live-service/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.ext.rtmp.services.ScreenRecorderRtmpLiveService.Companion"]},{"name":"open class ScreenRecorderRtmpLiveService(notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0) : BaseScreenRecorderService","description":"io.github.thibaultbee.streampack.ext.rtmp.services.ScreenRecorderRtmpLiveService","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.services/-screen-recorder-rtmp-live-service/index.html","searchKeys":["ScreenRecorderRtmpLiveService","open class ScreenRecorderRtmpLiveService(notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0) : BaseScreenRecorderService","io.github.thibaultbee.streampack.ext.rtmp.services.ScreenRecorderRtmpLiveService"]},{"name":"open suspend override fun connect(url: String)","description":"io.github.thibaultbee.streampack.ext.rtmp.streamers.CameraRtmpLiveStreamer.connect","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.streamers/-camera-rtmp-live-streamer/connect.html","searchKeys":["connect","open suspend override fun connect(url: String)","io.github.thibaultbee.streampack.ext.rtmp.streamers.CameraRtmpLiveStreamer.connect"]},{"name":"open suspend override fun connect(url: String)","description":"io.github.thibaultbee.streampack.ext.rtmp.streamers.ScreenRecorderRtmpLiveStreamer.connect","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.streamers/-screen-recorder-rtmp-live-streamer/connect.html","searchKeys":["connect","open suspend override fun connect(url: String)","io.github.thibaultbee.streampack.ext.rtmp.streamers.ScreenRecorderRtmpLiveStreamer.connect"]},{"name":"val app: String","description":"io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.app","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data/-rtmp-connection-descriptor/app.html","searchKeys":["app","val app: String","io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.app"]},{"name":"val host: String","description":"io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.host","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data/-rtmp-connection-descriptor/host.html","searchKeys":["host","val host: String","io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.host"]},{"name":"val port: Int","description":"io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.port","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data/-rtmp-connection-descriptor/port.html","searchKeys":["port","val port: Int","io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.port"]},{"name":"val scheme: String","description":"io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.scheme","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data/-rtmp-connection-descriptor/scheme.html","searchKeys":["scheme","val scheme: String","io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.scheme"]},{"name":"val streamKey: String","description":"io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.streamKey","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data/-rtmp-connection-descriptor/stream-key.html","searchKeys":["streamKey","val streamKey: String","io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.streamKey"]},{"name":"val uri: Uri","description":"io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.uri","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data/-rtmp-connection-descriptor/uri.html","searchKeys":["uri","val uri: Uri","io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.uri"]},{"name":"val url: String","description":"io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.url","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.data/-rtmp-connection-descriptor/url.html","searchKeys":["url","val url: String","io.github.thibaultbee.streampack.ext.rtmp.data.RtmpConnectionDescriptor.url"]},{"name":"abstract class SrtBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit) : BitrateRegulator","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.SrtBitrateRegulator","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-srt-bitrate-regulator/index.html","searchKeys":["SrtBitrateRegulator","abstract class SrtBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit) : BitrateRegulator","io.github.thibaultbee.streampack.ext.srt.regulator.srt.SrtBitrateRegulator"]},{"name":"abstract fun update(stats: Stats, currentVideoBitrate: Int, currentAudioBitrate: Int)","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.SrtBitrateRegulator.update","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-srt-bitrate-regulator/update.html","searchKeys":["update","abstract fun update(stats: Stats, currentVideoBitrate: Int, currentAudioBitrate: Int)","io.github.thibaultbee.streampack.ext.srt.regulator.srt.SrtBitrateRegulator.update"]},{"name":"abstract suspend fun connect(connection: SrtConnectionDescriptor)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer.connect","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers.interfaces/-i-srt-live-streamer/connect.html","searchKeys":["connect","abstract suspend fun connect(connection: SrtConnectionDescriptor)","io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer.connect"]},{"name":"abstract suspend fun startStream(connection: SrtConnectionDescriptor)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer.startStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers.interfaces/-i-srt-live-streamer/start-stream.html","searchKeys":["startStream","abstract suspend fun startStream(connection: SrtConnectionDescriptor)","io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer.startStream"]},{"name":"abstract val latency: Int","description":"io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer.latency","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers.interfaces/-i-srt-live-streamer/latency.html","searchKeys":["latency","abstract val latency: Int","io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer.latency"]},{"name":"abstract var passPhrase: String","description":"io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer.passPhrase","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers.interfaces/-i-srt-live-streamer/pass-phrase.html","searchKeys":["passPhrase","abstract var passPhrase: String","io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer.passPhrase"]},{"name":"abstract var streamId: String","description":"io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer.streamId","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers.interfaces/-i-srt-live-streamer/stream-id.html","searchKeys":["streamId","abstract var streamId: String","io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer.streamId"]},{"name":"class AudioOnlySrtLiveStreamer(context: Context, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null) : BaseAudioOnlyLiveStreamer, ISrtLiveStreamer","description":"io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-audio-only-srt-live-streamer/index.html","searchKeys":["AudioOnlySrtLiveStreamer","class AudioOnlySrtLiveStreamer(context: Context, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null) : BaseAudioOnlyLiveStreamer, ISrtLiveStreamer","io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer"]},{"name":"class CameraSrtLiveStreamer(context: Context, enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, bitrateRegulatorFactory: IBitrateRegulatorFactory? = null, bitrateRegulatorConfig: BitrateRegulatorConfig? = null, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null) : BaseCameraLiveStreamer, ISrtLiveStreamer","description":"io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-camera-srt-live-streamer/index.html","searchKeys":["CameraSrtLiveStreamer","class CameraSrtLiveStreamer(context: Context, enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, bitrateRegulatorFactory: IBitrateRegulatorFactory? = null, bitrateRegulatorConfig: BitrateRegulatorConfig? = null, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null) : BaseCameraLiveStreamer, ISrtLiveStreamer","io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer"]},{"name":"class DefaultSrtBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit) : SrtBitrateRegulator","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator/index.html","searchKeys":["DefaultSrtBitrateRegulator","class DefaultSrtBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit) : SrtBitrateRegulator","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator"]},{"name":"class DefaultSrtBitrateRegulatorFactory : IBitrateRegulatorFactory","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulatorFactory","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator-factory/index.html","searchKeys":["DefaultSrtBitrateRegulatorFactory","class DefaultSrtBitrateRegulatorFactory : IBitrateRegulatorFactory","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulatorFactory"]},{"name":"class ScreenRecorderSrtLiveStreamer(context: Context, enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, bitrateRegulatorFactory: IBitrateRegulatorFactory? = null, bitrateRegulatorConfig: BitrateRegulatorConfig? = null, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null) : BaseScreenRecorderLiveStreamer, ISrtLiveStreamer","description":"io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-screen-recorder-srt-live-streamer/index.html","searchKeys":["ScreenRecorderSrtLiveStreamer","class ScreenRecorderSrtLiveStreamer(context: Context, enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, bitrateRegulatorFactory: IBitrateRegulatorFactory? = null, bitrateRegulatorConfig: BitrateRegulatorConfig? = null, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null) : BaseScreenRecorderLiveStreamer, ISrtLiveStreamer","io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer"]},{"name":"const val ENABLE_BITRATE_REGULATION: String","description":"io.github.thibaultbee.streampack.ext.srt.services.ScreenRecorderSrtLiveService.Companion.ENABLE_BITRATE_REGULATION","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.services/-screen-recorder-srt-live-service/-companion/-e-n-a-b-l-e_-b-i-t-r-a-t-e_-r-e-g-u-l-a-t-i-o-n.html","searchKeys":["ENABLE_BITRATE_REGULATION","const val ENABLE_BITRATE_REGULATION: String","io.github.thibaultbee.streampack.ext.srt.services.ScreenRecorderSrtLiveService.Companion.ENABLE_BITRATE_REGULATION"]},{"name":"const val MAXIMUM_INCREASE_THRESHOLD: Int = 200000","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.Companion.MAXIMUM_INCREASE_THRESHOLD","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator/-companion/-m-a-x-i-m-u-m_-i-n-c-r-e-a-s-e_-t-h-r-e-s-h-o-l-d.html","searchKeys":["MAXIMUM_INCREASE_THRESHOLD","const val MAXIMUM_INCREASE_THRESHOLD: Int = 200000","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.Companion.MAXIMUM_INCREASE_THRESHOLD"]},{"name":"const val MINIMUM_DECREASE_THRESHOLD: Int = 100000","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.Companion.MINIMUM_DECREASE_THRESHOLD","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator/-companion/-m-i-n-i-m-u-m_-d-e-c-r-e-a-s-e_-t-h-r-e-s-h-o-l-d.html","searchKeys":["MINIMUM_DECREASE_THRESHOLD","const val MINIMUM_DECREASE_THRESHOLD: Int = 100000","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.Companion.MINIMUM_DECREASE_THRESHOLD"]},{"name":"const val SEND_PACKET_THRESHOLD: Int = 50","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.Companion.SEND_PACKET_THRESHOLD","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator/-companion/-s-e-n-d_-p-a-c-k-e-t_-t-h-r-e-s-h-o-l-d.html","searchKeys":["SEND_PACKET_THRESHOLD","const val SEND_PACKET_THRESHOLD: Int = 50","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.Companion.SEND_PACKET_THRESHOLD"]},{"name":"const val SERVICE_NAME: String","description":"io.github.thibaultbee.streampack.ext.srt.services.ScreenRecorderSrtLiveService.Companion.SERVICE_NAME","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.services/-screen-recorder-srt-live-service/-companion/-s-e-r-v-i-c-e_-n-a-m-e.html","searchKeys":["SERVICE_NAME","const val SERVICE_NAME: String","io.github.thibaultbee.streampack.ext.srt.services.ScreenRecorderSrtLiveService.Companion.SERVICE_NAME"]},{"name":"const val SERVICE_PROVIDER_NAME: String","description":"io.github.thibaultbee.streampack.ext.srt.services.ScreenRecorderSrtLiveService.Companion.SERVICE_PROVIDER_NAME","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.services/-screen-recorder-srt-live-service/-companion/-s-e-r-v-i-c-e_-p-r-o-v-i-d-e-r_-n-a-m-e.html","searchKeys":["SERVICE_PROVIDER_NAME","const val SERVICE_PROVIDER_NAME: String","io.github.thibaultbee.streampack.ext.srt.services.ScreenRecorderSrtLiveService.Companion.SERVICE_PROVIDER_NAME"]},{"name":"const val VIDEO_BITRATE_REGULATION_LOWER: String","description":"io.github.thibaultbee.streampack.ext.srt.services.ScreenRecorderSrtLiveService.Companion.VIDEO_BITRATE_REGULATION_LOWER","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.services/-screen-recorder-srt-live-service/-companion/-v-i-d-e-o_-b-i-t-r-a-t-e_-r-e-g-u-l-a-t-i-o-n_-l-o-w-e-r.html","searchKeys":["VIDEO_BITRATE_REGULATION_LOWER","const val VIDEO_BITRATE_REGULATION_LOWER: String","io.github.thibaultbee.streampack.ext.srt.services.ScreenRecorderSrtLiveService.Companion.VIDEO_BITRATE_REGULATION_LOWER"]},{"name":"const val VIDEO_BITRATE_REGULATION_UPPER: String","description":"io.github.thibaultbee.streampack.ext.srt.services.ScreenRecorderSrtLiveService.Companion.VIDEO_BITRATE_REGULATION_UPPER","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.services/-screen-recorder-srt-live-service/-companion/-v-i-d-e-o_-b-i-t-r-a-t-e_-r-e-g-u-l-a-t-i-o-n_-u-p-p-e-r.html","searchKeys":["VIDEO_BITRATE_REGULATION_UPPER","const val VIDEO_BITRATE_REGULATION_UPPER: String","io.github.thibaultbee.streampack.ext.srt.services.ScreenRecorderSrtLiveService.Companion.VIDEO_BITRATE_REGULATION_UPPER"]},{"name":"constructor()","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulatorFactory.DefaultSrtBitrateRegulatorFactory","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator-factory/-default-srt-bitrate-regulator-factory.html","searchKeys":["DefaultSrtBitrateRegulatorFactory","constructor()","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulatorFactory.DefaultSrtBitrateRegulatorFactory"]},{"name":"constructor(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.DefaultSrtBitrateRegulator","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator/-default-srt-bitrate-regulator.html","searchKeys":["DefaultSrtBitrateRegulator","constructor(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.DefaultSrtBitrateRegulator"]},{"name":"constructor(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.SrtBitrateRegulator.SrtBitrateRegulator","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-srt-bitrate-regulator/-srt-bitrate-regulator.html","searchKeys":["SrtBitrateRegulator","constructor(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","io.github.thibaultbee.streampack.ext.srt.regulator.srt.SrtBitrateRegulator.SrtBitrateRegulator"]},{"name":"constructor(context: Context, enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, bitrateRegulatorFactory: IBitrateRegulatorFactory? = null, bitrateRegulatorConfig: BitrateRegulatorConfig? = null, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.CameraSrtLiveStreamer","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-camera-srt-live-streamer/-camera-srt-live-streamer.html","searchKeys":["CameraSrtLiveStreamer","constructor(context: Context, enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, bitrateRegulatorFactory: IBitrateRegulatorFactory? = null, bitrateRegulatorConfig: BitrateRegulatorConfig? = null, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.CameraSrtLiveStreamer"]},{"name":"constructor(context: Context, enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, bitrateRegulatorFactory: IBitrateRegulatorFactory? = null, bitrateRegulatorConfig: BitrateRegulatorConfig? = null, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.ScreenRecorderSrtLiveStreamer","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-screen-recorder-srt-live-streamer/-screen-recorder-srt-live-streamer.html","searchKeys":["ScreenRecorderSrtLiveStreamer","constructor(context: Context, enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, bitrateRegulatorFactory: IBitrateRegulatorFactory? = null, bitrateRegulatorConfig: BitrateRegulatorConfig? = null, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.ScreenRecorderSrtLiveStreamer"]},{"name":"constructor(context: Context, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.AudioOnlySrtLiveStreamer","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-audio-only-srt-live-streamer/-audio-only-srt-live-streamer.html","searchKeys":["AudioOnlySrtLiveStreamer","constructor(context: Context, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.AudioOnlySrtLiveStreamer"]},{"name":"constructor(host: String, port: Int, streamId: String? = null, passPhrase: String? = null, latency: Int? = null, connectionTimeout: Int? = null)","description":"io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.SrtConnectionDescriptor","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.data/-srt-connection-descriptor/-srt-connection-descriptor.html","searchKeys":["SrtConnectionDescriptor","constructor(host: String, port: Int, streamId: String? = null, passPhrase: String? = null, latency: Int? = null, connectionTimeout: Int? = null)","io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.SrtConnectionDescriptor"]},{"name":"constructor(notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0)","description":"io.github.thibaultbee.streampack.ext.srt.services.ScreenRecorderSrtLiveService.ScreenRecorderSrtLiveService","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.services/-screen-recorder-srt-live-service/-screen-recorder-srt-live-service.html","searchKeys":["ScreenRecorderSrtLiveService","constructor(notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0)","io.github.thibaultbee.streampack.ext.srt.services.ScreenRecorderSrtLiveService.ScreenRecorderSrtLiveService"]},{"name":"data class SrtConnectionDescriptor(val host: String, val port: Int, val streamId: String? = null, val passPhrase: String? = null, val latency: Int? = null, val connectionTimeout: Int? = null)","description":"io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.data/-srt-connection-descriptor/index.html","searchKeys":["SrtConnectionDescriptor","data class SrtConnectionDescriptor(val host: String, val port: Int, val streamId: String? = null, val passPhrase: String? = null, val latency: Int? = null, val connectionTimeout: Int? = null)","io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor"]},{"name":"fun fromUrl(url: String): SrtConnectionDescriptor","description":"io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.Companion.fromUrl","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.data/-srt-connection-descriptor/-companion/from-url.html","searchKeys":["fromUrl","fun fromUrl(url: String): SrtConnectionDescriptor","io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.Companion.fromUrl"]},{"name":"fun fromUrlAndParameters(url: String, streamId: String? = null, passPhrase: String? = null): SrtConnectionDescriptor","description":"io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.Companion.fromUrlAndParameters","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.data/-srt-connection-descriptor/-companion/from-url-and-parameters.html","searchKeys":["fromUrlAndParameters","fun fromUrlAndParameters(url: String, streamId: String? = null, passPhrase: String? = null): SrtConnectionDescriptor","io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.Companion.fromUrlAndParameters"]},{"name":"fun launch(context: Context, serviceClass: Class<out ScreenRecorderSrtLiveService>, enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, enableBitrateRegulation: Boolean = false, bitrateRegulatorConfig: BitrateRegulatorConfig? = null, onServiceCreated: (ScreenRecorderSrtLiveStreamer) -> Unit, onServiceDisconnected: (name: ComponentName?) -> Unit)","description":"io.github.thibaultbee.streampack.ext.srt.services.ScreenRecorderSrtLiveService.Companion.launch","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.services/-screen-recorder-srt-live-service/-companion/launch.html","searchKeys":["launch","fun launch(context: Context, serviceClass: Class<out ScreenRecorderSrtLiveService>, enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = context.defaultTsServiceInfo, enableBitrateRegulation: Boolean = false, bitrateRegulatorConfig: BitrateRegulatorConfig? = null, onServiceCreated: (ScreenRecorderSrtLiveStreamer) -> Unit, onServiceDisconnected: (name: ComponentName?) -> Unit)","io.github.thibaultbee.streampack.ext.srt.services.ScreenRecorderSrtLiveService.Companion.launch"]},{"name":"interface ISrtLiveStreamer : ILiveStreamer","description":"io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers.interfaces/-i-srt-live-streamer/index.html","searchKeys":["ISrtLiveStreamer","interface ISrtLiveStreamer : ILiveStreamer","io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.Companion","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.data/-srt-connection-descriptor/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.Companion","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.ext.srt.services.ScreenRecorderSrtLiveService.Companion","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.services/-screen-recorder-srt-live-service/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.ext.srt.services.ScreenRecorderSrtLiveService.Companion"]},{"name":"open class ScreenRecorderSrtLiveService(notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0) : BaseScreenRecorderService","description":"io.github.thibaultbee.streampack.ext.srt.services.ScreenRecorderSrtLiveService","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.services/-screen-recorder-srt-live-service/index.html","searchKeys":["ScreenRecorderSrtLiveService","open class ScreenRecorderSrtLiveService(notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0) : BaseScreenRecorderService","io.github.thibaultbee.streampack.ext.srt.services.ScreenRecorderSrtLiveService"]},{"name":"open override fun newBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit): DefaultSrtBitrateRegulator","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulatorFactory.newBitrateRegulator","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator-factory/new-bitrate-regulator.html","searchKeys":["newBitrateRegulator","open override fun newBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit): DefaultSrtBitrateRegulator","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulatorFactory.newBitrateRegulator"]},{"name":"open override fun update(stats: Stats, currentVideoBitrate: Int, currentAudioBitrate: Int)","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.update","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator/update.html","searchKeys":["update","open override fun update(stats: Stats, currentVideoBitrate: Int, currentAudioBitrate: Int)","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.update"]},{"name":"open override val latency: Int","description":"io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.latency","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-audio-only-srt-live-streamer/latency.html","searchKeys":["latency","open override val latency: Int","io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.latency"]},{"name":"open override val latency: Int","description":"io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.latency","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-camera-srt-live-streamer/latency.html","searchKeys":["latency","open override val latency: Int","io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.latency"]},{"name":"open override val latency: Int","description":"io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.latency","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-screen-recorder-srt-live-streamer/latency.html","searchKeys":["latency","open override val latency: Int","io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.latency"]},{"name":"open override var passPhrase: String","description":"io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.passPhrase","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-audio-only-srt-live-streamer/pass-phrase.html","searchKeys":["passPhrase","open override var passPhrase: String","io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.passPhrase"]},{"name":"open override var passPhrase: String","description":"io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.passPhrase","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-camera-srt-live-streamer/pass-phrase.html","searchKeys":["passPhrase","open override var passPhrase: String","io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.passPhrase"]},{"name":"open override var passPhrase: String","description":"io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.passPhrase","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-screen-recorder-srt-live-streamer/pass-phrase.html","searchKeys":["passPhrase","open override var passPhrase: String","io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.passPhrase"]},{"name":"open override var streamId: String","description":"io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.streamId","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-audio-only-srt-live-streamer/stream-id.html","searchKeys":["streamId","open override var streamId: String","io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.streamId"]},{"name":"open override var streamId: String","description":"io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.streamId","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-camera-srt-live-streamer/stream-id.html","searchKeys":["streamId","open override var streamId: String","io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.streamId"]},{"name":"open override var streamId: String","description":"io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.streamId","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-screen-recorder-srt-live-streamer/stream-id.html","searchKeys":["streamId","open override var streamId: String","io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.streamId"]},{"name":"open suspend override fun connect(connection: SrtConnectionDescriptor)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.connect","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-audio-only-srt-live-streamer/connect.html","searchKeys":["connect","open suspend override fun connect(connection: SrtConnectionDescriptor)","io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.connect"]},{"name":"open suspend override fun connect(connection: SrtConnectionDescriptor)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.connect","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-camera-srt-live-streamer/connect.html","searchKeys":["connect","open suspend override fun connect(connection: SrtConnectionDescriptor)","io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.connect"]},{"name":"open suspend override fun connect(connection: SrtConnectionDescriptor)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.connect","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-screen-recorder-srt-live-streamer/connect.html","searchKeys":["connect","open suspend override fun connect(connection: SrtConnectionDescriptor)","io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.connect"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.startStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-camera-srt-live-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.startStream"]},{"name":"open suspend override fun startStream()","description":"io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.startStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-screen-recorder-srt-live-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream()","io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.startStream"]},{"name":"open suspend override fun startStream(connection: SrtConnectionDescriptor)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.startStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-audio-only-srt-live-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream(connection: SrtConnectionDescriptor)","io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.startStream"]},{"name":"open suspend override fun startStream(connection: SrtConnectionDescriptor)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.startStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-camera-srt-live-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream(connection: SrtConnectionDescriptor)","io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.startStream"]},{"name":"open suspend override fun startStream(connection: SrtConnectionDescriptor)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.startStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-screen-recorder-srt-live-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream(connection: SrtConnectionDescriptor)","io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.startStream"]},{"name":"open suspend override fun startStream(url: String)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.startStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-camera-srt-live-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream(url: String)","io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.startStream"]},{"name":"open suspend override fun startStream(url: String)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.startStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-screen-recorder-srt-live-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream(url: String)","io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.startStream"]},{"name":"open suspend override fun stopStream()","description":"io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.stopStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-camera-srt-live-streamer/stop-stream.html","searchKeys":["stopStream","open suspend override fun stopStream()","io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.stopStream"]},{"name":"open suspend override fun stopStream()","description":"io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.stopStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-screen-recorder-srt-live-streamer/stop-stream.html","searchKeys":["stopStream","open suspend override fun stopStream()","io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.stopStream"]},{"name":"val connectionTimeout: Int? = null","description":"io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.connectionTimeout","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.data/-srt-connection-descriptor/connection-timeout.html","searchKeys":["connectionTimeout","val connectionTimeout: Int? = null","io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.connectionTimeout"]},{"name":"val host: String","description":"io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.host","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.data/-srt-connection-descriptor/host.html","searchKeys":["host","val host: String","io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.host"]},{"name":"val latency: Int? = null","description":"io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.latency","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.data/-srt-connection-descriptor/latency.html","searchKeys":["latency","val latency: Int? = null","io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.latency"]},{"name":"val passPhrase: String? = null","description":"io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.passPhrase","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.data/-srt-connection-descriptor/pass-phrase.html","searchKeys":["passPhrase","val passPhrase: String? = null","io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.passPhrase"]},{"name":"val port: Int","description":"io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.port","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.data/-srt-connection-descriptor/port.html","searchKeys":["port","val port: Int","io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.port"]},{"name":"val streamId: String? = null","description":"io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.streamId","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.data/-srt-connection-descriptor/stream-id.html","searchKeys":["streamId","val streamId: String? = null","io.github.thibaultbee.streampack.ext.srt.data.SrtConnectionDescriptor.streamId"]}]