[{"name":"abstract class BaseStreamer(context: Context, logger: ILogger, audioCapture: IAudioCapture?, videoCapture: IVideoCapture?, manageVideoOrientation: Boolean, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener?) : EventHandler, IStreamer","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/index.html","searchKeys":["BaseStreamer","abstract class BaseStreamer(context: Context, logger: ILogger, audioCapture: IAudioCapture?, videoCapture: IVideoCapture?, manageVideoOrientation: Boolean, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener?) : EventHandler, IStreamer","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer"]},{"name":"abstract class BitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","description":"io.github.thibaultbee.streampack.regulator.BitrateRegulator","location":"core/io.github.thibaultbee.streampack.regulator/-bitrate-regulator/index.html","searchKeys":["BitrateRegulator","abstract class BitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","io.github.thibaultbee.streampack.regulator.BitrateRegulator"]},{"name":"abstract fun configure(audioConfig: AudioConfig? = null, videoConfig: VideoConfig? = null)","description":"io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.configure","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-streamer/configure.html","searchKeys":["configure","abstract fun configure(audioConfig: AudioConfig? = null, videoConfig: VideoConfig? = null)","io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.configure"]},{"name":"abstract fun d(obj: Any, message: String, tr: Throwable? = null)","description":"io.github.thibaultbee.streampack.logger.ILogger.d","location":"core/io.github.thibaultbee.streampack.logger/-i-logger/d.html","searchKeys":["d","abstract fun d(obj: Any, message: String, tr: Throwable? = null)","io.github.thibaultbee.streampack.logger.ILogger.d"]},{"name":"abstract fun disconnect()","description":"io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer.disconnect","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-live-streamer/disconnect.html","searchKeys":["disconnect","abstract fun disconnect()","io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer.disconnect"]},{"name":"abstract fun e(obj: Any, message: String, tr: Throwable? = null)","description":"io.github.thibaultbee.streampack.logger.ILogger.e","location":"core/io.github.thibaultbee.streampack.logger/-i-logger/e.html","searchKeys":["e","abstract fun e(obj: Any, message: String, tr: Throwable? = null)","io.github.thibaultbee.streampack.logger.ILogger.e"]},{"name":"abstract fun getSupportedBitrates(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.IAVConfigurationHelper.getSupportedBitrates","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-a-v-configuration-helper/get-supported-bitrates.html","searchKeys":["getSupportedBitrates","abstract fun getSupportedBitrates(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.streamers.helpers.IAVConfigurationHelper.getSupportedBitrates"]},{"name":"abstract fun getSupportedByteFormats(): List<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.IAudioConfigurationHelper.getSupportedByteFormats","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-audio-configuration-helper/get-supported-byte-formats.html","searchKeys":["getSupportedByteFormats","abstract fun getSupportedByteFormats(): List<Int>","io.github.thibaultbee.streampack.streamers.helpers.IAudioConfigurationHelper.getSupportedByteFormats"]},{"name":"abstract fun getSupportedInputChannelRange(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.IAudioConfigurationHelper.getSupportedInputChannelRange","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-audio-configuration-helper/get-supported-input-channel-range.html","searchKeys":["getSupportedInputChannelRange","abstract fun getSupportedInputChannelRange(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.streamers.helpers.IAudioConfigurationHelper.getSupportedInputChannelRange"]},{"name":"abstract fun getSupportedSampleRates(mimeType: String): List<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.IAudioConfigurationHelper.getSupportedSampleRates","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-audio-configuration-helper/get-supported-sample-rates.html","searchKeys":["getSupportedSampleRates","abstract fun getSupportedSampleRates(mimeType: String): List<Int>","io.github.thibaultbee.streampack.streamers.helpers.IAudioConfigurationHelper.getSupportedSampleRates"]},{"name":"abstract fun i(obj: Any, message: String, tr: Throwable? = null)","description":"io.github.thibaultbee.streampack.logger.ILogger.i","location":"core/io.github.thibaultbee.streampack.logger/-i-logger/i.html","searchKeys":["i","abstract fun i(obj: Any, message: String, tr: Throwable? = null)","io.github.thibaultbee.streampack.logger.ILogger.i"]},{"name":"abstract fun newBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit): BitrateRegulator","description":"io.github.thibaultbee.streampack.regulator.IBitrateRegulatorFactory.newBitrateRegulator","location":"core/io.github.thibaultbee.streampack.regulator/-i-bitrate-regulator-factory/new-bitrate-regulator.html","searchKeys":["newBitrateRegulator","abstract fun newBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit): BitrateRegulator","io.github.thibaultbee.streampack.regulator.IBitrateRegulatorFactory.newBitrateRegulator"]},{"name":"abstract fun onError(error: StreamPackError)","description":"io.github.thibaultbee.streampack.listeners.OnErrorListener.onError","location":"core/io.github.thibaultbee.streampack.listeners/-on-error-listener/on-error.html","searchKeys":["onError","abstract fun onError(error: StreamPackError)","io.github.thibaultbee.streampack.listeners.OnErrorListener.onError"]},{"name":"abstract fun onFailed(message: String)","description":"io.github.thibaultbee.streampack.listeners.OnConnectionListener.onFailed","location":"core/io.github.thibaultbee.streampack.listeners/-on-connection-listener/on-failed.html","searchKeys":["onFailed","abstract fun onFailed(message: String)","io.github.thibaultbee.streampack.listeners.OnConnectionListener.onFailed"]},{"name":"abstract fun onLost(message: String)","description":"io.github.thibaultbee.streampack.listeners.OnConnectionListener.onLost","location":"core/io.github.thibaultbee.streampack.listeners/-on-connection-listener/on-lost.html","searchKeys":["onLost","abstract fun onLost(message: String)","io.github.thibaultbee.streampack.listeners.OnConnectionListener.onLost"]},{"name":"abstract fun onSuccess()","description":"io.github.thibaultbee.streampack.listeners.OnConnectionListener.onSuccess","location":"core/io.github.thibaultbee.streampack.listeners/-on-connection-listener/on-success.html","searchKeys":["onSuccess","abstract fun onSuccess()","io.github.thibaultbee.streampack.listeners.OnConnectionListener.onSuccess"]},{"name":"abstract fun release()","description":"io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.release","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-streamer/release.html","searchKeys":["release","abstract fun release()","io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.release"]},{"name":"abstract fun startPreview(previewSurface: Surface, cameraId: String = \"0\")","description":"io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.startPreview","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-camera-streamer/start-preview.html","searchKeys":["startPreview","abstract fun startPreview(previewSurface: Surface, cameraId: String = \"0\")","io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.startPreview"]},{"name":"abstract fun startStream()","description":"io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.startStream","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-streamer/start-stream.html","searchKeys":["startStream","abstract fun startStream()","io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.startStream"]},{"name":"abstract fun stopPreview()","description":"io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.stopPreview","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-camera-streamer/stop-preview.html","searchKeys":["stopPreview","abstract fun stopPreview()","io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.stopPreview"]},{"name":"abstract fun stopStream()","description":"io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.stopStream","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-streamer/stop-stream.html","searchKeys":["stopStream","abstract fun stopStream()","io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.stopStream"]},{"name":"abstract fun v(obj: Any, message: String, tr: Throwable? = null)","description":"io.github.thibaultbee.streampack.logger.ILogger.v","location":"core/io.github.thibaultbee.streampack.logger/-i-logger/v.html","searchKeys":["v","abstract fun v(obj: Any, message: String, tr: Throwable? = null)","io.github.thibaultbee.streampack.logger.ILogger.v"]},{"name":"abstract fun w(obj: Any, message: String, tr: Throwable? = null)","description":"io.github.thibaultbee.streampack.logger.ILogger.w","location":"core/io.github.thibaultbee.streampack.logger/-i-logger/w.html","searchKeys":["w","abstract fun w(obj: Any, message: String, tr: Throwable? = null)","io.github.thibaultbee.streampack.logger.ILogger.w"]},{"name":"abstract suspend fun connect(url: String)","description":"io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer.connect","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-live-streamer/connect.html","searchKeys":["connect","abstract suspend fun connect(url: String)","io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer.connect"]},{"name":"abstract suspend fun startStream(url: String)","description":"io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer.startStream","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-live-streamer/start-stream.html","searchKeys":["startStream","abstract suspend fun startStream(url: String)","io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer.startStream"]},{"name":"abstract val audio: IAudioConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.IConfigurationHelper.audio","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-configuration-helper/audio.html","searchKeys":["audio","abstract val audio: IAudioConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.IConfigurationHelper.audio"]},{"name":"abstract val audio: IAudioSettings","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseStreamerSettings.audio","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-base-streamer-settings/audio.html","searchKeys":["audio","abstract val audio: IAudioSettings","io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseStreamerSettings.audio"]},{"name":"abstract val camera: CameraSettings","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseCameraStreamerSettings.camera","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-base-camera-streamer-settings/camera.html","searchKeys":["camera","abstract val camera: CameraSettings","io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseCameraStreamerSettings.camera"]},{"name":"abstract val helper: IConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.helper","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-streamer/helper.html","searchKeys":["helper","abstract val helper: IConfigurationHelper","io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.helper"]},{"name":"abstract val settings: IBaseCameraStreamerSettings","description":"io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.settings","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-camera-streamer/settings.html","searchKeys":["settings","abstract val settings: IBaseCameraStreamerSettings","io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.settings"]},{"name":"abstract val settings: IBaseStreamerSettings","description":"io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.settings","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-streamer/settings.html","searchKeys":["settings","abstract val settings: IBaseStreamerSettings","io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.settings"]},{"name":"abstract val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.streamers.helpers.IAVConfigurationHelper.supportedEncoders","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-a-v-configuration-helper/supported-encoders.html","searchKeys":["supportedEncoders","abstract val supportedEncoders: List<String>","io.github.thibaultbee.streampack.streamers.helpers.IAVConfigurationHelper.supportedEncoders"]},{"name":"abstract val video: IVideoConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.IConfigurationHelper.video","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-configuration-helper/video.html","searchKeys":["video","abstract val video: IVideoConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.IConfigurationHelper.video"]},{"name":"abstract val video: IVideoSettings","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseStreamerSettings.video","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-base-streamer-settings/video.html","searchKeys":["video","abstract val video: IVideoSettings","io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseStreamerSettings.video"]},{"name":"abstract var bitrate: Int","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IAudioSettings.bitrate","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-audio-settings/bitrate.html","searchKeys":["bitrate","abstract var bitrate: Int","io.github.thibaultbee.streampack.streamers.interfaces.settings.IAudioSettings.bitrate"]},{"name":"abstract var bitrate: Int","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IVideoSettings.bitrate","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-video-settings/bitrate.html","searchKeys":["bitrate","abstract var bitrate: Int","io.github.thibaultbee.streampack.streamers.interfaces.settings.IVideoSettings.bitrate"]},{"name":"abstract var camera: String","description":"io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.camera","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-camera-streamer/camera.html","searchKeys":["camera","abstract var camera: String","io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer.camera"]},{"name":"abstract var file: File?","description":"io.github.thibaultbee.streampack.streamers.interfaces.IFileStreamer.file","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-file-streamer/file.html","searchKeys":["file","abstract var file: File?","io.github.thibaultbee.streampack.streamers.interfaces.IFileStreamer.file"]},{"name":"abstract var isMuted: Boolean","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IAudioSettings.isMuted","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-audio-settings/is-muted.html","searchKeys":["isMuted","abstract var isMuted: Boolean","io.github.thibaultbee.streampack.streamers.interfaces.settings.IAudioSettings.isMuted"]},{"name":"abstract var onConnectionListener: OnConnectionListener?","description":"io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer.onConnectionListener","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-live-streamer/on-connection-listener.html","searchKeys":["onConnectionListener","abstract var onConnectionListener: OnConnectionListener?","io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer.onConnectionListener"]},{"name":"abstract var onErrorListener: OnErrorListener?","description":"io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.onErrorListener","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-streamer/on-error-listener.html","searchKeys":["onErrorListener","abstract var onErrorListener: OnErrorListener?","io.github.thibaultbee.streampack.streamers.interfaces.IStreamer.onErrorListener"]},{"name":"class AudioConfig(mimeType: String, startBitrate: Int, sampleRate: Int, channelConfig: Int, byteFormat: Int, enableEchoCanceler: Boolean, enableNoiseSuppressor: Boolean) : Config","description":"io.github.thibaultbee.streampack.data.AudioConfig","location":"core/io.github.thibaultbee.streampack.data/-audio-config/index.html","searchKeys":["AudioConfig","class AudioConfig(mimeType: String, startBitrate: Int, sampleRate: Int, channelConfig: Int, byteFormat: Int, enableEchoCanceler: Boolean, enableNoiseSuppressor: Boolean) : Config","io.github.thibaultbee.streampack.data.AudioConfig"]},{"name":"class AudioOnlyFlvFileStreamer(context: Context, logger: ILogger, initialOnErrorListener: OnErrorListener?) : BaseAudioOnlyFileStreamer","description":"io.github.thibaultbee.streampack.streamers.file.AudioOnlyFlvFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-audio-only-flv-file-streamer/index.html","searchKeys":["AudioOnlyFlvFileStreamer","class AudioOnlyFlvFileStreamer(context: Context, logger: ILogger, initialOnErrorListener: OnErrorListener?) : BaseAudioOnlyFileStreamer","io.github.thibaultbee.streampack.streamers.file.AudioOnlyFlvFileStreamer"]},{"name":"class AudioOnlyTsFileStreamer(context: Context, logger: ILogger, tsServiceInfo: TsServiceInfo, initialOnErrorListener: OnErrorListener?) : BaseAudioOnlyFileStreamer","description":"io.github.thibaultbee.streampack.streamers.file.AudioOnlyTsFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-audio-only-ts-file-streamer/index.html","searchKeys":["AudioOnlyTsFileStreamer","class AudioOnlyTsFileStreamer(context: Context, logger: ILogger, tsServiceInfo: TsServiceInfo, initialOnErrorListener: OnErrorListener?) : BaseAudioOnlyFileStreamer","io.github.thibaultbee.streampack.streamers.file.AudioOnlyTsFileStreamer"]},{"name":"class AudioStreamerConfigurationHelper(audioMuxerHelper: IAudioMuxerHelper) : IAudioConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-audio-streamer-configuration-helper/index.html","searchKeys":["AudioStreamerConfigurationHelper","class AudioStreamerConfigurationHelper(audioMuxerHelper: IAudioMuxerHelper) : IAudioConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper"]},{"name":"class BaseCameraStreamerSettings(audioCapture: IAudioCapture?, cameraCapture: CameraCapture, audioEncoder: AudioMediaCodecEncoder?, videoEncoder: VideoMediaCodecEncoder?) : BaseStreamerSettings, IBaseCameraStreamerSettings","description":"io.github.thibaultbee.streampack.streamers.settings.BaseCameraStreamerSettings","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-camera-streamer-settings/index.html","searchKeys":["BaseCameraStreamerSettings","class BaseCameraStreamerSettings(audioCapture: IAudioCapture?, cameraCapture: CameraCapture, audioEncoder: AudioMediaCodecEncoder?, videoEncoder: VideoMediaCodecEncoder?) : BaseStreamerSettings, IBaseCameraStreamerSettings","io.github.thibaultbee.streampack.streamers.settings.BaseCameraStreamerSettings"]},{"name":"class BaseStreamerAudioSettings(audioCapture: IAudioCapture?, audioEncoder: AudioMediaCodecEncoder?) : IAudioSettings","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerAudioSettings","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-audio-settings/index.html","searchKeys":["BaseStreamerAudioSettings","class BaseStreamerAudioSettings(audioCapture: IAudioCapture?, audioEncoder: AudioMediaCodecEncoder?) : IAudioSettings","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerAudioSettings"]},{"name":"class BaseStreamerVideoSettings(videoEncoder: VideoMediaCodecEncoder?) : IVideoSettings","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerVideoSettings","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-video-settings/index.html","searchKeys":["BaseStreamerVideoSettings","class BaseStreamerVideoSettings(videoEncoder: VideoMediaCodecEncoder?) : IVideoSettings","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerVideoSettings"]},{"name":"class CameraError(message: String) : StreamPackError","description":"io.github.thibaultbee.streampack.error.CameraError","location":"core/io.github.thibaultbee.streampack.error/-camera-error/index.html","searchKeys":["CameraError","class CameraError(message: String) : StreamPackError","io.github.thibaultbee.streampack.error.CameraError"]},{"name":"class CameraFlvFileStreamer(context: Context, logger: ILogger, enableAudio: Boolean, initialOnErrorListener: OnErrorListener?) : BaseCameraFileStreamer","description":"io.github.thibaultbee.streampack.streamers.file.CameraFlvFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-camera-flv-file-streamer/index.html","searchKeys":["CameraFlvFileStreamer","class CameraFlvFileStreamer(context: Context, logger: ILogger, enableAudio: Boolean, initialOnErrorListener: OnErrorListener?) : BaseCameraFileStreamer","io.github.thibaultbee.streampack.streamers.file.CameraFlvFileStreamer"]},{"name":"class CameraSettings(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.CameraSettings","location":"core/io.github.thibaultbee.streampack.utils/-camera-settings/index.html","searchKeys":["CameraSettings","class CameraSettings(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.CameraSettings"]},{"name":"class CameraStreamerConfigurationHelper(muxerHelper: IMuxerHelper) : StreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-camera-streamer-configuration-helper/index.html","searchKeys":["CameraStreamerConfigurationHelper","class CameraStreamerConfigurationHelper(muxerHelper: IMuxerHelper) : StreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper"]},{"name":"class CameraTsFileStreamer(context: Context, logger: ILogger, enableAudio: Boolean, tsServiceInfo: TsServiceInfo, initialOnErrorListener: OnErrorListener?) : BaseCameraFileStreamer","description":"io.github.thibaultbee.streampack.streamers.file.CameraTsFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-camera-ts-file-streamer/index.html","searchKeys":["CameraTsFileStreamer","class CameraTsFileStreamer(context: Context, logger: ILogger, enableAudio: Boolean, tsServiceInfo: TsServiceInfo, initialOnErrorListener: OnErrorListener?) : BaseCameraFileStreamer","io.github.thibaultbee.streampack.streamers.file.CameraTsFileStreamer"]},{"name":"class Exposure(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Exposure","location":"core/io.github.thibaultbee.streampack.utils/-exposure/index.html","searchKeys":["Exposure","class Exposure(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Exposure"]},{"name":"class Flash(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Flash","location":"core/io.github.thibaultbee.streampack.utils/-flash/index.html","searchKeys":["Flash","class Flash(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Flash"]},{"name":"class Focus(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Focus","location":"core/io.github.thibaultbee.streampack.utils/-focus/index.html","searchKeys":["Focus","class Focus(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Focus"]},{"name":"class SmartSize(width: Int, height: Int)","description":"io.github.thibaultbee.streampack.views.SmartSize","location":"core/io.github.thibaultbee.streampack.views/-smart-size/index.html","searchKeys":["SmartSize","class SmartSize(width: Int, height: Int)","io.github.thibaultbee.streampack.views.SmartSize"]},{"name":"class Stabilization(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Stabilization","location":"core/io.github.thibaultbee.streampack.utils/-stabilization/index.html","searchKeys":["Stabilization","class Stabilization(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Stabilization"]},{"name":"class StreamPackLogger : ILogger","description":"io.github.thibaultbee.streampack.logger.StreamPackLogger","location":"core/io.github.thibaultbee.streampack.logger/-stream-pack-logger/index.html","searchKeys":["StreamPackLogger","class StreamPackLogger : ILogger","io.github.thibaultbee.streampack.logger.StreamPackLogger"]},{"name":"class VideoCameraStreamerConfigurationHelper(muxerHelper: IVideoMuxerHelper) : VideoStreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoCameraStreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-camera-streamer-configuration-helper/index.html","searchKeys":["VideoCameraStreamerConfigurationHelper","class VideoCameraStreamerConfigurationHelper(muxerHelper: IVideoMuxerHelper) : VideoStreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.VideoCameraStreamerConfigurationHelper"]},{"name":"class VideoConfig(mimeType: String, startBitrate: Int, resolution: Size, fps: Int, profile: Int, level: Int) : Config","description":"io.github.thibaultbee.streampack.data.VideoConfig","location":"core/io.github.thibaultbee.streampack.data/-video-config/index.html","searchKeys":["VideoConfig","class VideoConfig(mimeType: String, startBitrate: Int, resolution: Size, fps: Int, profile: Int, level: Int) : Config","io.github.thibaultbee.streampack.data.VideoConfig"]},{"name":"class WhiteBalance(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.WhiteBalance","location":"core/io.github.thibaultbee.streampack.utils/-white-balance/index.html","searchKeys":["WhiteBalance","class WhiteBalance(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.WhiteBalance"]},{"name":"class Zoom(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Zoom","location":"core/io.github.thibaultbee.streampack.utils/-zoom/index.html","searchKeys":["Zoom","class Zoom(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Zoom"]},{"name":"data class BitrateRegulatorConfig(videoBitrateRange: Range<Int>, audioBitrateRange: Range<Int>)","description":"io.github.thibaultbee.streampack.data.BitrateRegulatorConfig","location":"core/io.github.thibaultbee.streampack.data/-bitrate-regulator-config/index.html","searchKeys":["BitrateRegulatorConfig","data class BitrateRegulatorConfig(videoBitrateRange: Range<Int>, audioBitrateRange: Range<Int>)","io.github.thibaultbee.streampack.data.BitrateRegulatorConfig"]},{"name":"fun <T : Any> Context.getCameraOutputSizes(klass: Class<T>, cameraId: String): List<Size>","description":"io.github.thibaultbee.streampack.utils.getCameraOutputSizes","location":"core/io.github.thibaultbee.streampack.utils/get-camera-output-sizes.html","searchKeys":["getCameraOutputSizes","fun <T : Any> Context.getCameraOutputSizes(klass: Class<T>, cameraId: String): List<Size>","io.github.thibaultbee.streampack.utils.getCameraOutputSizes"]},{"name":"fun <T> getPreviewOutputSize(display: Display, characteristics: CameraCharacteristics, targetClass: Class<T>, format: Int? = null): Size","description":"io.github.thibaultbee.streampack.views.getPreviewOutputSize","location":"core/io.github.thibaultbee.streampack.views/get-preview-output-size.html","searchKeys":["getPreviewOutputSize","fun <T> getPreviewOutputSize(display: Display, characteristics: CameraCharacteristics, targetClass: Class<T>, format: Int? = null): Size","io.github.thibaultbee.streampack.views.getPreviewOutputSize"]},{"name":"fun AudioConfig(mimeType: String = MediaFormat.MIMETYPE_AUDIO_AAC, startBitrate: Int = 128000, sampleRate: Int = 44100, channelConfig: Int = AudioFormat.CHANNEL_IN_STEREO, byteFormat: Int = AudioFormat.ENCODING_PCM_16BIT, enableEchoCanceler: Boolean = true, enableNoiseSuppressor: Boolean = true)","description":"io.github.thibaultbee.streampack.data.AudioConfig.AudioConfig","location":"core/io.github.thibaultbee.streampack.data/-audio-config/-audio-config.html","searchKeys":["AudioConfig","fun AudioConfig(mimeType: String = MediaFormat.MIMETYPE_AUDIO_AAC, startBitrate: Int = 128000, sampleRate: Int = 44100, channelConfig: Int = AudioFormat.CHANNEL_IN_STEREO, byteFormat: Int = AudioFormat.ENCODING_PCM_16BIT, enableEchoCanceler: Boolean = true, enableNoiseSuppressor: Boolean = true)","io.github.thibaultbee.streampack.data.AudioConfig.AudioConfig"]},{"name":"fun AudioOnlyFlvFileStreamer(context: Context, logger: ILogger = StreamPackLogger(), initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.file.AudioOnlyFlvFileStreamer.AudioOnlyFlvFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-audio-only-flv-file-streamer/-audio-only-flv-file-streamer.html","searchKeys":["AudioOnlyFlvFileStreamer","fun AudioOnlyFlvFileStreamer(context: Context, logger: ILogger = StreamPackLogger(), initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.file.AudioOnlyFlvFileStreamer.AudioOnlyFlvFileStreamer"]},{"name":"fun AudioOnlyTsFileStreamer(context: Context, logger: ILogger = StreamPackLogger(), tsServiceInfo: TsServiceInfo = Utils.defaultTsServiceInfo, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.file.AudioOnlyTsFileStreamer.AudioOnlyTsFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-audio-only-ts-file-streamer/-audio-only-ts-file-streamer.html","searchKeys":["AudioOnlyTsFileStreamer","fun AudioOnlyTsFileStreamer(context: Context, logger: ILogger = StreamPackLogger(), tsServiceInfo: TsServiceInfo = Utils.defaultTsServiceInfo, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.file.AudioOnlyTsFileStreamer.AudioOnlyTsFileStreamer"]},{"name":"fun AudioStreamerConfigurationHelper(audioMuxerHelper: IAudioMuxerHelper)","description":"io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.AudioStreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-audio-streamer-configuration-helper/-audio-streamer-configuration-helper.html","searchKeys":["AudioStreamerConfigurationHelper","fun AudioStreamerConfigurationHelper(audioMuxerHelper: IAudioMuxerHelper)","io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.AudioStreamerConfigurationHelper"]},{"name":"fun AutoFitSurfaceView(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","description":"io.github.thibaultbee.streampack.views.AutoFitSurfaceView.AutoFitSurfaceView","location":"core/io.github.thibaultbee.streampack.views/-auto-fit-surface-view/-auto-fit-surface-view.html","searchKeys":["AutoFitSurfaceView","fun AutoFitSurfaceView(context: Context, attrs: AttributeSet? = null, defStyle: Int = 0)","io.github.thibaultbee.streampack.views.AutoFitSurfaceView.AutoFitSurfaceView"]},{"name":"fun BaseAudioOnlyFileStreamer(context: Context, logger: ILogger = StreamPackLogger(), muxer: IMuxer, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.file.BaseAudioOnlyFileStreamer.BaseAudioOnlyFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-base-audio-only-file-streamer/-base-audio-only-file-streamer.html","searchKeys":["BaseAudioOnlyFileStreamer","fun BaseAudioOnlyFileStreamer(context: Context, logger: ILogger = StreamPackLogger(), muxer: IMuxer, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.file.BaseAudioOnlyFileStreamer.BaseAudioOnlyFileStreamer"]},{"name":"fun BaseAudioOnlyLiveStreamer(context: Context, logger: ILogger = StreamPackLogger(), muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","description":"io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.BaseAudioOnlyLiveStreamer","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-audio-only-live-streamer/-base-audio-only-live-streamer.html","searchKeys":["BaseAudioOnlyLiveStreamer","fun BaseAudioOnlyLiveStreamer(context: Context, logger: ILogger = StreamPackLogger(), muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.BaseAudioOnlyLiveStreamer"]},{"name":"fun BaseCameraFileStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, muxer: IMuxer, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.file.BaseCameraFileStreamer.BaseCameraFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-base-camera-file-streamer/-base-camera-file-streamer.html","searchKeys":["BaseCameraFileStreamer","fun BaseCameraFileStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, muxer: IMuxer, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.file.BaseCameraFileStreamer.BaseCameraFileStreamer"]},{"name":"fun BaseCameraLiveStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","description":"io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.BaseCameraLiveStreamer","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-camera-live-streamer/-base-camera-live-streamer.html","searchKeys":["BaseCameraLiveStreamer","fun BaseCameraLiveStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.BaseCameraLiveStreamer"]},{"name":"fun BaseCameraStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.BaseCameraStreamer","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-camera-streamer/-base-camera-streamer.html","searchKeys":["BaseCameraStreamer","fun BaseCameraStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.BaseCameraStreamer"]},{"name":"fun BaseCameraStreamerSettings(audioCapture: IAudioCapture?, cameraCapture: CameraCapture, audioEncoder: AudioMediaCodecEncoder?, videoEncoder: VideoMediaCodecEncoder?)","description":"io.github.thibaultbee.streampack.streamers.settings.BaseCameraStreamerSettings.BaseCameraStreamerSettings","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-camera-streamer-settings/-base-camera-streamer-settings.html","searchKeys":["BaseCameraStreamerSettings","fun BaseCameraStreamerSettings(audioCapture: IAudioCapture?, cameraCapture: CameraCapture, audioEncoder: AudioMediaCodecEncoder?, videoEncoder: VideoMediaCodecEncoder?)","io.github.thibaultbee.streampack.streamers.settings.BaseCameraStreamerSettings.BaseCameraStreamerSettings"]},{"name":"fun BaseScreenRecorderLiveStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","description":"io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.BaseScreenRecorderLiveStreamer","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-screen-recorder-live-streamer/-base-screen-recorder-live-streamer.html","searchKeys":["BaseScreenRecorderLiveStreamer","fun BaseScreenRecorderLiveStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.BaseScreenRecorderLiveStreamer"]},{"name":"fun BaseScreenRecorderStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.BaseScreenRecorderStreamer","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-screen-recorder-streamer/-base-screen-recorder-streamer.html","searchKeys":["BaseScreenRecorderStreamer","fun BaseScreenRecorderStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.BaseScreenRecorderStreamer"]},{"name":"fun BaseStreamer(context: Context, logger: ILogger = StreamPackLogger(), audioCapture: IAudioCapture?, videoCapture: IVideoCapture?, manageVideoOrientation: Boolean, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.BaseStreamer","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/-base-streamer.html","searchKeys":["BaseStreamer","fun BaseStreamer(context: Context, logger: ILogger = StreamPackLogger(), audioCapture: IAudioCapture?, videoCapture: IVideoCapture?, manageVideoOrientation: Boolean, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.BaseStreamer"]},{"name":"fun BaseStreamerAudioSettings(audioCapture: IAudioCapture?, audioEncoder: AudioMediaCodecEncoder?)","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerAudioSettings.BaseStreamerAudioSettings","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-audio-settings/-base-streamer-audio-settings.html","searchKeys":["BaseStreamerAudioSettings","fun BaseStreamerAudioSettings(audioCapture: IAudioCapture?, audioEncoder: AudioMediaCodecEncoder?)","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerAudioSettings.BaseStreamerAudioSettings"]},{"name":"fun BaseStreamerSettings(audioCapture: IAudioCapture?, audioEncoder: AudioMediaCodecEncoder?, videoEncoder: VideoMediaCodecEncoder?)","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerSettings.BaseStreamerSettings","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-settings/-base-streamer-settings.html","searchKeys":["BaseStreamerSettings","fun BaseStreamerSettings(audioCapture: IAudioCapture?, audioEncoder: AudioMediaCodecEncoder?, videoEncoder: VideoMediaCodecEncoder?)","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerSettings.BaseStreamerSettings"]},{"name":"fun BaseStreamerVideoSettings(videoEncoder: VideoMediaCodecEncoder?)","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerVideoSettings.BaseStreamerVideoSettings","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-video-settings/-base-streamer-video-settings.html","searchKeys":["BaseStreamerVideoSettings","fun BaseStreamerVideoSettings(videoEncoder: VideoMediaCodecEncoder?)","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerVideoSettings.BaseStreamerVideoSettings"]},{"name":"fun BitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","description":"io.github.thibaultbee.streampack.regulator.BitrateRegulator.BitrateRegulator","location":"core/io.github.thibaultbee.streampack.regulator/-bitrate-regulator/-bitrate-regulator.html","searchKeys":["BitrateRegulator","fun BitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","io.github.thibaultbee.streampack.regulator.BitrateRegulator.BitrateRegulator"]},{"name":"fun BitrateRegulatorConfig(videoBitrateRange: Range<Int> = Range(500, 10000), audioBitrateRange: Range<Int> = Range(128000, 128000))","description":"io.github.thibaultbee.streampack.data.BitrateRegulatorConfig.BitrateRegulatorConfig","location":"core/io.github.thibaultbee.streampack.data/-bitrate-regulator-config/-bitrate-regulator-config.html","searchKeys":["BitrateRegulatorConfig","fun BitrateRegulatorConfig(videoBitrateRange: Range<Int> = Range(500, 10000), audioBitrateRange: Range<Int> = Range(128000, 128000))","io.github.thibaultbee.streampack.data.BitrateRegulatorConfig.BitrateRegulatorConfig"]},{"name":"fun CameraError(message: String)","description":"io.github.thibaultbee.streampack.error.CameraError.CameraError","location":"core/io.github.thibaultbee.streampack.error/-camera-error/-camera-error.html","searchKeys":["CameraError","fun CameraError(message: String)","io.github.thibaultbee.streampack.error.CameraError.CameraError"]},{"name":"fun CameraFlvFileStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.file.CameraFlvFileStreamer.CameraFlvFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-camera-flv-file-streamer/-camera-flv-file-streamer.html","searchKeys":["CameraFlvFileStreamer","fun CameraFlvFileStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.file.CameraFlvFileStreamer.CameraFlvFileStreamer"]},{"name":"fun CameraSettings(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.CameraSettings.CameraSettings","location":"core/io.github.thibaultbee.streampack.utils/-camera-settings/-camera-settings.html","searchKeys":["CameraSettings","fun CameraSettings(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.CameraSettings.CameraSettings"]},{"name":"fun CameraStreamerConfigurationHelper(muxerHelper: IMuxerHelper)","description":"io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.CameraStreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-camera-streamer-configuration-helper/-camera-streamer-configuration-helper.html","searchKeys":["CameraStreamerConfigurationHelper","fun CameraStreamerConfigurationHelper(muxerHelper: IMuxerHelper)","io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.CameraStreamerConfigurationHelper"]},{"name":"fun CameraTsFileStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = Utils.defaultTsServiceInfo, initialOnErrorListener: OnErrorListener? = null)","description":"io.github.thibaultbee.streampack.streamers.file.CameraTsFileStreamer.CameraTsFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-camera-ts-file-streamer/-camera-ts-file-streamer.html","searchKeys":["CameraTsFileStreamer","fun CameraTsFileStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = Utils.defaultTsServiceInfo, initialOnErrorListener: OnErrorListener? = null)","io.github.thibaultbee.streampack.streamers.file.CameraTsFileStreamer.CameraTsFileStreamer"]},{"name":"fun Config(mimeType: String, startBitrate: Int)","description":"io.github.thibaultbee.streampack.data.Config.Config","location":"core/io.github.thibaultbee.streampack.data/-config/-config.html","searchKeys":["Config","fun Config(mimeType: String, startBitrate: Int)","io.github.thibaultbee.streampack.data.Config.Config"]},{"name":"fun Context.getAutoFocusModes(cameraId: String): List<Int>","description":"io.github.thibaultbee.streampack.utils.getAutoFocusModes","location":"core/io.github.thibaultbee.streampack.utils/get-auto-focus-modes.html","searchKeys":["getAutoFocusModes","fun Context.getAutoFocusModes(cameraId: String): List<Int>","io.github.thibaultbee.streampack.utils.getAutoFocusModes"]},{"name":"fun Context.getAutoWhiteBalanceModes(cameraId: String): List<Int>","description":"io.github.thibaultbee.streampack.utils.getAutoWhiteBalanceModes","location":"core/io.github.thibaultbee.streampack.utils/get-auto-white-balance-modes.html","searchKeys":["getAutoWhiteBalanceModes","fun Context.getAutoWhiteBalanceModes(cameraId: String): List<Int>","io.github.thibaultbee.streampack.utils.getAutoWhiteBalanceModes"]},{"name":"fun Context.getBackCameraList(): List<String>","description":"io.github.thibaultbee.streampack.utils.getBackCameraList","location":"core/io.github.thibaultbee.streampack.utils/get-back-camera-list.html","searchKeys":["getBackCameraList","fun Context.getBackCameraList(): List<String>","io.github.thibaultbee.streampack.utils.getBackCameraList"]},{"name":"fun Context.getCameraCharacteristics(cameraId: String): CameraCharacteristics","description":"io.github.thibaultbee.streampack.utils.getCameraCharacteristics","location":"core/io.github.thibaultbee.streampack.utils/get-camera-characteristics.html","searchKeys":["getCameraCharacteristics","fun Context.getCameraCharacteristics(cameraId: String): CameraCharacteristics","io.github.thibaultbee.streampack.utils.getCameraCharacteristics"]},{"name":"fun Context.getCameraList(): List<String>","description":"io.github.thibaultbee.streampack.utils.getCameraList","location":"core/io.github.thibaultbee.streampack.utils/get-camera-list.html","searchKeys":["getCameraList","fun Context.getCameraList(): List<String>","io.github.thibaultbee.streampack.utils.getCameraList"]},{"name":"fun Context.getExposureRange(cameraId: String): Range<Int>","description":"io.github.thibaultbee.streampack.utils.getExposureRange","location":"core/io.github.thibaultbee.streampack.utils/get-exposure-range.html","searchKeys":["getExposureRange","fun Context.getExposureRange(cameraId: String): Range<Int>","io.github.thibaultbee.streampack.utils.getExposureRange"]},{"name":"fun Context.getExposureStep(cameraId: String): Rational","description":"io.github.thibaultbee.streampack.utils.getExposureStep","location":"core/io.github.thibaultbee.streampack.utils/get-exposure-step.html","searchKeys":["getExposureStep","fun Context.getExposureStep(cameraId: String): Rational","io.github.thibaultbee.streampack.utils.getExposureStep"]},{"name":"fun Context.getFacingDirection(cameraId: String): Int?","description":"io.github.thibaultbee.streampack.utils.getFacingDirection","location":"core/io.github.thibaultbee.streampack.utils/get-facing-direction.html","searchKeys":["getFacingDirection","fun Context.getFacingDirection(cameraId: String): Int?","io.github.thibaultbee.streampack.utils.getFacingDirection"]},{"name":"fun Context.getFrontCameraList(): List<String>","description":"io.github.thibaultbee.streampack.utils.getFrontCameraList","location":"core/io.github.thibaultbee.streampack.utils/get-front-camera-list.html","searchKeys":["getFrontCameraList","fun Context.getFrontCameraList(): List<String>","io.github.thibaultbee.streampack.utils.getFrontCameraList"]},{"name":"fun Context.getLensDistanceRange(cameraId: String): Range<Float>","description":"io.github.thibaultbee.streampack.utils.getLensDistanceRange","location":"core/io.github.thibaultbee.streampack.utils/get-lens-distance-range.html","searchKeys":["getLensDistanceRange","fun Context.getLensDistanceRange(cameraId: String): Range<Float>","io.github.thibaultbee.streampack.utils.getLensDistanceRange"]},{"name":"fun Context.getZoomRatioRange(cameraId: String): Range<Float>","description":"io.github.thibaultbee.streampack.utils.getZoomRatioRange","location":"core/io.github.thibaultbee.streampack.utils/get-zoom-ratio-range.html","searchKeys":["getZoomRatioRange","fun Context.getZoomRatioRange(cameraId: String): Range<Float>","io.github.thibaultbee.streampack.utils.getZoomRatioRange"]},{"name":"fun Context.isBackCamera(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.utils.isBackCamera","location":"core/io.github.thibaultbee.streampack.utils/is-back-camera.html","searchKeys":["isBackCamera","fun Context.isBackCamera(cameraId: String): Boolean","io.github.thibaultbee.streampack.utils.isBackCamera"]},{"name":"fun Context.isFlashAvailable(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.utils.isFlashAvailable","location":"core/io.github.thibaultbee.streampack.utils/is-flash-available.html","searchKeys":["isFlashAvailable","fun Context.isFlashAvailable(cameraId: String): Boolean","io.github.thibaultbee.streampack.utils.isFlashAvailable"]},{"name":"fun Context.isFrameRateSupported(cameraId: String, fps: Int): Boolean","description":"io.github.thibaultbee.streampack.utils.isFrameRateSupported","location":"core/io.github.thibaultbee.streampack.utils/is-frame-rate-supported.html","searchKeys":["isFrameRateSupported","fun Context.isFrameRateSupported(cameraId: String, fps: Int): Boolean","io.github.thibaultbee.streampack.utils.isFrameRateSupported"]},{"name":"fun Context.isFrontCamera(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.utils.isFrontCamera","location":"core/io.github.thibaultbee.streampack.utils/is-front-camera.html","searchKeys":["isFrontCamera","fun Context.isFrontCamera(cameraId: String): Boolean","io.github.thibaultbee.streampack.utils.isFrontCamera"]},{"name":"fun Context.isOpticalStabilizationAvailable(cameraId: String): Boolean","description":"io.github.thibaultbee.streampack.utils.isOpticalStabilizationAvailable","location":"core/io.github.thibaultbee.streampack.utils/is-optical-stabilization-available.html","searchKeys":["isOpticalStabilizationAvailable","fun Context.isOpticalStabilizationAvailable(cameraId: String): Boolean","io.github.thibaultbee.streampack.utils.isOpticalStabilizationAvailable"]},{"name":"fun Exposure(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Exposure.Exposure","location":"core/io.github.thibaultbee.streampack.utils/-exposure/-exposure.html","searchKeys":["Exposure","fun Exposure(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Exposure.Exposure"]},{"name":"fun Flash(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Flash.Flash","location":"core/io.github.thibaultbee.streampack.utils/-flash/-flash.html","searchKeys":["Flash","fun Flash(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Flash.Flash"]},{"name":"fun Focus(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Focus.Focus","location":"core/io.github.thibaultbee.streampack.utils/-focus/-focus.html","searchKeys":["Focus","fun Focus(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Focus.Focus"]},{"name":"fun SmartSize(width: Int, height: Int)","description":"io.github.thibaultbee.streampack.views.SmartSize.SmartSize","location":"core/io.github.thibaultbee.streampack.views/-smart-size/-smart-size.html","searchKeys":["SmartSize","fun SmartSize(width: Int, height: Int)","io.github.thibaultbee.streampack.views.SmartSize.SmartSize"]},{"name":"fun Stabilization(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Stabilization.Stabilization","location":"core/io.github.thibaultbee.streampack.utils/-stabilization/-stabilization.html","searchKeys":["Stabilization","fun Stabilization(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Stabilization.Stabilization"]},{"name":"fun StreamPackError(cause: Throwable)","description":"io.github.thibaultbee.streampack.error.StreamPackError.StreamPackError","location":"core/io.github.thibaultbee.streampack.error/-stream-pack-error/-stream-pack-error.html","searchKeys":["StreamPackError","fun StreamPackError(cause: Throwable)","io.github.thibaultbee.streampack.error.StreamPackError.StreamPackError"]},{"name":"fun StreamPackError(message: String)","description":"io.github.thibaultbee.streampack.error.StreamPackError.StreamPackError","location":"core/io.github.thibaultbee.streampack.error/-stream-pack-error/-stream-pack-error.html","searchKeys":["StreamPackError","fun StreamPackError(message: String)","io.github.thibaultbee.streampack.error.StreamPackError.StreamPackError"]},{"name":"fun StreamPackError(message: String, cause: Throwable)","description":"io.github.thibaultbee.streampack.error.StreamPackError.StreamPackError","location":"core/io.github.thibaultbee.streampack.error/-stream-pack-error/-stream-pack-error.html","searchKeys":["StreamPackError","fun StreamPackError(message: String, cause: Throwable)","io.github.thibaultbee.streampack.error.StreamPackError.StreamPackError"]},{"name":"fun StreamPackLogger()","description":"io.github.thibaultbee.streampack.logger.StreamPackLogger.StreamPackLogger","location":"core/io.github.thibaultbee.streampack.logger/-stream-pack-logger/-stream-pack-logger.html","searchKeys":["StreamPackLogger","fun StreamPackLogger()","io.github.thibaultbee.streampack.logger.StreamPackLogger.StreamPackLogger"]},{"name":"fun StreamerConfigurationHelper(muxerHelper: IMuxerHelper)","description":"io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.StreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-streamer-configuration-helper/-streamer-configuration-helper.html","searchKeys":["StreamerConfigurationHelper","fun StreamerConfigurationHelper(muxerHelper: IMuxerHelper)","io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.StreamerConfigurationHelper"]},{"name":"fun VideoCameraStreamerConfigurationHelper(muxerHelper: IVideoMuxerHelper)","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoCameraStreamerConfigurationHelper.VideoCameraStreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-camera-streamer-configuration-helper/-video-camera-streamer-configuration-helper.html","searchKeys":["VideoCameraStreamerConfigurationHelper","fun VideoCameraStreamerConfigurationHelper(muxerHelper: IVideoMuxerHelper)","io.github.thibaultbee.streampack.streamers.helpers.VideoCameraStreamerConfigurationHelper.VideoCameraStreamerConfigurationHelper"]},{"name":"fun VideoConfig(mimeType: String = MediaFormat.MIMETYPE_VIDEO_AVC, startBitrate: Int = 2000000, resolution: Size = Size(1280, 720), fps: Int = 30, profile: Int = getDefaultProfile(mimeType), level: Int = getDefaultLevel(mimeType))","description":"io.github.thibaultbee.streampack.data.VideoConfig.VideoConfig","location":"core/io.github.thibaultbee.streampack.data/-video-config/-video-config.html","searchKeys":["VideoConfig","fun VideoConfig(mimeType: String = MediaFormat.MIMETYPE_VIDEO_AVC, startBitrate: Int = 2000000, resolution: Size = Size(1280, 720), fps: Int = 30, profile: Int = getDefaultProfile(mimeType), level: Int = getDefaultLevel(mimeType))","io.github.thibaultbee.streampack.data.VideoConfig.VideoConfig"]},{"name":"fun VideoStreamerConfigurationHelper(videoMuxerHelper: IVideoMuxerHelper)","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.VideoStreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-streamer-configuration-helper/-video-streamer-configuration-helper.html","searchKeys":["VideoStreamerConfigurationHelper","fun VideoStreamerConfigurationHelper(videoMuxerHelper: IVideoMuxerHelper)","io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.VideoStreamerConfigurationHelper"]},{"name":"fun WhiteBalance(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.WhiteBalance.WhiteBalance","location":"core/io.github.thibaultbee.streampack.utils/-white-balance/-white-balance.html","searchKeys":["WhiteBalance","fun WhiteBalance(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.WhiteBalance.WhiteBalance"]},{"name":"fun Zoom(context: Context, cameraController: CameraController)","description":"io.github.thibaultbee.streampack.utils.Zoom.Zoom","location":"core/io.github.thibaultbee.streampack.utils/-zoom/-zoom.html","searchKeys":["Zoom","fun Zoom(context: Context, cameraController: CameraController)","io.github.thibaultbee.streampack.utils.Zoom.Zoom"]},{"name":"fun createFlvHelper(): CameraStreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.Companion.createFlvHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-camera-streamer-configuration-helper/-companion/create-flv-helper.html","searchKeys":["createFlvHelper","fun createFlvHelper(): CameraStreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.Companion.createFlvHelper"]},{"name":"fun createFlvHelper(): StreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.Companion.createFlvHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-streamer-configuration-helper/-companion/create-flv-helper.html","searchKeys":["createFlvHelper","fun createFlvHelper(): StreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.Companion.createFlvHelper"]},{"name":"fun createScreenRecorderIntent(context: Context): Intent","description":"io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.Companion.createScreenRecorderIntent","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-screen-recorder-streamer/-companion/create-screen-recorder-intent.html","searchKeys":["createScreenRecorderIntent","fun createScreenRecorderIntent(context: Context): Intent","io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.Companion.createScreenRecorderIntent"]},{"name":"fun createTsHelper(): CameraStreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.Companion.createTsHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-camera-streamer-configuration-helper/-companion/create-ts-helper.html","searchKeys":["createTsHelper","fun createTsHelper(): CameraStreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.Companion.createTsHelper"]},{"name":"fun createTsHelper(): StreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.Companion.createTsHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-streamer-configuration-helper/-companion/create-ts-helper.html","searchKeys":["createTsHelper","fun createTsHelper(): StreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.Companion.createTsHelper"]},{"name":"fun getChannelConfig(nChannel: Int): Int","description":"io.github.thibaultbee.streampack.data.AudioConfig.Companion.getChannelConfig","location":"core/io.github.thibaultbee.streampack.data/-audio-config/-companion/get-channel-config.html","searchKeys":["getChannelConfig","fun getChannelConfig(nChannel: Int): Int","io.github.thibaultbee.streampack.data.AudioConfig.Companion.getChannelConfig"]},{"name":"fun getDisplaySmartSize(display: Display): SmartSize","description":"io.github.thibaultbee.streampack.views.getDisplaySmartSize","location":"core/io.github.thibaultbee.streampack.views/get-display-smart-size.html","searchKeys":["getDisplaySmartSize","fun getDisplaySmartSize(display: Display): SmartSize","io.github.thibaultbee.streampack.views.getDisplaySmartSize"]},{"name":"fun getNumOfBytesPerSample(byteFormat: Int): Int","description":"io.github.thibaultbee.streampack.data.AudioConfig.Companion.getNumOfBytesPerSample","location":"core/io.github.thibaultbee.streampack.data/-audio-config/-companion/get-num-of-bytes-per-sample.html","searchKeys":["getNumOfBytesPerSample","fun getNumOfBytesPerSample(byteFormat: Int): Int","io.github.thibaultbee.streampack.data.AudioConfig.Companion.getNumOfBytesPerSample"]},{"name":"fun getNumberOfChannels(channelConfig: Int): Int","description":"io.github.thibaultbee.streampack.data.AudioConfig.Companion.getNumberOfChannels","location":"core/io.github.thibaultbee.streampack.data/-audio-config/-companion/get-number-of-channels.html","searchKeys":["getNumberOfChannels","fun getNumberOfChannels(channelConfig: Int): Int","io.github.thibaultbee.streampack.data.AudioConfig.Companion.getNumberOfChannels"]},{"name":"fun getOrientedResolution(context: Context): Size","description":"io.github.thibaultbee.streampack.data.VideoConfig.getOrientedResolution","location":"core/io.github.thibaultbee.streampack.data/-video-config/get-oriented-resolution.html","searchKeys":["getOrientedResolution","fun getOrientedResolution(context: Context): Size","io.github.thibaultbee.streampack.data.VideoConfig.getOrientedResolution"]},{"name":"fun getSupportedFramerate(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.getSupportedFramerate","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-streamer-configuration-helper/get-supported-framerate.html","searchKeys":["getSupportedFramerate","fun getSupportedFramerate(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.getSupportedFramerate"]},{"name":"fun getSupportedFramerates(context: Context, mimeType: String, cameraId: String): List<Range<Int>>","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoCameraStreamerConfigurationHelper.getSupportedFramerates","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-camera-streamer-configuration-helper/get-supported-framerates.html","searchKeys":["getSupportedFramerates","fun getSupportedFramerates(context: Context, mimeType: String, cameraId: String): List<Range<Int>>","io.github.thibaultbee.streampack.streamers.helpers.VideoCameraStreamerConfigurationHelper.getSupportedFramerates"]},{"name":"fun getSupportedResolutions(context: Context, mimeType: String): List<Size>","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoCameraStreamerConfigurationHelper.getSupportedResolutions","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-camera-streamer-configuration-helper/get-supported-resolutions.html","searchKeys":["getSupportedResolutions","fun getSupportedResolutions(context: Context, mimeType: String): List<Size>","io.github.thibaultbee.streampack.streamers.helpers.VideoCameraStreamerConfigurationHelper.getSupportedResolutions"]},{"name":"fun setAspectRatio(width: Int, height: Int)","description":"io.github.thibaultbee.streampack.views.AutoFitSurfaceView.setAspectRatio","location":"core/io.github.thibaultbee.streampack.views/-auto-fit-surface-view/set-aspect-ratio.html","searchKeys":["setAspectRatio","fun setAspectRatio(width: Int, height: Int)","io.github.thibaultbee.streampack.views.AutoFitSurfaceView.setAspectRatio"]},{"name":"interface IAVConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.IAVConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-a-v-configuration-helper/index.html","searchKeys":["IAVConfigurationHelper","interface IAVConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.IAVConfigurationHelper"]},{"name":"interface IAudioConfigurationHelper : IAVConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.IAudioConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-audio-configuration-helper/index.html","searchKeys":["IAudioConfigurationHelper","interface IAudioConfigurationHelper : IAVConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.IAudioConfigurationHelper"]},{"name":"interface IAudioSettings","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IAudioSettings","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-audio-settings/index.html","searchKeys":["IAudioSettings","interface IAudioSettings","io.github.thibaultbee.streampack.streamers.interfaces.settings.IAudioSettings"]},{"name":"interface IBaseCameraStreamerSettings","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseCameraStreamerSettings","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-base-camera-streamer-settings/index.html","searchKeys":["IBaseCameraStreamerSettings","interface IBaseCameraStreamerSettings","io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseCameraStreamerSettings"]},{"name":"interface IBaseStreamerSettings","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseStreamerSettings","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-base-streamer-settings/index.html","searchKeys":["IBaseStreamerSettings","interface IBaseStreamerSettings","io.github.thibaultbee.streampack.streamers.interfaces.settings.IBaseStreamerSettings"]},{"name":"interface IBitrateRegulatorFactory","description":"io.github.thibaultbee.streampack.regulator.IBitrateRegulatorFactory","location":"core/io.github.thibaultbee.streampack.regulator/-i-bitrate-regulator-factory/index.html","searchKeys":["IBitrateRegulatorFactory","interface IBitrateRegulatorFactory","io.github.thibaultbee.streampack.regulator.IBitrateRegulatorFactory"]},{"name":"interface ICameraStreamer","description":"io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-camera-streamer/index.html","searchKeys":["ICameraStreamer","interface ICameraStreamer","io.github.thibaultbee.streampack.streamers.interfaces.ICameraStreamer"]},{"name":"interface IConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.IConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-configuration-helper/index.html","searchKeys":["IConfigurationHelper","interface IConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.IConfigurationHelper"]},{"name":"interface IFileStreamer","description":"io.github.thibaultbee.streampack.streamers.interfaces.IFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-file-streamer/index.html","searchKeys":["IFileStreamer","interface IFileStreamer","io.github.thibaultbee.streampack.streamers.interfaces.IFileStreamer"]},{"name":"interface ILiveStreamer","description":"io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-live-streamer/index.html","searchKeys":["ILiveStreamer","interface ILiveStreamer","io.github.thibaultbee.streampack.streamers.interfaces.ILiveStreamer"]},{"name":"interface ILogger","description":"io.github.thibaultbee.streampack.logger.ILogger","location":"core/io.github.thibaultbee.streampack.logger/-i-logger/index.html","searchKeys":["ILogger","interface ILogger","io.github.thibaultbee.streampack.logger.ILogger"]},{"name":"interface IStreamer","description":"io.github.thibaultbee.streampack.streamers.interfaces.IStreamer","location":"core/io.github.thibaultbee.streampack.streamers.interfaces/-i-streamer/index.html","searchKeys":["IStreamer","interface IStreamer","io.github.thibaultbee.streampack.streamers.interfaces.IStreamer"]},{"name":"interface IVideoConfigurationHelper : IAVConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.IVideoConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-i-video-configuration-helper/index.html","searchKeys":["IVideoConfigurationHelper","interface IVideoConfigurationHelper : IAVConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.IVideoConfigurationHelper"]},{"name":"interface IVideoSettings","description":"io.github.thibaultbee.streampack.streamers.interfaces.settings.IVideoSettings","location":"core/io.github.thibaultbee.streampack.streamers.interfaces.settings/-i-video-settings/index.html","searchKeys":["IVideoSettings","interface IVideoSettings","io.github.thibaultbee.streampack.streamers.interfaces.settings.IVideoSettings"]},{"name":"interface OnConnectionListener","description":"io.github.thibaultbee.streampack.listeners.OnConnectionListener","location":"core/io.github.thibaultbee.streampack.listeners/-on-connection-listener/index.html","searchKeys":["OnConnectionListener","interface OnConnectionListener","io.github.thibaultbee.streampack.listeners.OnConnectionListener"]},{"name":"interface OnErrorListener","description":"io.github.thibaultbee.streampack.listeners.OnErrorListener","location":"core/io.github.thibaultbee.streampack.listeners/-on-error-listener/index.html","searchKeys":["OnErrorListener","interface OnErrorListener","io.github.thibaultbee.streampack.listeners.OnErrorListener"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.data.AudioConfig.Companion","location":"core/io.github.thibaultbee.streampack.data/-audio-config/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.data.AudioConfig.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.data.VideoConfig.Companion","location":"core/io.github.thibaultbee.streampack.data/-video-config/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.data.VideoConfig.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.Companion","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-screen-recorder-streamer/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.Companion","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-camera-streamer-configuration-helper/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.Companion","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-streamer-configuration-helper/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.Companion"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.views.AutoFitSurfaceView.Companion","location":"core/io.github.thibaultbee.streampack.views/-auto-fit-surface-view/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.views.AutoFitSurfaceView.Companion"]},{"name":"object Utils","description":"io.github.thibaultbee.streampack.utils.Utils","location":"core/io.github.thibaultbee.streampack.utils/-utils/index.html","searchKeys":["Utils","object Utils","io.github.thibaultbee.streampack.utils.Utils"]},{"name":"open class AutoFitSurfaceView constructor(context: Context, attrs: AttributeSet?, defStyle: Int) : SurfaceView","description":"io.github.thibaultbee.streampack.views.AutoFitSurfaceView","location":"core/io.github.thibaultbee.streampack.views/-auto-fit-surface-view/index.html","searchKeys":["AutoFitSurfaceView","open class AutoFitSurfaceView constructor(context: Context, attrs: AttributeSet?, defStyle: Int) : SurfaceView","io.github.thibaultbee.streampack.views.AutoFitSurfaceView"]},{"name":"open class BaseAudioOnlyFileStreamer(context: Context, logger: ILogger, muxer: IMuxer, initialOnErrorListener: OnErrorListener?) : BaseStreamer, IFileStreamer","description":"io.github.thibaultbee.streampack.streamers.file.BaseAudioOnlyFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-base-audio-only-file-streamer/index.html","searchKeys":["BaseAudioOnlyFileStreamer","open class BaseAudioOnlyFileStreamer(context: Context, logger: ILogger, muxer: IMuxer, initialOnErrorListener: OnErrorListener?) : BaseStreamer, IFileStreamer","io.github.thibaultbee.streampack.streamers.file.BaseAudioOnlyFileStreamer"]},{"name":"open class BaseAudioOnlyLiveStreamer(context: Context, logger: ILogger, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener?, initialOnConnectionListener: OnConnectionListener?) : BaseStreamer, ILiveStreamer","description":"io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-audio-only-live-streamer/index.html","searchKeys":["BaseAudioOnlyLiveStreamer","open class BaseAudioOnlyLiveStreamer(context: Context, logger: ILogger, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener?, initialOnConnectionListener: OnConnectionListener?) : BaseStreamer, ILiveStreamer","io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer"]},{"name":"open class BaseCameraFileStreamer(context: Context, logger: ILogger, enableAudio: Boolean, muxer: IMuxer, initialOnErrorListener: OnErrorListener?) : BaseCameraStreamer, IFileStreamer","description":"io.github.thibaultbee.streampack.streamers.file.BaseCameraFileStreamer","location":"core/io.github.thibaultbee.streampack.streamers.file/-base-camera-file-streamer/index.html","searchKeys":["BaseCameraFileStreamer","open class BaseCameraFileStreamer(context: Context, logger: ILogger, enableAudio: Boolean, muxer: IMuxer, initialOnErrorListener: OnErrorListener?) : BaseCameraStreamer, IFileStreamer","io.github.thibaultbee.streampack.streamers.file.BaseCameraFileStreamer"]},{"name":"open class BaseCameraLiveStreamer(context: Context, logger: ILogger, enableAudio: Boolean, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener?, initialOnConnectionListener: OnConnectionListener?) : BaseCameraStreamer, ILiveStreamer","description":"io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-camera-live-streamer/index.html","searchKeys":["BaseCameraLiveStreamer","open class BaseCameraLiveStreamer(context: Context, logger: ILogger, enableAudio: Boolean, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener?, initialOnConnectionListener: OnConnectionListener?) : BaseCameraStreamer, ILiveStreamer","io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer"]},{"name":"open class BaseCameraStreamer(context: Context, logger: ILogger, enableAudio: Boolean, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener?) : BaseStreamer, ICameraStreamer","description":"io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-camera-streamer/index.html","searchKeys":["BaseCameraStreamer","open class BaseCameraStreamer(context: Context, logger: ILogger, enableAudio: Boolean, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener?) : BaseStreamer, ICameraStreamer","io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer"]},{"name":"open class BaseScreenRecorderLiveStreamer(context: Context, logger: ILogger, enableAudio: Boolean, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener?, initialOnConnectionListener: OnConnectionListener?) : BaseScreenRecorderStreamer, ILiveStreamer","description":"io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-screen-recorder-live-streamer/index.html","searchKeys":["BaseScreenRecorderLiveStreamer","open class BaseScreenRecorderLiveStreamer(context: Context, logger: ILogger, enableAudio: Boolean, muxer: IMuxer, endpoint: ILiveEndpoint, initialOnErrorListener: OnErrorListener?, initialOnConnectionListener: OnConnectionListener?) : BaseScreenRecorderStreamer, ILiveStreamer","io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer"]},{"name":"open class BaseScreenRecorderStreamer(context: Context, logger: ILogger, enableAudio: Boolean, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener?) : BaseStreamer","description":"io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-screen-recorder-streamer/index.html","searchKeys":["BaseScreenRecorderStreamer","open class BaseScreenRecorderStreamer(context: Context, logger: ILogger, enableAudio: Boolean, muxer: IMuxer, endpoint: IEndpoint, initialOnErrorListener: OnErrorListener?) : BaseStreamer","io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer"]},{"name":"open class BaseStreamerSettings(audioCapture: IAudioCapture?, audioEncoder: AudioMediaCodecEncoder?, videoEncoder: VideoMediaCodecEncoder?) : IBaseStreamerSettings","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerSettings","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-settings/index.html","searchKeys":["BaseStreamerSettings","open class BaseStreamerSettings(audioCapture: IAudioCapture?, audioEncoder: AudioMediaCodecEncoder?, videoEncoder: VideoMediaCodecEncoder?) : IBaseStreamerSettings","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerSettings"]},{"name":"open class Config(mimeType: String, startBitrate: Int)","description":"io.github.thibaultbee.streampack.data.Config","location":"core/io.github.thibaultbee.streampack.data/-config/index.html","searchKeys":["Config","open class Config(mimeType: String, startBitrate: Int)","io.github.thibaultbee.streampack.data.Config"]},{"name":"open class StreamPackError(cause: Throwable) : Exception","description":"io.github.thibaultbee.streampack.error.StreamPackError","location":"core/io.github.thibaultbee.streampack.error/-stream-pack-error/index.html","searchKeys":["StreamPackError","open class StreamPackError(cause: Throwable) : Exception","io.github.thibaultbee.streampack.error.StreamPackError"]},{"name":"open class StreamerConfigurationHelper(muxerHelper: IMuxerHelper) : IConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-streamer-configuration-helper/index.html","searchKeys":["StreamerConfigurationHelper","open class StreamerConfigurationHelper(muxerHelper: IMuxerHelper) : IConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper"]},{"name":"open class VideoStreamerConfigurationHelper(videoMuxerHelper: IVideoMuxerHelper) : IVideoConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-streamer-configuration-helper/index.html","searchKeys":["VideoStreamerConfigurationHelper","open class VideoStreamerConfigurationHelper(videoMuxerHelper: IVideoMuxerHelper) : IVideoConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper"]},{"name":"open fun getSupportedResolutions(mimeType: String): Pair<Range<Int>, Range<Int>>","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.getSupportedResolutions","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-streamer-configuration-helper/get-supported-resolutions.html","searchKeys":["getSupportedResolutions","open fun getSupportedResolutions(mimeType: String): Pair<Range<Int>, Range<Int>>","io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.getSupportedResolutions"]},{"name":"open override fun configure(audioConfig: AudioConfig?, videoConfig: VideoConfig?)","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.configure","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/configure.html","searchKeys":["configure","open override fun configure(audioConfig: AudioConfig?, videoConfig: VideoConfig?)","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.configure"]},{"name":"open override fun d(obj: Any, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.logger.StreamPackLogger.d","location":"core/io.github.thibaultbee.streampack.logger/-stream-pack-logger/d.html","searchKeys":["d","open override fun d(obj: Any, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.logger.StreamPackLogger.d"]},{"name":"open override fun disconnect()","description":"io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.disconnect","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-audio-only-live-streamer/disconnect.html","searchKeys":["disconnect","open override fun disconnect()","io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.disconnect"]},{"name":"open override fun disconnect()","description":"io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.disconnect","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-camera-live-streamer/disconnect.html","searchKeys":["disconnect","open override fun disconnect()","io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.disconnect"]},{"name":"open override fun disconnect()","description":"io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.disconnect","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-screen-recorder-live-streamer/disconnect.html","searchKeys":["disconnect","open override fun disconnect()","io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.disconnect"]},{"name":"open override fun e(obj: Any, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.logger.StreamPackLogger.e","location":"core/io.github.thibaultbee.streampack.logger/-stream-pack-logger/e.html","searchKeys":["e","open override fun e(obj: Any, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.logger.StreamPackLogger.e"]},{"name":"open override fun getSupportedBitrates(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.getSupportedBitrates","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-audio-streamer-configuration-helper/get-supported-bitrates.html","searchKeys":["getSupportedBitrates","open override fun getSupportedBitrates(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.getSupportedBitrates"]},{"name":"open override fun getSupportedBitrates(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.getSupportedBitrates","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-streamer-configuration-helper/get-supported-bitrates.html","searchKeys":["getSupportedBitrates","open override fun getSupportedBitrates(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.getSupportedBitrates"]},{"name":"open override fun getSupportedByteFormats(): List<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.getSupportedByteFormats","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-audio-streamer-configuration-helper/get-supported-byte-formats.html","searchKeys":["getSupportedByteFormats","open override fun getSupportedByteFormats(): List<Int>","io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.getSupportedByteFormats"]},{"name":"open override fun getSupportedInputChannelRange(mimeType: String): Range<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.getSupportedInputChannelRange","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-audio-streamer-configuration-helper/get-supported-input-channel-range.html","searchKeys":["getSupportedInputChannelRange","open override fun getSupportedInputChannelRange(mimeType: String): Range<Int>","io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.getSupportedInputChannelRange"]},{"name":"open override fun getSupportedSampleRates(mimeType: String): List<Int>","description":"io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.getSupportedSampleRates","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-audio-streamer-configuration-helper/get-supported-sample-rates.html","searchKeys":["getSupportedSampleRates","open override fun getSupportedSampleRates(mimeType: String): List<Int>","io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.getSupportedSampleRates"]},{"name":"open override fun i(obj: Any, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.logger.StreamPackLogger.i","location":"core/io.github.thibaultbee.streampack.logger/-stream-pack-logger/i.html","searchKeys":["i","open override fun i(obj: Any, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.logger.StreamPackLogger.i"]},{"name":"open override fun release()","description":"io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.release","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-camera-streamer/release.html","searchKeys":["release","open override fun release()","io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.release"]},{"name":"open override fun release()","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.release","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/release.html","searchKeys":["release","open override fun release()","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.release"]},{"name":"open override fun startPreview(previewSurface: Surface, cameraId: String)","description":"io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.startPreview","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-camera-streamer/start-preview.html","searchKeys":["startPreview","open override fun startPreview(previewSurface: Surface, cameraId: String)","io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.startPreview"]},{"name":"open override fun startStream()","description":"io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.startStream","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-screen-recorder-streamer/start-stream.html","searchKeys":["startStream","open override fun startStream()","io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.startStream"]},{"name":"open override fun startStream()","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.startStream","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/start-stream.html","searchKeys":["startStream","open override fun startStream()","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.startStream"]},{"name":"open override fun startStream()","description":"io.github.thibaultbee.streampack.streamers.file.BaseAudioOnlyFileStreamer.startStream","location":"core/io.github.thibaultbee.streampack.streamers.file/-base-audio-only-file-streamer/start-stream.html","searchKeys":["startStream","open override fun startStream()","io.github.thibaultbee.streampack.streamers.file.BaseAudioOnlyFileStreamer.startStream"]},{"name":"open override fun startStream()","description":"io.github.thibaultbee.streampack.streamers.file.BaseCameraFileStreamer.startStream","location":"core/io.github.thibaultbee.streampack.streamers.file/-base-camera-file-streamer/start-stream.html","searchKeys":["startStream","open override fun startStream()","io.github.thibaultbee.streampack.streamers.file.BaseCameraFileStreamer.startStream"]},{"name":"open override fun stopPreview()","description":"io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.stopPreview","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-camera-streamer/stop-preview.html","searchKeys":["stopPreview","open override fun stopPreview()","io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.stopPreview"]},{"name":"open override fun stopStream()","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.stopStream","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/stop-stream.html","searchKeys":["stopStream","open override fun stopStream()","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.stopStream"]},{"name":"open override fun toString(): String","description":"io.github.thibaultbee.streampack.views.SmartSize.toString","location":"core/io.github.thibaultbee.streampack.views/-smart-size/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.thibaultbee.streampack.views.SmartSize.toString"]},{"name":"open override fun v(obj: Any, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.logger.StreamPackLogger.v","location":"core/io.github.thibaultbee.streampack.logger/-stream-pack-logger/v.html","searchKeys":["v","open override fun v(obj: Any, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.logger.StreamPackLogger.v"]},{"name":"open override fun w(obj: Any, message: String, tr: Throwable?)","description":"io.github.thibaultbee.streampack.logger.StreamPackLogger.w","location":"core/io.github.thibaultbee.streampack.logger/-stream-pack-logger/w.html","searchKeys":["w","open override fun w(obj: Any, message: String, tr: Throwable?)","io.github.thibaultbee.streampack.logger.StreamPackLogger.w"]},{"name":"open override val audio: AudioStreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.audio","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-streamer-configuration-helper/audio.html","searchKeys":["audio","open override val audio: AudioStreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.audio"]},{"name":"open override val audio: BaseStreamerAudioSettings","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerSettings.audio","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-settings/audio.html","searchKeys":["audio","open override val audio: BaseStreamerAudioSettings","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerSettings.audio"]},{"name":"open override val camera: CameraSettings","description":"io.github.thibaultbee.streampack.streamers.settings.BaseCameraStreamerSettings.camera","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-camera-streamer-settings/camera.html","searchKeys":["camera","open override val camera: CameraSettings","io.github.thibaultbee.streampack.streamers.settings.BaseCameraStreamerSettings.camera"]},{"name":"open override val helper: CameraStreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.helper","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-camera-streamer/helper.html","searchKeys":["helper","open override val helper: CameraStreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.helper"]},{"name":"open override val helper: StreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.helper","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/helper.html","searchKeys":["helper","open override val helper: StreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.helper"]},{"name":"open override val settings: BaseStreamerSettings","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.settings","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/settings.html","searchKeys":["settings","open override val settings: BaseStreamerSettings","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.settings"]},{"name":"open override val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.supportedEncoders","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-audio-streamer-configuration-helper/supported-encoders.html","searchKeys":["supportedEncoders","open override val supportedEncoders: List<String>","io.github.thibaultbee.streampack.streamers.helpers.AudioStreamerConfigurationHelper.supportedEncoders"]},{"name":"open override val supportedEncoders: List<String>","description":"io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.supportedEncoders","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-video-streamer-configuration-helper/supported-encoders.html","searchKeys":["supportedEncoders","open override val supportedEncoders: List<String>","io.github.thibaultbee.streampack.streamers.helpers.VideoStreamerConfigurationHelper.supportedEncoders"]},{"name":"open override val video: BaseStreamerVideoSettings","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerSettings.video","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-settings/video.html","searchKeys":["video","open override val video: BaseStreamerVideoSettings","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerSettings.video"]},{"name":"open override val video: VideoCameraStreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.video","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-camera-streamer-configuration-helper/video.html","searchKeys":["video","open override val video: VideoCameraStreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.CameraStreamerConfigurationHelper.video"]},{"name":"open override val video: VideoStreamerConfigurationHelper","description":"io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.video","location":"core/io.github.thibaultbee.streampack.streamers.helpers/-streamer-configuration-helper/video.html","searchKeys":["video","open override val video: VideoStreamerConfigurationHelper","io.github.thibaultbee.streampack.streamers.helpers.StreamerConfigurationHelper.video"]},{"name":"open override var bitrate: Int","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerAudioSettings.bitrate","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-audio-settings/bitrate.html","searchKeys":["bitrate","open override var bitrate: Int","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerAudioSettings.bitrate"]},{"name":"open override var bitrate: Int","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerVideoSettings.bitrate","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-video-settings/bitrate.html","searchKeys":["bitrate","open override var bitrate: Int","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerVideoSettings.bitrate"]},{"name":"open override var camera: String","description":"io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.camera","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-camera-streamer/camera.html","searchKeys":["camera","open override var camera: String","io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.camera"]},{"name":"open override var file: File?","description":"io.github.thibaultbee.streampack.streamers.file.BaseAudioOnlyFileStreamer.file","location":"core/io.github.thibaultbee.streampack.streamers.file/-base-audio-only-file-streamer/file.html","searchKeys":["file","open override var file: File?","io.github.thibaultbee.streampack.streamers.file.BaseAudioOnlyFileStreamer.file"]},{"name":"open override var file: File?","description":"io.github.thibaultbee.streampack.streamers.file.BaseCameraFileStreamer.file","location":"core/io.github.thibaultbee.streampack.streamers.file/-base-camera-file-streamer/file.html","searchKeys":["file","open override var file: File?","io.github.thibaultbee.streampack.streamers.file.BaseCameraFileStreamer.file"]},{"name":"open override var isMuted: Boolean","description":"io.github.thibaultbee.streampack.streamers.settings.BaseStreamerAudioSettings.isMuted","location":"core/io.github.thibaultbee.streampack.streamers.settings/-base-streamer-audio-settings/is-muted.html","searchKeys":["isMuted","open override var isMuted: Boolean","io.github.thibaultbee.streampack.streamers.settings.BaseStreamerAudioSettings.isMuted"]},{"name":"open override var onConnectionListener: OnConnectionListener?","description":"io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.onConnectionListener","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-audio-only-live-streamer/on-connection-listener.html","searchKeys":["onConnectionListener","open override var onConnectionListener: OnConnectionListener?","io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.onConnectionListener"]},{"name":"open override var onConnectionListener: OnConnectionListener?","description":"io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.onConnectionListener","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-camera-live-streamer/on-connection-listener.html","searchKeys":["onConnectionListener","open override var onConnectionListener: OnConnectionListener?","io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.onConnectionListener"]},{"name":"open override var onConnectionListener: OnConnectionListener?","description":"io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.onConnectionListener","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-screen-recorder-live-streamer/on-connection-listener.html","searchKeys":["onConnectionListener","open override var onConnectionListener: OnConnectionListener?","io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.onConnectionListener"]},{"name":"open override var onErrorListener: OnErrorListener?","description":"io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.onErrorListener","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-streamer/on-error-listener.html","searchKeys":["onErrorListener","open override var onErrorListener: OnErrorListener?","io.github.thibaultbee.streampack.streamers.bases.BaseStreamer.onErrorListener"]},{"name":"open override var settings: BaseCameraStreamerSettings","description":"io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.settings","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-camera-streamer/settings.html","searchKeys":["settings","open override var settings: BaseCameraStreamerSettings","io.github.thibaultbee.streampack.streamers.bases.BaseCameraStreamer.settings"]},{"name":"open suspend override fun connect(url: String)","description":"io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.connect","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-audio-only-live-streamer/connect.html","searchKeys":["connect","open suspend override fun connect(url: String)","io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.connect"]},{"name":"open suspend override fun connect(url: String)","description":"io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.connect","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-camera-live-streamer/connect.html","searchKeys":["connect","open suspend override fun connect(url: String)","io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.connect"]},{"name":"open suspend override fun connect(url: String)","description":"io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.connect","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-screen-recorder-live-streamer/connect.html","searchKeys":["connect","open suspend override fun connect(url: String)","io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.connect"]},{"name":"open suspend override fun startStream(url: String)","description":"io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.startStream","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-audio-only-live-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream(url: String)","io.github.thibaultbee.streampack.streamers.live.BaseAudioOnlyLiveStreamer.startStream"]},{"name":"open suspend override fun startStream(url: String)","description":"io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.startStream","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-camera-live-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream(url: String)","io.github.thibaultbee.streampack.streamers.live.BaseCameraLiveStreamer.startStream"]},{"name":"open suspend override fun startStream(url: String)","description":"io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.startStream","location":"core/io.github.thibaultbee.streampack.streamers.live/-base-screen-recorder-live-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream(url: String)","io.github.thibaultbee.streampack.streamers.live.BaseScreenRecorderLiveStreamer.startStream"]},{"name":"val SIZE_1080P: SmartSize","description":"io.github.thibaultbee.streampack.views.SIZE_1080P","location":"core/io.github.thibaultbee.streampack.views/-s-i-z-e_1080-p.html","searchKeys":["SIZE_1080P","val SIZE_1080P: SmartSize","io.github.thibaultbee.streampack.views.SIZE_1080P"]},{"name":"val audioBitrateRange: Range<Int>","description":"io.github.thibaultbee.streampack.data.BitrateRegulatorConfig.audioBitrateRange","location":"core/io.github.thibaultbee.streampack.data/-bitrate-regulator-config/audio-bitrate-range.html","searchKeys":["audioBitrateRange","val audioBitrateRange: Range<Int>","io.github.thibaultbee.streampack.data.BitrateRegulatorConfig.audioBitrateRange"]},{"name":"val available: Boolean","description":"io.github.thibaultbee.streampack.utils.Flash.available","location":"core/io.github.thibaultbee.streampack.utils/-flash/available.html","searchKeys":["available","val available: Boolean","io.github.thibaultbee.streampack.utils.Flash.available"]},{"name":"val availableAutoModes: List<Int>","description":"io.github.thibaultbee.streampack.utils.Focus.availableAutoModes","location":"core/io.github.thibaultbee.streampack.utils/-focus/available-auto-modes.html","searchKeys":["availableAutoModes","val availableAutoModes: List<Int>","io.github.thibaultbee.streampack.utils.Focus.availableAutoModes"]},{"name":"val availableAutoModes: List<Int>","description":"io.github.thibaultbee.streampack.utils.WhiteBalance.availableAutoModes","location":"core/io.github.thibaultbee.streampack.utils/-white-balance/available-auto-modes.html","searchKeys":["availableAutoModes","val availableAutoModes: List<Int>","io.github.thibaultbee.streampack.utils.WhiteBalance.availableAutoModes"]},{"name":"val availableCompensationRange: Range<Int>","description":"io.github.thibaultbee.streampack.utils.Exposure.availableCompensationRange","location":"core/io.github.thibaultbee.streampack.utils/-exposure/available-compensation-range.html","searchKeys":["availableCompensationRange","val availableCompensationRange: Range<Int>","io.github.thibaultbee.streampack.utils.Exposure.availableCompensationRange"]},{"name":"val availableCompensationStep: Rational","description":"io.github.thibaultbee.streampack.utils.Exposure.availableCompensationStep","location":"core/io.github.thibaultbee.streampack.utils/-exposure/available-compensation-step.html","searchKeys":["availableCompensationStep","val availableCompensationStep: Rational","io.github.thibaultbee.streampack.utils.Exposure.availableCompensationStep"]},{"name":"val availableLensDistanceRange: Range<Float>","description":"io.github.thibaultbee.streampack.utils.Focus.availableLensDistanceRange","location":"core/io.github.thibaultbee.streampack.utils/-focus/available-lens-distance-range.html","searchKeys":["availableLensDistanceRange","val availableLensDistanceRange: Range<Float>","io.github.thibaultbee.streampack.utils.Focus.availableLensDistanceRange"]},{"name":"val availableOptical: Boolean","description":"io.github.thibaultbee.streampack.utils.Stabilization.availableOptical","location":"core/io.github.thibaultbee.streampack.utils/-stabilization/available-optical.html","searchKeys":["availableOptical","val availableOptical: Boolean","io.github.thibaultbee.streampack.utils.Stabilization.availableOptical"]},{"name":"val availableRatioRange: Range<Float>","description":"io.github.thibaultbee.streampack.utils.Zoom.availableRatioRange","location":"core/io.github.thibaultbee.streampack.utils/-zoom/available-ratio-range.html","searchKeys":["availableRatioRange","val availableRatioRange: Range<Float>","io.github.thibaultbee.streampack.utils.Zoom.availableRatioRange"]},{"name":"val byteFormat: Int","description":"io.github.thibaultbee.streampack.data.AudioConfig.byteFormat","location":"core/io.github.thibaultbee.streampack.data/-audio-config/byte-format.html","searchKeys":["byteFormat","val byteFormat: Int","io.github.thibaultbee.streampack.data.AudioConfig.byteFormat"]},{"name":"val channelConfig: Int","description":"io.github.thibaultbee.streampack.data.AudioConfig.channelConfig","location":"core/io.github.thibaultbee.streampack.data/-audio-config/channel-config.html","searchKeys":["channelConfig","val channelConfig: Int","io.github.thibaultbee.streampack.data.AudioConfig.channelConfig"]},{"name":"val defaultTsServiceInfo: TsServiceInfo","description":"io.github.thibaultbee.streampack.utils.Utils.defaultTsServiceInfo","location":"core/io.github.thibaultbee.streampack.utils/-utils/default-ts-service-info.html","searchKeys":["defaultTsServiceInfo","val defaultTsServiceInfo: TsServiceInfo","io.github.thibaultbee.streampack.utils.Utils.defaultTsServiceInfo"]},{"name":"val enableEchoCanceler: Boolean = true","description":"io.github.thibaultbee.streampack.data.AudioConfig.enableEchoCanceler","location":"core/io.github.thibaultbee.streampack.data/-audio-config/enable-echo-canceler.html","searchKeys":["enableEchoCanceler","val enableEchoCanceler: Boolean = true","io.github.thibaultbee.streampack.data.AudioConfig.enableEchoCanceler"]},{"name":"val enableNoiseSuppressor: Boolean = true","description":"io.github.thibaultbee.streampack.data.AudioConfig.enableNoiseSuppressor","location":"core/io.github.thibaultbee.streampack.data/-audio-config/enable-noise-suppressor.html","searchKeys":["enableNoiseSuppressor","val enableNoiseSuppressor: Boolean = true","io.github.thibaultbee.streampack.data.AudioConfig.enableNoiseSuppressor"]},{"name":"val exposure: Exposure","description":"io.github.thibaultbee.streampack.utils.CameraSettings.exposure","location":"core/io.github.thibaultbee.streampack.utils/-camera-settings/exposure.html","searchKeys":["exposure","val exposure: Exposure","io.github.thibaultbee.streampack.utils.CameraSettings.exposure"]},{"name":"val flash: Flash","description":"io.github.thibaultbee.streampack.utils.CameraSettings.flash","location":"core/io.github.thibaultbee.streampack.utils/-camera-settings/flash.html","searchKeys":["flash","val flash: Flash","io.github.thibaultbee.streampack.utils.CameraSettings.flash"]},{"name":"val focus: Focus","description":"io.github.thibaultbee.streampack.utils.CameraSettings.focus","location":"core/io.github.thibaultbee.streampack.utils/-camera-settings/focus.html","searchKeys":["focus","val focus: Focus","io.github.thibaultbee.streampack.utils.CameraSettings.focus"]},{"name":"val fps: Int = 30","description":"io.github.thibaultbee.streampack.data.VideoConfig.fps","location":"core/io.github.thibaultbee.streampack.data/-video-config/fps.html","searchKeys":["fps","val fps: Int = 30","io.github.thibaultbee.streampack.data.VideoConfig.fps"]},{"name":"val level: Int","description":"io.github.thibaultbee.streampack.data.VideoConfig.level","location":"core/io.github.thibaultbee.streampack.data/-video-config/level.html","searchKeys":["level","val level: Int","io.github.thibaultbee.streampack.data.VideoConfig.level"]},{"name":"val mimeType: String","description":"io.github.thibaultbee.streampack.data.Config.mimeType","location":"core/io.github.thibaultbee.streampack.data/-config/mime-type.html","searchKeys":["mimeType","val mimeType: String","io.github.thibaultbee.streampack.data.Config.mimeType"]},{"name":"val profile: Int","description":"io.github.thibaultbee.streampack.data.VideoConfig.profile","location":"core/io.github.thibaultbee.streampack.data/-video-config/profile.html","searchKeys":["profile","val profile: Int","io.github.thibaultbee.streampack.data.VideoConfig.profile"]},{"name":"val resolution: Size","description":"io.github.thibaultbee.streampack.data.VideoConfig.resolution","location":"core/io.github.thibaultbee.streampack.data/-video-config/resolution.html","searchKeys":["resolution","val resolution: Size","io.github.thibaultbee.streampack.data.VideoConfig.resolution"]},{"name":"val sampleRate: Int = 44100","description":"io.github.thibaultbee.streampack.data.AudioConfig.sampleRate","location":"core/io.github.thibaultbee.streampack.data/-audio-config/sample-rate.html","searchKeys":["sampleRate","val sampleRate: Int = 44100","io.github.thibaultbee.streampack.data.AudioConfig.sampleRate"]},{"name":"val stabilization: Stabilization","description":"io.github.thibaultbee.streampack.utils.CameraSettings.stabilization","location":"core/io.github.thibaultbee.streampack.utils/-camera-settings/stabilization.html","searchKeys":["stabilization","val stabilization: Stabilization","io.github.thibaultbee.streampack.utils.CameraSettings.stabilization"]},{"name":"val startBitrate: Int","description":"io.github.thibaultbee.streampack.data.Config.startBitrate","location":"core/io.github.thibaultbee.streampack.data/-config/start-bitrate.html","searchKeys":["startBitrate","val startBitrate: Int","io.github.thibaultbee.streampack.data.Config.startBitrate"]},{"name":"val videoBitrateRange: Range<Int>","description":"io.github.thibaultbee.streampack.data.BitrateRegulatorConfig.videoBitrateRange","location":"core/io.github.thibaultbee.streampack.data/-bitrate-regulator-config/video-bitrate-range.html","searchKeys":["videoBitrateRange","val videoBitrateRange: Range<Int>","io.github.thibaultbee.streampack.data.BitrateRegulatorConfig.videoBitrateRange"]},{"name":"val whiteBalance: WhiteBalance","description":"io.github.thibaultbee.streampack.utils.CameraSettings.whiteBalance","location":"core/io.github.thibaultbee.streampack.utils/-camera-settings/white-balance.html","searchKeys":["whiteBalance","val whiteBalance: WhiteBalance","io.github.thibaultbee.streampack.utils.CameraSettings.whiteBalance"]},{"name":"val zoom: Zoom","description":"io.github.thibaultbee.streampack.utils.CameraSettings.zoom","location":"core/io.github.thibaultbee.streampack.utils/-camera-settings/zoom.html","searchKeys":["zoom","val zoom: Zoom","io.github.thibaultbee.streampack.utils.CameraSettings.zoom"]},{"name":"var activityResult: ActivityResult?","description":"io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.activityResult","location":"core/io.github.thibaultbee.streampack.streamers.bases/-base-screen-recorder-streamer/activity-result.html","searchKeys":["activityResult","var activityResult: ActivityResult?","io.github.thibaultbee.streampack.streamers.bases.BaseScreenRecorderStreamer.activityResult"]},{"name":"var autoMode: Int","description":"io.github.thibaultbee.streampack.utils.Focus.autoMode","location":"core/io.github.thibaultbee.streampack.utils/-focus/auto-mode.html","searchKeys":["autoMode","var autoMode: Int","io.github.thibaultbee.streampack.utils.Focus.autoMode"]},{"name":"var autoMode: Int","description":"io.github.thibaultbee.streampack.utils.WhiteBalance.autoMode","location":"core/io.github.thibaultbee.streampack.utils/-white-balance/auto-mode.html","searchKeys":["autoMode","var autoMode: Int","io.github.thibaultbee.streampack.utils.WhiteBalance.autoMode"]},{"name":"var compensation: Int","description":"io.github.thibaultbee.streampack.utils.Exposure.compensation","location":"core/io.github.thibaultbee.streampack.utils/-exposure/compensation.html","searchKeys":["compensation","var compensation: Int","io.github.thibaultbee.streampack.utils.Exposure.compensation"]},{"name":"var enable: Boolean","description":"io.github.thibaultbee.streampack.utils.Flash.enable","location":"core/io.github.thibaultbee.streampack.utils/-flash/enable.html","searchKeys":["enable","var enable: Boolean","io.github.thibaultbee.streampack.utils.Flash.enable"]},{"name":"var enableOptical: Boolean","description":"io.github.thibaultbee.streampack.utils.Stabilization.enableOptical","location":"core/io.github.thibaultbee.streampack.utils/-stabilization/enable-optical.html","searchKeys":["enableOptical","var enableOptical: Boolean","io.github.thibaultbee.streampack.utils.Stabilization.enableOptical"]},{"name":"var enableVideo: Boolean","description":"io.github.thibaultbee.streampack.utils.Stabilization.enableVideo","location":"core/io.github.thibaultbee.streampack.utils/-stabilization/enable-video.html","searchKeys":["enableVideo","var enableVideo: Boolean","io.github.thibaultbee.streampack.utils.Stabilization.enableVideo"]},{"name":"var lensDistance: Float","description":"io.github.thibaultbee.streampack.utils.Focus.lensDistance","location":"core/io.github.thibaultbee.streampack.utils/-focus/lens-distance.html","searchKeys":["lensDistance","var lensDistance: Float","io.github.thibaultbee.streampack.utils.Focus.lensDistance"]},{"name":"var long: Int","description":"io.github.thibaultbee.streampack.views.SmartSize.long","location":"core/io.github.thibaultbee.streampack.views/-smart-size/long.html","searchKeys":["long","var long: Int","io.github.thibaultbee.streampack.views.SmartSize.long"]},{"name":"var short: Int","description":"io.github.thibaultbee.streampack.views.SmartSize.short","location":"core/io.github.thibaultbee.streampack.views/-smart-size/short.html","searchKeys":["short","var short: Int","io.github.thibaultbee.streampack.views.SmartSize.short"]},{"name":"var size: Size","description":"io.github.thibaultbee.streampack.views.SmartSize.size","location":"core/io.github.thibaultbee.streampack.views/-smart-size/size.html","searchKeys":["size","var size: Size","io.github.thibaultbee.streampack.views.SmartSize.size"]},{"name":"var zoomRatio: Float","description":"io.github.thibaultbee.streampack.utils.Zoom.zoomRatio","location":"core/io.github.thibaultbee.streampack.utils/-zoom/zoom-ratio.html","searchKeys":["zoomRatio","var zoomRatio: Float","io.github.thibaultbee.streampack.utils.Zoom.zoomRatio"]},{"name":"class AudioOnlyRtmpLiveStreamer(context: Context, logger: ILogger, initialOnErrorListener: OnErrorListener?, initialOnConnectionListener: OnConnectionListener?) : BaseAudioOnlyLiveStreamer","description":"io.github.thibaultbee.streampack.ext.rtmp.streamers.AudioOnlyRtmpLiveStreamer","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.streamers/-audio-only-rtmp-live-streamer/index.html","searchKeys":["AudioOnlyRtmpLiveStreamer","class AudioOnlyRtmpLiveStreamer(context: Context, logger: ILogger, initialOnErrorListener: OnErrorListener?, initialOnConnectionListener: OnConnectionListener?) : BaseAudioOnlyLiveStreamer","io.github.thibaultbee.streampack.ext.rtmp.streamers.AudioOnlyRtmpLiveStreamer"]},{"name":"class CameraRtmpLiveStreamer(context: Context, logger: ILogger, enableAudio: Boolean, initialOnErrorListener: OnErrorListener?, initialOnConnectionListener: OnConnectionListener?) : BaseCameraLiveStreamer","description":"io.github.thibaultbee.streampack.ext.rtmp.streamers.CameraRtmpLiveStreamer","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.streamers/-camera-rtmp-live-streamer/index.html","searchKeys":["CameraRtmpLiveStreamer","class CameraRtmpLiveStreamer(context: Context, logger: ILogger, enableAudio: Boolean, initialOnErrorListener: OnErrorListener?, initialOnConnectionListener: OnConnectionListener?) : BaseCameraLiveStreamer","io.github.thibaultbee.streampack.ext.rtmp.streamers.CameraRtmpLiveStreamer"]},{"name":"class ScreenRecorderRtmpLiveStreamer(context: Context, logger: ILogger, enableAudio: Boolean, initialOnErrorListener: OnErrorListener?, initialOnConnectionListener: OnConnectionListener?) : BaseScreenRecorderLiveStreamer","description":"io.github.thibaultbee.streampack.ext.rtmp.streamers.ScreenRecorderRtmpLiveStreamer","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.streamers/-screen-recorder-rtmp-live-streamer/index.html","searchKeys":["ScreenRecorderRtmpLiveStreamer","class ScreenRecorderRtmpLiveStreamer(context: Context, logger: ILogger, enableAudio: Boolean, initialOnErrorListener: OnErrorListener?, initialOnConnectionListener: OnConnectionListener?) : BaseScreenRecorderLiveStreamer","io.github.thibaultbee.streampack.ext.rtmp.streamers.ScreenRecorderRtmpLiveStreamer"]},{"name":"fun AudioOnlyRtmpLiveStreamer(context: Context, logger: ILogger = StreamPackLogger(), initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","description":"io.github.thibaultbee.streampack.ext.rtmp.streamers.AudioOnlyRtmpLiveStreamer.AudioOnlyRtmpLiveStreamer","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.streamers/-audio-only-rtmp-live-streamer/-audio-only-rtmp-live-streamer.html","searchKeys":["AudioOnlyRtmpLiveStreamer","fun AudioOnlyRtmpLiveStreamer(context: Context, logger: ILogger = StreamPackLogger(), initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","io.github.thibaultbee.streampack.ext.rtmp.streamers.AudioOnlyRtmpLiveStreamer.AudioOnlyRtmpLiveStreamer"]},{"name":"fun CameraRtmpLiveStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","description":"io.github.thibaultbee.streampack.ext.rtmp.streamers.CameraRtmpLiveStreamer.CameraRtmpLiveStreamer","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.streamers/-camera-rtmp-live-streamer/-camera-rtmp-live-streamer.html","searchKeys":["CameraRtmpLiveStreamer","fun CameraRtmpLiveStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","io.github.thibaultbee.streampack.ext.rtmp.streamers.CameraRtmpLiveStreamer.CameraRtmpLiveStreamer"]},{"name":"fun ScreenRecorderRtmpLiveStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","description":"io.github.thibaultbee.streampack.ext.rtmp.streamers.ScreenRecorderRtmpLiveStreamer.ScreenRecorderRtmpLiveStreamer","location":"extension-rtmp/io.github.thibaultbee.streampack.ext.rtmp.streamers/-screen-recorder-rtmp-live-streamer/-screen-recorder-rtmp-live-streamer.html","searchKeys":["ScreenRecorderRtmpLiveStreamer","fun ScreenRecorderRtmpLiveStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","io.github.thibaultbee.streampack.ext.rtmp.streamers.ScreenRecorderRtmpLiveStreamer.ScreenRecorderRtmpLiveStreamer"]},{"name":"abstract class SrtBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit) : BitrateRegulator","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.SrtBitrateRegulator","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-srt-bitrate-regulator/index.html","searchKeys":["SrtBitrateRegulator","abstract class SrtBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit) : BitrateRegulator","io.github.thibaultbee.streampack.ext.srt.regulator.srt.SrtBitrateRegulator"]},{"name":"abstract fun update(stats: Stats, currentVideoBitrate: Int, currentAudioBitrate: Int)","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.SrtBitrateRegulator.update","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-srt-bitrate-regulator/update.html","searchKeys":["update","abstract fun update(stats: Stats, currentVideoBitrate: Int, currentAudioBitrate: Int)","io.github.thibaultbee.streampack.ext.srt.regulator.srt.SrtBitrateRegulator.update"]},{"name":"abstract suspend fun connect(ip: String, port: Int)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer.connect","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers.interfaces/-i-srt-live-streamer/connect.html","searchKeys":["connect","abstract suspend fun connect(ip: String, port: Int)","io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer.connect"]},{"name":"abstract suspend fun startStream(ip: String, port: Int)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer.startStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers.interfaces/-i-srt-live-streamer/start-stream.html","searchKeys":["startStream","abstract suspend fun startStream(ip: String, port: Int)","io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer.startStream"]},{"name":"abstract var passPhrase: String","description":"io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer.passPhrase","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers.interfaces/-i-srt-live-streamer/pass-phrase.html","searchKeys":["passPhrase","abstract var passPhrase: String","io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer.passPhrase"]},{"name":"abstract var streamId: String","description":"io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer.streamId","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers.interfaces/-i-srt-live-streamer/stream-id.html","searchKeys":["streamId","abstract var streamId: String","io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer.streamId"]},{"name":"class AudioOnlySrtLiveStreamer(context: Context, tsServiceInfo: TsServiceInfo, logger: ILogger, initialOnErrorListener: OnErrorListener?, initialOnConnectionListener: OnConnectionListener?) : BaseAudioOnlyLiveStreamer, ISrtLiveStreamer","description":"io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-audio-only-srt-live-streamer/index.html","searchKeys":["AudioOnlySrtLiveStreamer","class AudioOnlySrtLiveStreamer(context: Context, tsServiceInfo: TsServiceInfo, logger: ILogger, initialOnErrorListener: OnErrorListener?, initialOnConnectionListener: OnConnectionListener?) : BaseAudioOnlyLiveStreamer, ISrtLiveStreamer","io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer"]},{"name":"class CameraSrtLiveStreamer(context: Context, logger: ILogger, enableAudio: Boolean, tsServiceInfo: TsServiceInfo, bitrateRegulatorFactory: IBitrateRegulatorFactory?, bitrateRegulatorConfig: BitrateRegulatorConfig?, initialOnErrorListener: OnErrorListener?, initialOnConnectionListener: OnConnectionListener?) : BaseCameraLiveStreamer, ISrtLiveStreamer","description":"io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-camera-srt-live-streamer/index.html","searchKeys":["CameraSrtLiveStreamer","class CameraSrtLiveStreamer(context: Context, logger: ILogger, enableAudio: Boolean, tsServiceInfo: TsServiceInfo, bitrateRegulatorFactory: IBitrateRegulatorFactory?, bitrateRegulatorConfig: BitrateRegulatorConfig?, initialOnErrorListener: OnErrorListener?, initialOnConnectionListener: OnConnectionListener?) : BaseCameraLiveStreamer, ISrtLiveStreamer","io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer"]},{"name":"class DefaultSrtBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit) : SrtBitrateRegulator","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator/index.html","searchKeys":["DefaultSrtBitrateRegulator","class DefaultSrtBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit) : SrtBitrateRegulator","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator"]},{"name":"class DefaultSrtBitrateRegulatorFactory : IBitrateRegulatorFactory","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulatorFactory","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator-factory/index.html","searchKeys":["DefaultSrtBitrateRegulatorFactory","class DefaultSrtBitrateRegulatorFactory : IBitrateRegulatorFactory","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulatorFactory"]},{"name":"class ScreenRecorderSrtLiveStreamer(context: Context, logger: ILogger, enableAudio: Boolean, tsServiceInfo: TsServiceInfo, bitrateRegulatorFactory: IBitrateRegulatorFactory?, bitrateRegulatorConfig: BitrateRegulatorConfig?, initialOnErrorListener: OnErrorListener?, initialOnConnectionListener: OnConnectionListener?) : BaseScreenRecorderLiveStreamer, ISrtLiveStreamer","description":"io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-screen-recorder-srt-live-streamer/index.html","searchKeys":["ScreenRecorderSrtLiveStreamer","class ScreenRecorderSrtLiveStreamer(context: Context, logger: ILogger, enableAudio: Boolean, tsServiceInfo: TsServiceInfo, bitrateRegulatorFactory: IBitrateRegulatorFactory?, bitrateRegulatorConfig: BitrateRegulatorConfig?, initialOnErrorListener: OnErrorListener?, initialOnConnectionListener: OnConnectionListener?) : BaseScreenRecorderLiveStreamer, ISrtLiveStreamer","io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer"]},{"name":"const val MAXIMUM_INCREASE_THRESHOLD: Int = 200000","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.Companion.MAXIMUM_INCREASE_THRESHOLD","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator/-companion/-m-a-x-i-m-u-m_-i-n-c-r-e-a-s-e_-t-h-r-e-s-h-o-l-d.html","searchKeys":["MAXIMUM_INCREASE_THRESHOLD","const val MAXIMUM_INCREASE_THRESHOLD: Int = 200000","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.Companion.MAXIMUM_INCREASE_THRESHOLD"]},{"name":"const val MINIMUM_DECREASE_THRESHOLD: Int = 100000","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.Companion.MINIMUM_DECREASE_THRESHOLD","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator/-companion/-m-i-n-i-m-u-m_-d-e-c-r-e-a-s-e_-t-h-r-e-s-h-o-l-d.html","searchKeys":["MINIMUM_DECREASE_THRESHOLD","const val MINIMUM_DECREASE_THRESHOLD: Int = 100000","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.Companion.MINIMUM_DECREASE_THRESHOLD"]},{"name":"const val SEND_PACKET_THRESHOLD: Int = 50","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.Companion.SEND_PACKET_THRESHOLD","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator/-companion/-s-e-n-d_-p-a-c-k-e-t_-t-h-r-e-s-h-o-l-d.html","searchKeys":["SEND_PACKET_THRESHOLD","const val SEND_PACKET_THRESHOLD: Int = 50","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.Companion.SEND_PACKET_THRESHOLD"]},{"name":"fun AudioOnlySrtLiveStreamer(context: Context, tsServiceInfo: TsServiceInfo = Utils.defaultTsServiceInfo, logger: ILogger = StreamPackLogger(), initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.AudioOnlySrtLiveStreamer","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-audio-only-srt-live-streamer/-audio-only-srt-live-streamer.html","searchKeys":["AudioOnlySrtLiveStreamer","fun AudioOnlySrtLiveStreamer(context: Context, tsServiceInfo: TsServiceInfo = Utils.defaultTsServiceInfo, logger: ILogger = StreamPackLogger(), initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.AudioOnlySrtLiveStreamer"]},{"name":"fun CameraSrtLiveStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = Utils.defaultTsServiceInfo, bitrateRegulatorFactory: IBitrateRegulatorFactory? = null, bitrateRegulatorConfig: BitrateRegulatorConfig? = null, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.CameraSrtLiveStreamer","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-camera-srt-live-streamer/-camera-srt-live-streamer.html","searchKeys":["CameraSrtLiveStreamer","fun CameraSrtLiveStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = Utils.defaultTsServiceInfo, bitrateRegulatorFactory: IBitrateRegulatorFactory? = null, bitrateRegulatorConfig: BitrateRegulatorConfig? = null, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.CameraSrtLiveStreamer"]},{"name":"fun DefaultSrtBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.DefaultSrtBitrateRegulator","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator/-default-srt-bitrate-regulator.html","searchKeys":["DefaultSrtBitrateRegulator","fun DefaultSrtBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.DefaultSrtBitrateRegulator"]},{"name":"fun DefaultSrtBitrateRegulatorFactory()","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulatorFactory.DefaultSrtBitrateRegulatorFactory","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator-factory/-default-srt-bitrate-regulator-factory.html","searchKeys":["DefaultSrtBitrateRegulatorFactory","fun DefaultSrtBitrateRegulatorFactory()","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulatorFactory.DefaultSrtBitrateRegulatorFactory"]},{"name":"fun ScreenRecorderSrtLiveStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = Utils.defaultTsServiceInfo, bitrateRegulatorFactory: IBitrateRegulatorFactory? = null, bitrateRegulatorConfig: BitrateRegulatorConfig? = null, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.ScreenRecorderSrtLiveStreamer","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-screen-recorder-srt-live-streamer/-screen-recorder-srt-live-streamer.html","searchKeys":["ScreenRecorderSrtLiveStreamer","fun ScreenRecorderSrtLiveStreamer(context: Context, logger: ILogger = StreamPackLogger(), enableAudio: Boolean = true, tsServiceInfo: TsServiceInfo = Utils.defaultTsServiceInfo, bitrateRegulatorFactory: IBitrateRegulatorFactory? = null, bitrateRegulatorConfig: BitrateRegulatorConfig? = null, initialOnErrorListener: OnErrorListener? = null, initialOnConnectionListener: OnConnectionListener? = null)","io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.ScreenRecorderSrtLiveStreamer"]},{"name":"fun SrtBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.SrtBitrateRegulator.SrtBitrateRegulator","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-srt-bitrate-regulator/-srt-bitrate-regulator.html","searchKeys":["SrtBitrateRegulator","fun SrtBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit)","io.github.thibaultbee.streampack.ext.srt.regulator.srt.SrtBitrateRegulator.SrtBitrateRegulator"]},{"name":"interface ISrtLiveStreamer : ILiveStreamer","description":"io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers.interfaces/-i-srt-live-streamer/index.html","searchKeys":["ISrtLiveStreamer","interface ISrtLiveStreamer : ILiveStreamer","io.github.thibaultbee.streampack.ext.srt.streamers.interfaces.ISrtLiveStreamer"]},{"name":"object Companion","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.Companion","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator/-companion/index.html","searchKeys":["Companion","object Companion","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.Companion"]},{"name":"open override fun newBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit): DefaultSrtBitrateRegulator","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulatorFactory.newBitrateRegulator","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator-factory/new-bitrate-regulator.html","searchKeys":["newBitrateRegulator","open override fun newBitrateRegulator(bitrateRegulatorConfig: BitrateRegulatorConfig, onVideoTargetBitrateChange: (Int) -> Unit, onAudioTargetBitrateChange: (Int) -> Unit): DefaultSrtBitrateRegulator","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulatorFactory.newBitrateRegulator"]},{"name":"open override fun startStream()","description":"io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.startStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-camera-srt-live-streamer/start-stream.html","searchKeys":["startStream","open override fun startStream()","io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.startStream"]},{"name":"open override fun startStream()","description":"io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.startStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-screen-recorder-srt-live-streamer/start-stream.html","searchKeys":["startStream","open override fun startStream()","io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.startStream"]},{"name":"open override fun stopStream()","description":"io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.stopStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-camera-srt-live-streamer/stop-stream.html","searchKeys":["stopStream","open override fun stopStream()","io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.stopStream"]},{"name":"open override fun stopStream()","description":"io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.stopStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-screen-recorder-srt-live-streamer/stop-stream.html","searchKeys":["stopStream","open override fun stopStream()","io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.stopStream"]},{"name":"open override fun update(stats: Stats, currentVideoBitrate: Int, currentAudioBitrate: Int)","description":"io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.update","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.regulator.srt/-default-srt-bitrate-regulator/update.html","searchKeys":["update","open override fun update(stats: Stats, currentVideoBitrate: Int, currentAudioBitrate: Int)","io.github.thibaultbee.streampack.ext.srt.regulator.srt.DefaultSrtBitrateRegulator.update"]},{"name":"open override var passPhrase: String","description":"io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.passPhrase","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-audio-only-srt-live-streamer/pass-phrase.html","searchKeys":["passPhrase","open override var passPhrase: String","io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.passPhrase"]},{"name":"open override var passPhrase: String","description":"io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.passPhrase","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-camera-srt-live-streamer/pass-phrase.html","searchKeys":["passPhrase","open override var passPhrase: String","io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.passPhrase"]},{"name":"open override var passPhrase: String","description":"io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.passPhrase","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-screen-recorder-srt-live-streamer/pass-phrase.html","searchKeys":["passPhrase","open override var passPhrase: String","io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.passPhrase"]},{"name":"open override var streamId: String","description":"io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.streamId","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-audio-only-srt-live-streamer/stream-id.html","searchKeys":["streamId","open override var streamId: String","io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.streamId"]},{"name":"open override var streamId: String","description":"io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.streamId","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-camera-srt-live-streamer/stream-id.html","searchKeys":["streamId","open override var streamId: String","io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.streamId"]},{"name":"open override var streamId: String","description":"io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.streamId","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-screen-recorder-srt-live-streamer/stream-id.html","searchKeys":["streamId","open override var streamId: String","io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.streamId"]},{"name":"open suspend override fun connect(ip: String, port: Int)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.connect","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-audio-only-srt-live-streamer/connect.html","searchKeys":["connect","open suspend override fun connect(ip: String, port: Int)","io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.connect"]},{"name":"open suspend override fun connect(ip: String, port: Int)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.connect","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-camera-srt-live-streamer/connect.html","searchKeys":["connect","open suspend override fun connect(ip: String, port: Int)","io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.connect"]},{"name":"open suspend override fun connect(ip: String, port: Int)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.connect","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-screen-recorder-srt-live-streamer/connect.html","searchKeys":["connect","open suspend override fun connect(ip: String, port: Int)","io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.connect"]},{"name":"open suspend override fun startStream(ip: String, port: Int)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.startStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-audio-only-srt-live-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream(ip: String, port: Int)","io.github.thibaultbee.streampack.ext.srt.streamers.AudioOnlySrtLiveStreamer.startStream"]},{"name":"open suspend override fun startStream(ip: String, port: Int)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.startStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-camera-srt-live-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream(ip: String, port: Int)","io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.startStream"]},{"name":"open suspend override fun startStream(ip: String, port: Int)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.startStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-screen-recorder-srt-live-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream(ip: String, port: Int)","io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.startStream"]},{"name":"open suspend override fun startStream(url: String)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.startStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-camera-srt-live-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream(url: String)","io.github.thibaultbee.streampack.ext.srt.streamers.CameraSrtLiveStreamer.startStream"]},{"name":"open suspend override fun startStream(url: String)","description":"io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.startStream","location":"extension-srt/io.github.thibaultbee.streampack.ext.srt.streamers/-screen-recorder-srt-live-streamer/start-stream.html","searchKeys":["startStream","open suspend override fun startStream(url: String)","io.github.thibaultbee.streampack.ext.srt.streamers.ScreenRecorderSrtLiveStreamer.startStream"]}]